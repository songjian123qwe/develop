{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/uapbd/org/postseries/main/index.js","webpack://[name]/./src/uapbd/org/postseries/main/index.less?c8f5","webpack://[name]/./src/uapbd/org/postseries/main/index.less","webpack://[name]/./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js","webpack://[name]/./src/uapbd/org/postseries_glb/main/index.js","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/urls.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","pageCfg","arguments","length","undefined","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","content","color","MultiInit","getMultiLang","createUIDom","_react","base","NCMessage","NCDropdown","NCMenu","NCCheckbox","PrintOutput","NCPopconfirm","NCMenuGroup","high","formdata","urls","loadTreeDataUrl","queryCardUrl","enablestateUrl","addCardUrl","deleteUrl","saveUrl","print","isPermission","pageCode","appcode","postseriesTs","Date","valueOf","toString","Postseries","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","config","assign","treeId","formId","nodeType","isGlbGrp","isleaf","title","id","innercode","pid","refname","refpk","initButtonStatus","changeButtonStatus","onStartPostseries","onStopPostseries","dealTreeData","state","checked","curSelectedNode","showOffDisable","addSelNodeId","pks","treeDisabledSearch","json","initTemplate","Component","forEach","e","iconBox","editIcon","addIcon","delIcon","deleteDataChildrenProp","node","children","isLeaf","l_formstatus","form","getFormStatus","onbeforeunload","_this2","requestParam","ajax","url","_extends","syncTree","setSyncTreeData","openNodeByPk","setNodeSelected","button","setDisabled","getSelectNode","setState","setButtonVisible","_this3","EmptyAllFormValue","setFormItemsDisabled","enablestate","pk_postseries","dealDisplayFm","dealFormData","setAllFormValue","selectedTreeNode","nodeData","isGrp","isChangeEnable","headData","head","rows","values","enablestateValue","father_pk","display","index","_this4","res","setFormItemsValue","ts","getFormItemsValue","promptBox","beSureBtnClick","cancelBtnClick","closeBtnClick","selectNode","_this5","setFormStatus","setNodeDisable","_this6","doEditPostseries","_this7","_this8","onSelectTree","onSavePostseries","isSaveAdd","onCancelPostseries","printParam","funcode","nodekey","pintFunction","refs","printOutput","open","param","oids","_this9","_ref$isSaveAdd","isCheckNow","formData","getAllFormValue","areacode","model","pageid","pk","nonPk","validateToSave","addNodeSuccess","childrenTree","asyncTree","delTreeData","onAddPostseries","_defineProperty","_this10","message","_this11","_this12","getSelectNodeAsync","refreshTreeNode","_this13","_ref2","obj","hideIcon","_this14","delNodeSuceess","_this15","_props","modal","search","DragWidthCom","createSyncTree","createAsyncTree","createForm","createButtonApp","createModal","NCCreateSearch","Item","_react2","default","createElement","className","defaultChecked","onChange","onCheckBoxClick","disabled","size","area","buttonLimit","onButtonClick","popContainer","document","querySelector","leftDom","needEdit","showLine","needSearch","onSelectEve","onMouseEnterEve","clickEditIconEve","onEditPostseries","clickAddIconEve","clickDelIconEve","onDeletePostseries","showModal","disabledSearch","rightDom","cancelPSwitch","onAfterEvent","onAfterFormEvent","defLeftWid","ref","outputType","isGlb","_BDCreateUIDom2","pagecode","domainName","_this16","template","items","map","attrcode","isEnable","TreeRefActionExt","meta","setMeta","setButtons","formulamsg","Array","dealFormulamsg","options","transform","locals","push","useSourceMap","list","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","Postseries_Glb","createPage","billinfo","billtype","headcode","ReactDOM","render","stylesInDom","isOldIE","fn","memo","apply","memoize","all","atob","getElement","selector","target","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","j","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","attrs","type","addAttrs","el","keys","setAttribute","update","remove","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test"],"mappings":"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","file":"uapbd/org/postseries_glb/main/index.01a243d2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/org/postseries_glb/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/org/postseries_glb/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 386);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/**\n * 岗位序列\n * @author\txuewenc\n */\nimport React, { Component } from 'react';\nimport { createPage, base, ajax ,NCCreateSearch,toast,print,high,promptBox} from 'nc-lightapp-front';\nimport './index.less';\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\nconst { NCMessage,NCDropdown,NCMenu,NCCheckbox,NCPopconfirm} = base;\nconst {NCMenuGroup} = NCMenu;\nconst { PrintOutput } = high;\n\n/****************默认参数  开始***********************/\nlet formId = 'head';//卡片组件Id\nlet formdata = {};\nlet urls={\n    loadTreeDataUrl:\"/nccloud/org/postseries/PostSeriesAppDataInitAction.do\",\n    queryCardUrl:\"/nccloud/org/postseries/PostSeriesQueryAction.do\",\n    enablestateUrl:\"/nccloud/org/postseries/PostSeriesIsEnableAction.do\",\n    addCardUrl:\"/nccloud/org/postseries/PostSeriesAddAction.do\",\n    deleteUrl:'/nccloud/org/postseries/PostSeriesDelAction.do',\n    saveUrl:'/nccloud/org/postseries/PostSeriesSaveAction.do',\n    print: '/nccloud/org/postseries/PostSeriesPrintAction.do',\n    isPermission: '/nccloud/org/postseries/IsPostSeriesPermisAction.do'\n};\nlet pageCode=\"10100PSG_postseries\";//默认集团\nlet appcode=\"10100PSG\";//默认集团\nlet postseriesTs = (new Date()).valueOf().toString();     //快捷键操作时取最大时间\n/***************默认参数  结束********************/\n\n/**\n * 岗位序列-集团\n */\nclass Postseries extends Component {\n    constructor(props){\n        super(props)\n        this.config =Object.assign({\n            //title: '岗位序列-集团',\n            treeId:\"epsTree\",\n            formId:\"head\",\n            pageCode:\"10100PSG_postseries\",\n            appcode : \"10100PSG\",\n            nodeType:'GROUP_NODE',\n            isGlbGrp:'1',\n            urls:urls\n        },props.config);\n\n        //自定义根节点\n        this.root = {\n            \"isleaf\": false,\n            \"key\":\"~\",\n            \"title\": \"岗位序列\",\n            \"id\":\"~\",\n            \"innercode\":\"~\",\n            \"pid\": \"\",\n            \"refname\": \"岗位序列\",\n            \"refpk\": \"~\"\n        };\n        //主动事件，绑定this指针\n        this.initButtonStatus = this.initButtonStatus.bind(this);\n        this.changeButtonStatus = this.changeButtonStatus.bind(this);\n        this.onStartPostseries = this.onStartPostseries.bind(this);\n        this.onStopPostseries = this.onStopPostseries.bind(this);\n        this.dealTreeData = this.dealTreeData.bind(this);\n\n        //显示停用复选框的状态标志\n        this.state = {\n            checked: false,//判断 显示停用按钮是否选中\n            curSelectedNode: null, //直接点击树节点操作按钮时 用于记录selectedNode\n            showOffDisable: false, //判断 显示停用按钮是否显示\n            addSelNodeId: {},      //新增时选中的树节点\n            pks: [],                //打印ids\n            treeDisabledSearch: false,\n            json : {},                      //多语json\n\t\t\tinlt : null\n        }\n\n        this.initTemplate(props, () => {\n            this.loadTreeDataUrl();\n        });\n    }\n\n    /**\n     * 单据模板\n     * @param props\n     */\n    initTemplate = (props, callback)=>{\n        pageCode = props.config.pageCode?props.config.pageCode:pageCode;\n        appcode = props.config.appcode?props.config.appcode:appcode;\n        let isGlb = props.config.isGlbGrp==='0'?'Y':'N';\n        createUIDom(props)(\n            {pagecode:pageCode},\n            {moduleId: '10100PSG',domainName: 'uapbd'},\n            (data,langData,inlt) => {\n                //多语\n\t\t\t\tif(langData){\n                    this.state.json = langData;\n                    this.root['refname'] = this.root['title'] = this.state.json['10100PSG-000002'];/* 国际化处理： 岗位序列*/                    \n                    if(inlt){\n                        this.state.inlt = inlt;\n                    }\n                }\n                //设置元数据\n                if(data.template){\n                    //设置元数据\n                    data.template[formId].items.map((obj)=>{\n                        if(obj.attrcode == 'father_pk'){\n                            obj['refcode']='uapbd/refer/org/PostSeriesDefaultAllTreeRef/index.js';\n                            obj['queryCondition'] = (\n                                () => {\n                                    return {\n                                        'isGlb': isGlb,\n                                        'isEnable': 'Y',\n                                        'TreeRefActionExt':'nccloud.web.uapbd.org.postseries.util.PostSeriesDefaultAllTreeRefExt'\n                                    }\n                                }\n                            );\n                        } \n                        // else if(obj.attrcode==='postseriesdesc'){\n                        //     obj['itemtype'] = 'textarea';\n                        //     obj['rows'] = '4';\n                        //     obj['col'] = '8';\n                        // }\n                        // else if(obj.attrcode==='creator'||obj.attrcode==='creationtime'||obj.attrcode==='modifier'||obj.attrcode==='modifiedtime'){\n                        //     obj.visible = false;\n                        // }\n                    });\n                    props.meta.setMeta(data.template);\n                }\n                if (data.button) {\n                    props.button.setButtons(data.button);\n                };\n\n                callback && callback();\n            }\n        );\n\n    }\n\n    /**\n     * 处理树数据\n     * @param data\n     * @returns {*}\n     */\n    dealTreeData(data){\n        let deleteDataChildrenProp = function(node){\n            //node.beforeName = <span>{node['code']?(node['code']+' '):''}</span>\n            if(!node.children || node.children.length == 0) {\n                delete node.children;\n            }\n            else{\n                node.isLeaf = false;\n                node.children.forEach( (e) => {\n                    deleteDataChildrenProp(e);\n                } );\n            }\n        };\n        data.forEach( (e) => {\n            e.iconBox = {\n                editIcon:false,\n                addIcon:false,\n                delIcon:false\n            };\n            deleteDataChildrenProp(e);\n        });\n        return data;\n    }\n\n    /**\n     * react 生命周期函数 组件渲染完后触发事件\n     */\n    componentDidMount(){\n        //this.loadTreeDataUrl();\n    }\n\n    componentDidUpdate(){\n        let l_formstatus = this.props.form.getFormStatus(this.config.formId);\n        if(l_formstatus != 'add' && l_formstatus != \"edit\"){\n            window.onbeforeunload = null;\n        }else{\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\n                return '';\n            };\n        }\n    }\n\n    /**\n     * 加载树数据\n     */\n    loadTreeDataUrl(){\n        let requestParam = { checked:this.state.checked,isGlbGrp: this.config.isGlbGrp};\n        /*************\n         * ajax请求 加载树数据\n         *************/\n        ajax({\n            url:this.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    let data = [Object.assign( {...this.root} , {children : result.data} )];\n                    //同步树  加载全部数据\n                    this.props.syncTree.setSyncTreeData(this.config.treeId , this.dealTreeData(data));\n                    \n                    if(this.state.curSelectedNode && this.state.curSelectedNode.refpk ){\n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, this.state.curSelectedNode.pid);\n                        this.props.syncTree.setNodeSelected(this.config.treeId, this.state.curSelectedNode.refpk);\n                        this.props.button.setDisabled(['Print','Output'], false);\n\n                        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n                        if(!selectedTreeNode){\n                            this.setState({\n                                curSelectedNode: null\n                            });\n                            this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n                            this.props.button.setDisabled(['Print','Output'], true);\n                        }\n                    }else{\n                        //展开节点  设置默认展开项\n                        this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n                        this.props.button.setDisabled(['Print','Output'], true);\n                    }\n                }\n            }\n        });\n        //修改按钮状态\n        this.initButtonStatus();\n    }\n\n    /**\n     * 页面初始设置button状态\n     */\n    initButtonStatus(){\n        //设置按钮不显示\n        this.props.button.setButtonVisible(['Save','Cancel','SaveAdd'],false);\n    }\n\n    /**\n     * 点击树节点\n     * @param refpk\n     */\n    onSelectTree(refpk){\n        this.setState({\n            curSelectedNode: this.props.syncTree.getSelectNode(this.config.treeId)\n        });\n        //编辑态  树节点操作无效  应该提供一个接口，编辑态任何操作都不能动\n        let status = this.props.form.getFormStatus(this.config.formId);\n        if(status == 'edit'){\n            return;\n        }\n        if(refpk == this.root.refpk){\n            //清空表单\n            this.props.form.EmptyAllFormValue(this.config.formId);\n            this.props.button.setDisabled(['Print','Output'], true);\n            this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项是否不可编辑\n            return;\n        }\n        /********************************\n         * ajax 请求选择的树节点数据\n         ********************************/\n        postseriesTs = (new Date()).valueOf().toString();\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{\n                pk_postseries: refpk,\n                isGlbGrp: this.config.isGlbGrp,\n                postseriesTs: postseriesTs\n            },\n            success:(result)=>{\n\n                if(result.success){\n                    \n                    if(result.data['postseriesTs']===postseriesTs){\n                        result.data = result.data.form;\n                        //处理显示公式\n                        this.dealDisplayFm(result);        \n    \n                        //表单数据处理\n                        this.dealFormData(result, true);\n                        //清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        //设置表单为所选树节点数据\n                        formdata[formId] = result.data[this.config.formId];\n                        this.props.form.setAllFormValue(formdata);\n                        //设置启用状态enablestate是否可编辑\n                        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n    \n                        this.props.button.setDisabled(['Print','Output'], false);\n    \n                        let nodeType = this.props.config.nodeType;\n                        if((nodeType==='GLOBE_NODE' && selectedTreeNode && selectedTreeNode.refpk!='~') || (nodeType==='GROUP_NODE' && selectedTreeNode && selectedTreeNode.nodeData.isGrp)){\n                            this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});//设置表单项是否不可编辑\n                        }else{\n                            this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项是否不可编辑\n                        }\n\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 表单数据处理\n     */\n    dealFormData(result, isChangeEnable){\n        let headData = result.data.head.rows[0].values;\n        if(isChangeEnable){\n            if(headData.hasOwnProperty('enablestate')){ \n                let enablestateValue = headData.enablestate.value;\n                //根据表单项enablestate的值修改开关状态\n                if(enablestateValue == '2'){\n                    result.data.head.rows[0].values.enablestate.value = true;\n                }else{\n                    result.data.head.rows[0].values.enablestate.value = false;\n                }\n            }\n        }\n        if(headData.father_pk.display === this.root.refpk || headData.father_pk.display === 'root'){\n            result.data.head.rows[0].values.father_pk.display = '';\n            result.data.head.rows[0].values.father_pk.value='';\n        }\n    }\n\n    /**\n     * 表单编辑事件\n     */\n    onAfterFormEvent(props, moduleId, key, value, index){\n        switch(key){\n            case \"enablestate\":\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n                \n                if(!selectedTreeNode){\n                    let content = value.value?this.state.json['10100PSG-000003']:this.state.json['10100PSG-000004'];/* 国际化处理： 请选中需要启用的树节点,请选中需要停用的树节点*/\n                    toast({ color: 'warning', title: content });\n                    return;\n                }\n                //数据权限校验\n                ajax({\n                    url: this.config.urls['isPermission'],\n                    data: { pk_postseries: selectedTreeNode.refpk},\n                    success: (res) => {\n                        let { success, data } = res;\n                        if (success) {\n                            if(data!='success'){\n                                this.props.form.setFormItemsValue(this.config.formId, { 'enablestate': {value:!value.value} });\n                                toast({ color: 'danger', title: data });\n                                return;\n                            }\n                            let requestParam = {\n                                pk_postseries : selectedTreeNode.refpk,\n                                enablestate : value.value?'2':'1',\n                                ts : this.props.form.getFormItemsValue(this.config.formId,'ts').value\n                            };\n                            promptBox({\n                                color: 'warning',                 // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                                title:this.state.json['10100PSG-000005'],/* 国际化处理： 提示*/\n                                content:value.value?this.state.json['10100PSG-000006']: this.state.json['10100PSG-000007'],/* 国际化处理： 确认启用该数据？,您确定要停用所选数据及其所有下级数据吗？*/\n                                beSureBtnClick:()=>{\n                                    ajax({\n                                        url:this.config.urls.enablestateUrl,\n                                        data:requestParam,\n                                        success:(result)=>{\n                                            let {success, data} = result;\n                                            if(success){\n                                                toast({title: value.value?this.state.json['10100PSG-000008']:this.state.json['10100PSG-000009'],color:'success'});/* 国际化处理： 启用成功！,停用成功！*/\n                                                if(data){\n                                                    props.form.setFormItemsValue(this.config.formId,{'ts': {value:data}});\n                                                }\n                                            }\n                                        }\n                                    });\n                                },\n                                cancelBtnClick:()=>{\n                                    props.form.setFormItemsValue(this.config.formId,{'enablestate': {value:!value.value}});\n                                    return;\n                                },\n                                closeBtnClick:()=>{\n                                    this.props.form.setFormItemsValue(this.config.formId, { 'enablestate': {value:!value.value} });\n                                    return;\n                                }\n                            });\n                        }\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n        //some code\n    }\n\n    /**\n     * 新增\n     */\n    onAddPostseries(selectNode){\n        this.setState({\n            curSelectedNode: selectNode,\n            addSelNodeId: selectNode\n        });\n        let requestParam = {isGlbGrp: this.config.isGlbGrp};//请求参数对象\n        if(selectNode){\n            //存在选中节点，设置父节点pk为选中节点refpk\n            requestParam['father_pk'] = selectNode.refpk;\n        }else{\n            //不存在选中节点，设置父节点为根节点refpk\n            requestParam['father_pk'] = this.root.refpk;\n        }\n        ajax({\n            url:this.config.urls.addCardUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    //表单数据处理\n                    this.dealFormData(result);\n                    //清空表单数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置新增默认值\n                    formdata[formId] = result.data[this.config.formId];\n                    this.props.form.setAllFormValue(formdata);\n                    //设置表单项不可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                }\n            }\n        })\n        this.changeButtonStatus(selectNode,'add');\n    }\n\n    /**\n     * 编辑\n     */\n    onEditPostseries(selectedTreeNode){\n\n        //数据权限校验\n        ajax({\n            url: this.config.urls['isPermission'],\n            data: { pk_postseries: selectedTreeNode.refpk},\n            success: (res) => {\n                let { success, data } = res;\n                if (success) {\n                    if(data!='success'){\n                        toast({ color: 'danger', title: data });\n                        return;\n                    }\n                    this.doEditPostseries(selectedTreeNode);\n                }\n            }\n        });\n\n    }\n\n    doEditPostseries(selectedTreeNode){\n        this.setState({\n            curSelectedNode : selectedTreeNode\n        });\n        /**************************************************\n         *\n         * 编辑：\n         *      1、构造请求参数\n         *      2、ajax请求，后台查询需要编辑的对象\n         *      3、回调，设置表单数据为编辑的对象\n         *\n         * 编辑状态下：\n         *      只有 保存  取消 按钮 显示\n         *\n         **************************************************/\n        /***ajax请求***/\n        let isGlbGrp = this.config.isGlbGrp;\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_postseries:selectedTreeNode.refpk,isGlbGrp: isGlbGrp},\n            success:(result)=>{\n\n                if(result.success){\n                    result.data = result.data.form;\n                    //处理显示公式\n                    this.dealDisplayFm(result);\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //表单数据处理\n                    this.dealFormData(result);\n                    //设置表单数据\n                    formdata[formId] = result.data[this.config.formId];\n                    this.props.form.setAllFormValue(formdata);\n                    this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n                    //设置表单状态为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n\n                    //给岗位序列参照加过滤条件,全局只可看到全局岗位序列\n                    //let pk_postseries = result.data[this.config.formId]['rows'][0]['values']['pk_postseries']['value'];\n                    // let isGlb = isGlbGrp==='0'?'Y':'N';\n                    // let meta = this.props.meta.getMeta();\n                    // meta[formId].items.find((item) => item.attrcode == 'father_pk')['queryCondition'] = (\n                    //     () => {\n                    //         return {\n                    //             'isGlb': isGlb\n                    //         }\n                    //     }\n                    // );\n                    // this.props.meta.setMeta(meta);\n                }\n            }\n        });\n        this.changeButtonStatus(selectedTreeNode,'edit');\n    }\n\n    onButtonClick(props,id){\n        switch(id){\n            case 'Refresh':\n                this.onSelectTree(this.state.curSelectedNode ? this.state.curSelectedNode['refpk'] : '~');\n                this.loadTreeDataUrl();\n                toast({ color: 'success', title: this.state.json['10100PSG-000010'] });/* 国际化处理： 刷新成功！*/\n                break;\n            case 'Save':\n                this.onSavePostseries();\n                break;\n            case 'SaveAdd':\n                this.onSavePostseries({isSaveAdd: true});\n                break;\n            case 'Cancel':\n                promptBox({\n                    color: 'warning',                 // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title : this.state.json['10100PSG-000011'],/* 国际化处理： 确认取消*/\n                    content : this.state.json['10100PSG-000012'],/* 国际化处理： 是否确认要取消？*/\n                    beSureBtnClick : () => {\n                        this.onCancelPostseries();\n                    }\n                });\n                break;\n            case 'Print':\n\t\t\t\tlet printParam={\n                    funcode: this.config.isGlbGrp==='1'?'10100PSB':'10100PSG',\n                    nodekey: 'postseriesPrint'\n\t\t\t\t};\n\t\t\t\tthis.pintFunction(printParam);\n                break;\n            case 'Output':\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                if(selectedTreeNode && selectedTreeNode['refpk']){\n                    this.setState(\n                        {pks : [selectedTreeNode['refpk']]},\n                        () => {\n                            this.refs.printOutput.open();\n                        }\n                    );\n                }\n\t\t\t\tbreak;\n            default:\n                break;\n        }\n    }\n\n    //输出和打印功能函数\n\tpintFunction(param){\n\t\tlet selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n\t\tparam.oids = [selectedTreeNode.refpk];\n\t\tprint(\n\t\t\t'pdf',\n\t\t\turls['print'],\n\t\t\tparam\n\t\t);\n\t}\n\n    /**\n     * 保存\n     */\n    onSavePostseries({isSaveAdd=false}={}){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        if(!selectedTreeNode){\n            selectedTreeNode = this.state.curSelectedNode;\n        }\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        if(!this.props.form.isCheckNow(this.config.formId)) return;\n\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        var pk = null;\n        if(formData.rows[0].values.hasOwnProperty('pk_postseries')){\n            pk = formData.rows[0].values.pk_postseries.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n        }\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n        //ajax请求\n        let saveajax = () => {\n            ajax({\n                url: this.config.urls.saveUrl,\n                data: requestParam,\n                success: (result) => {\n                    if(result.success){\n                        toast({title:this.state.json['10100PSG-000013'],color:'success'});/* 国际化处理： 保存成功！*/\n                        let refpk = result.data[0].refpk;\n                        //设置表单浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        //设置树可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                        if(!result.data[0].children || result.data[0].children.length == 0 ){\n                            delete result.data[0].children;\n                        }\n                        if(nonPk){\n                            //新增回调后添加\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        }else{\n                            //修改回调后修改\n                            //this.props.syncTree.editNodeSuccess(this.config.treeId,result.data[0]);\n                            this.props.syncTree.setNodeSelected(this.config.treeId, refpk);\n                            selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                            let childrenTree = selectedTreeNode['children'];\n                            if(childrenTree && childrenTree.length>0){\n                                result.data[0]['children'] = childrenTree;\n                            }\n                            this.props.asyncTree.delTreeData(this.config.treeId,refpk);\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        }\n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n                        this.props.syncTree.setNodeSelected(this.config.treeId, refpk);\n                        //设置表单项可用\n                        this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});\n                        //清空自定已选中项\n                        this.setState({curSelectedNode:null});\n                        this.changeButtonStatus(selectedTreeNode,'save');\n                        if(isSaveAdd){\n                            this.onAddPostseries(this.state.addSelNodeId);\n                        }else{\n                            this. onSelectTree(refpk);\n                        }\n                    }\n                }\n            });\n        }\n\n        this.props.validateToSave(requestParam, saveajax, {[this.config.formId]:'form'}, 'form');\n    }\n\n    /**\n     * 删除\n     */\n    onDeletePostseries(selectedTreeNode){\n        let requestParam = {};\n        \n        //数据权限校验\n        ajax({\n            url: this.config.urls['isPermission'],\n            data: { pk_postseries: selectedTreeNode.refpk},\n            success: (res) => {\n                let { success, data } = res;\n                if (success) {\n                    if(data!='success'){\n                        toast({ color: 'danger', title: data });\n                        return;\n                    }\n                    let message = this.state.json['10100PSG-000014'];/* 国际化处理： 确认要删除所选数据吗？*/\n                    promptBox({\n                        color: 'warning',                 // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                        title: this.state.json['10100PSG-000015'],/* 国际化处理： 确认删除*/\n                        content: message,\n                        beSureBtnClick: () => {\n                            requestParam = {\n                                pk_postseries: selectedTreeNode.refpk,\n                                isGlbGrp: this.config.isGlbGrp,\n                                ts: selectedTreeNode.nodeData['ts']\n                            }\n                            let pid = selectedTreeNode.pid;\n                            ajax({\n                                url:this.config.urls.deleteUrl,\n                                data:requestParam,\n                                success:(result)=>{\n                                    if(result.success){\n                                        this.props.form.EmptyAllFormValue(this.config.formId);\n                                        //调用异步树的接口，删除该树节点\n                                        this.props.asyncTree.delTreeData(this.config.treeId,selectedTreeNode.refpk);\n                                        toast({title:this.state.json['10100PSG-000016'],color:\"success\"});/* 国际化处理： 删除成功！*/\n                                    }\n                                }\n                            })\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 取消\n     */\n    onCancelPostseries(){\n        //同步树 取消的逻辑\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /**********************************************************\n         *\n         * 取消：\n         *      1、重新根据选中的树节点查询表单对象\n         *      2、回调，设置表单对象\n         *      3、设置按钮状态\n         *\n         **********************************************************/\n        this.props.form.EmptyAllFormValue(this.config.formId);\n        if(selectedTreeNode && selectedTreeNode['refpk']!='~'){\n            //设置启用状态是否可编辑\n            let nodeType = this.props.config.nodeType;\n            if((nodeType==='GLOBE_NODE' && selectedTreeNode.refpk!='~') || (nodeType==='GROUP_NODE' && selectedTreeNode.nodeData.isGrp)){\n                this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});//设置表单项是否不可编辑\n            }else{\n                this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项是否不可编辑\n            }\n            //查询节点信息\n            ajax({\n                url:this.config.urls.queryCardUrl,\n                data:{pk_postseries:selectedTreeNode.refpk,isGlbGrp: this.config.isGlbGrp},\n                success:(result)=>{\n                    if(result.success){\n                        result.data = result.data.form;\n\n                        //处理显示公式\n                        this.dealDisplayFm(result);\n\n                        //表单数据处理\n                        this.dealFormData(result, true);\n                        formdata[formId] = result.data[this.config.formId];\n                        this.props.form.setAllFormValue(formdata);\n                    }\n                }\n            });\n            this.onSelectTree(selectedTreeNode.refpk);\n        }else{\n            //没有选中项  清空所有数据\n            this.props.form.EmptyAllFormValue(this.config.formId);\n        }\n        this.props.form.setFormStatus(this.config.formId, 'browse');\n        //设置树可用\n        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n        //设置按钮状态\n        this.changeButtonStatus(selectedTreeNode,'cancel');\n    }\n\n    /**\n     * 启用\n     */\n    onStartPostseries(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        /**************************************************\n         *\n         * 启用/停用\n         *      1、判断选中树节点的状态，做出相应的提示\n         *      2、构造请求参数\n         *      3、ajax请求，后台执行更新\n         *\n         * 启用/停用状态下：\n         *      按钮的可见性和可操作性不变\n         *\n         *\n         **************************************************/\n        if(!selectedTreeNode){\n            toast({ color: 'warning', title: this.state.json['10100PSG-000017'] });//默认top/* 国际化处理： 请选中需要启用的树节点！*/\n        }else if(formData.rows[0].values.enablestate.value == '2'){\n            toast({ color: 'warning', title: this.state.json['10100PSG-000018'] });//默认top/* 国际化处理： 该数据已启用，无需多次启用！*/\n            return;\n        }\n        requestParam = {\n            pk_postseries:formData.rows[0].values.pk_postseries.value,\n            enablestate:'2',\n            isGlbGrp: this.config.isGlbGrp\n        }\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                //启用成功，设置表单数据\n                formdata[formId] = result.data[this.config.formId];\n                this.props.form.setAllFormValue(formdata);\n                //关闭 展开，可以做一个refreshTreeNode方法\n                this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n            }\n        });\n    }\n\n    /**\n     * 停用\n     */\n    onStopPostseries(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n\n        if(!selectedTreeNode){\n            toast({ color: 'warning', title: this.state.json['10100PSG-000019'] });//默认top/* 国际化处理： 请选中需要停用的树节点！*/\n        }else if(formData.rows[0].values.enablestate.value == '1'){\n            toast({ color: 'warning', title: this.state.json['10100PSG-000020'] });//默认top/* 国际化处理： 该数据已停用，无需多次停用！*/\n            return;\n        }\n        requestParam = {\n            pk_postseries:formData.rows[0].values.pk_postseries.value,\n            enablestate:'1',\n            isGlbGrp: this.config.isGlbGrp\n        }\n        \n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n                }\n            }\n        });\n    }\n    /*****button group end*****/\n\n    /**\n     * 更多按钮点击更多选项时触发事件\n     * @param key\n     */\n    onMoreSelect({ key }) {\n        if(key == 'start'){\n            this.onStartPostseries();\n        }else if(key == 'stop'){\n            this.onStopPostseries();\n        }\n    }\n\n    /**\n     * 按钮点击状态切换监听事件\n     * @param id\n     */\n    changeButtonStatus(selectedTreeNode,id){\n        switch(id){\n            case 'add':\n            case 'saveAdd':\n                this.props.button.setButtonVisible(['Refresh','Print'],false);\n                this.props.button.setButtonVisible(['Save','SaveAdd','Cancel'],true);\n                this.setState({\n                    showOffDisable: true,\n                    treeDisabledSearch : true\n                });\n                break;\n            case 'edit':\n                this.props.button.setButtonVisible(['Refresh','Print','SaveAdd'],false);\n                this.props.button.setButtonVisible(['Save','Cancel'],true);\n                this.setState({\n                    showOffDisable: true,\n                    treeDisabledSearch : true\n                });\n                break;\n            case 'save':\n            case 'cancel':\n                this.props.button.setButtonVisible(['Refresh','Print'],true);\n                this.props.button.setButtonVisible(['Save','SaveAdd','Cancel'],false);\n                this.setState({\n                    showOffDisable: false,\n                    treeDisabledSearch : false\n                });\n            default :\n                break;\n        }\n    }\n\n    /**\n     * 鼠标进入树节点事件,设置树节点上的按钮显示状态 nodeType:'GLOBE_NODE'\n     * @param key\n     */\n    onMouseEnterEve(key,node){\n        let nodeType = this.props.config.nodeType;\n        let obj = {};\n        if((nodeType==='GLOBE_NODE' && key!='~' && node.nodeData['isGlb']) || (nodeType==='GROUP_NODE' && key!='~' && node.nodeData['isGrp'])){\n            obj = {\n                delIcon:true, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:true,\n                addIcon:true\n            };\n        }else{\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n        }\n        this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n    }\n\n    /**\n     * enablestate change 事件\n     * @param checked\n     */\n    onChange(checked){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得树节点选中项\n        let requestParam = {};\n        if(!selectNode ){\n            toast({ color: 'warning', title: this.state.json['10100PSG-000021'] });//默认top/* 国际化处理： 请选中树节点！*/\n        }\n        requestParam['pk_postseries'] = selectNode.refpk;\n        requestParam['enablestate'] = checked?'2':'1';\n        requestParam['isGlbGrp'] = this.config.isGlbGrp\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success) {\n                    if (checked) {\n                        //如果是选中 那就把数据再加载到表单\n                        formdata[formId] = result.data[this.config.formId];\n                        this.props.form.setAllFormValue(formdata);\n                    } else {\n                        //如果不是选中那就清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        this.props.syncTree.delNodeSuceess(this.config.treeId, selectNode.refpk);\n                    }\n                }\n\n            }\n        });\n    }\n\n    /**\n     * checkbox 选中事件\n     */\n    onCheckBoxClick(){\n        this.setState(\n            {checked:!this.state.checked},\n            () => {\n                this.loadTreeDataUrl();\n                this.props.form.EmptyAllFormValue(this.config.formId);//清空表单数据\n            }\n        );\n    }\n\n\n    //处理显示公式\n    dealDisplayFm = (result) => {\n        if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n            this.props.dealFormulamsg(\n                result.formulamsg,\n                {\n                    [formId] : \"form\"\n                }\n            );\n        }\n    }\n\n    /**\n     * 渲染\n     * @returns {*}\n     */\n    render(){\n        /**\n         *  经过createPage方法后，初始对象都放到了props中\n         *  例如 asyncTree,syncTree,form,table……\n         *  我们用的话直接从props里取就可以了\n         * */\n        const {asyncTree,syncTree,form,button,modal,search,DragWidthCom} = this.props;\n        //DragWidthCom 平台出的左右布局的组件  专用于树卡和树表\n        const {createAsyncTree} = asyncTree;//创建异步树，需要引入这个\n        const {createSyncTree} = syncTree;//创建同步树 需要引入这个\n        const {createForm} = form;//创建表单，需要引入这个\n\n        let { createButtonApp } = button;\n        let { createModal } = modal;  //模态框\n        const {NCCreateSearch} = search;\n        const {Item} = NCMenu;\n        \n        let title = this.config.appcode==='10100PSB'?this.state.json['10100PSG-000022']:this.state.json['10100PSG-000023'];/* 国际化处理： 岗位序列-全局,岗位序列-集团*/\n\n        return(\n\n            <div className=\"postseries_10100PS\">\n                {/* 头部 header*/}\n                <div className=\"header\">\n                    {/* 标题 title*/}\n                    <div className=\"title\">{title}</div>\n                    <span className=\"showOff\" >\n                        <NCCheckbox\n                            defaultChecked={false}\n                            checked={this.state.checked}\n                            onChange={this.onCheckBoxClick.bind(this)}\n                            disabled={this.state.showOffDisable}\n                            size=\"lg\"\n                        >\n                            {this.state.json['10100PSG-000024']/* 国际化处理： 显示停用*/}\n                        </NCCheckbox>\n\t\t\t        </span>\n                    {/* 按钮组 btn-group*/}\n                    <div className=\" btn-group\">\n                        {createButtonApp({\n                            area: this.config.formId,\n                            buttonLimit: 3,\n                            onButtonClick: this.onButtonClick.bind(this),\n                            popContainer: document.querySelector('.'+this.config.formId)\n                        })}\n                    </div>\n                </div>\n                {/* 树卡区域 */}\n                <div className=\"tree-card\">\n                    <DragWidthCom\n                        // 左树区域\n                        leftDom = {\n                            <div className=\"tree-area\">\n                                {createSyncTree({\n                                    treeId :this.config.treeId,\n                                    needEdit: true, //不启用编辑\n                                    showLine: true, //显示连线\n                                    needSearch: true, //是否需要搜索框\n                                    onSelectEve: this.onSelectTree.bind(this),//选择\n                                    onMouseEnterEve:this.onMouseEnterEve.bind(this),\n                                    clickEditIconEve: this.onEditPostseries.bind(this), //编辑点击 回调\n                                    clickAddIconEve: this.onAddPostseries.bind(this), //新增点击 回调\n                                    clickDelIconEve: this.onDeletePostseries.bind(this), // 删除点击 回调\n                                    showModal: false,\n                                    disabledSearch: this.state.treeDisabledSearch\n                                })}\n                            </div>}     //左侧区域dom\n                         // 右卡片区域\n                        rightDom = {\n                            <div className=\"card-area\">\n                                {createForm(this.config.formId, {\n                                    cancelPSwitch: true,\n                                    onAfterEvent: this.onAfterFormEvent.bind(this)\n                                })}\n                            </div> }     //右侧区域dom\n                        defLeftWid = '280px'      // 默认左侧区域宽度，px/百分百\n                    />\n                </div>\n                <PrintOutput\n                    ref='printOutput'\n                    url= {urls['print']}\n                    data={{\n                        funcode : this.config.isGlbGrp==='1'?'10100PSB':'10100PSG',\n                        nodekey :'postseriesPrint',  //模板节点标识\n                        oids: this.state.pks,    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                        outputType: \"output\"\n                    }}\n                >\n                </PrintOutput>\n            </div>\n        )\n    }\n}\n\n\n/**\n * 创建页面\n */\nexport default Postseries;","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".postseries_10100PS .showOff {\\n  padding: 0px 0px 0px 10px;\\n}\\n.postseries_10100PS .showOff .u-checkbox-label {\\n  padding-top: 0px;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Postseries from '../../postseries/main/';\r\nimport { createPage } from 'nc-lightapp-front';\r\n\r\n/**\r\n * 岗位序列-全局\r\n */\r\nlet config = {\r\n    //title:'岗位序列-全局',\r\n    pageCode:'10100PSB_postseries',\r\n    appcode : \"10100PSB\",\r\n    nodeType:'GLOBE_NODE',\r\n    formId:'head',\r\n    treeId:'epsTree',\r\n    isGlbGrp:'0'\r\n};\r\n\r\nlet Postseries_Glb = createPage({\r\n    billinfo:{\r\n        billtype: 'form',\r\n        pagecode: '10100PSB_postseries',\r\n        headcode: 'head'\r\n    }\r\n})(Postseries)\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<Postseries_Glb {...{config: config}}/>, document.querySelector('#app'));","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n"],"sourceRoot":""}