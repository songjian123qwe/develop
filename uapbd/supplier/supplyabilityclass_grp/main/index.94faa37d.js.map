{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://[name]/./src/uapbd/supplier/supplyabilityclass/main/index.js","webpack://[name]/./src/uapbd/supplier/supplyabilityclass_grp/main/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","pageCfg","arguments","length","undefined","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","content","color","MultiInit","getMultiLang","createUIDom","_react","NCMenu","base","NCCheckbox","NCDropdown","NCMessage","NCPopconfirm","setDefData","NCCol","NCRow","NCButton","NCTooltip","NCMenuGroup","cardCache","getDefData","PrintOutput","Item","high","formId","urls","loadTreeDataUrl","queryTemplet","addCardUrl","queryCardUrl","enablestateUrl","deleteUrl","printUrl","saveUrl","pageCode","Supplyabilityclass","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","config","assign","title","treeId","nodeType","isleaf","id","innercode","pid","refname","refpk","state","pks","checked","json","disabledSearch","curOrg","showOffDisable","curSelectedNode","initButtonStatus","changeButtonStatus","onStartEps","onStopEps","dealTreeData","initTemplate","Component","forEach","e","iconBox","delIcon","editIcon","addIcon","deleteDataChildrenProp","node","children","isLeaf","formstatus","form","getFormStatus","onbeforeunload","_this2","selectedTreeNode","syncTree","getSelectNode","that","requestParam","pkorg","ajax","url","_extends","setSyncTreeData","openNodeByPk","button","setButtonDisabled","leftTree","setNodeSelected","datasource","setButtonVisible","_this3","setFormItemsDisabled","enablestate","pk_supabclass","headData","head","rows","values","enablestateValue","sapks","push","cacheTools","set","display","EmptyAllFormValue","setAllFormValue","index","_this4","flag","checkParentIsStop","setFormItemsValue","promptBox","noFooter","hasCloseBtn","beSureBtnClick","onRefresh","error","message","cancelBtnClick","selectNode","_this5","setState","setFormStatus","setNodeDisable","_this6","formulamsg","Array","dealFormulamsg","_defineProperty","_this7","isCheckNow","formData","getAllFormValue","areacode","model","pageid","pk","nonPk","validateToSave","treenode","addNodeSuccess","editNodeSuccess","_this8","pk_custsaleclass","pk_father","_this9","delNodeSuceess","_this10","_this11","asyncTree","getSelectNodeAsync","refreshTreeNode","_this12","res","_ref","obj","hideIcon","_this13","_this14","initLeaf","onSaveEps","onSaveAddEps","onCancelEps","print","funcode","appcode","nodekey","oids","pks1","refs","printOutput","open","_props","modal","search","DragWidthCom","createSyncTree","createAsyncTree","createForm","createButtonApp","createModal","NCCreateSearch","_react2","default","createElement","className","defaultChecked","onChange","onCheckBoxChange","disabled","size","area","buttonLimit","onButtonClick","popContainer","document","querySelector","leftDom","needEdit","showLine","needSearch","onSelectEve","onSelectTree","onMouseEnterEve","clickEditIconEve","onEditEps","clickAddIconEve","onAddEps","clickDelIconEve","onDeleteEps","showModal","rightDom","cancelPSwitch","onAfterEvent","onAfterFormEvent","defLeftWid","ref","outputType","_this15","_BDCreateUIDom2","pagecode","domainName","template","meta","items","map","attrcode","refName","placeholder","setMeta","setButtons","selectedNode","parentNode","getSyncTreeValue","nodeData","createPage","billinfo","billtype","headcode","mutiLangCode","Supplyabilityclass_Glb","_main2","appid","isGlbGrp","ReactDOM","render"],"mappings":"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","file":"uapbd/supplier/supplyabilityclass_grp/main/index.94faa37d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/supplier/supplyabilityclass_grp/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/supplier/supplyabilityclass_grp/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 481);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import React, { Component } from 'react';\nimport { createPage, base, ajax ,NCCreateSearch,toast,cacheTools,print,high,promptBox,cardCache} from 'nc-lightapp-front';\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\nconst {NCMenu,NCDropdown,NCCheckbox,NCPopconfirm,NCMessage,NCCol,NCRow,NCButton,NCTooltip} = base;\nconst {NCMenuGroup} = NCMenu;\nlet {setDefData, getDefData } = cardCache;\nconst { Item } = NCMenu;\nconst { PrintOutput } = high;\n\n\n\n/****************默认参数  开始***********************/\nlet formId = \"head\";//卡片组件Id\nconst urls={\n    loadTreeDataUrl:\"/nccloud/uapbd/supplyabilityclass/loadtreedata.do\",\n    queryTemplet : '/nccloud/platform/templet/querypage.do',\n    addCardUrl:\"/nccloud/uapbd/supplyabilityclass/addcard.do\",\n    queryCardUrl:\"/nccloud/uapbd/supplyabilityclass/querycard.do\",\n    enablestateUrl:\"/nccloud/uapbd/supplyabilityclass/enablestate.do\",\n    deleteUrl:'/nccloud/uapbd/supplyabilityclass/deltreenode.do',\n    printUrl: '/nccloud/uapbd/supplyabilityclass/print.do',\n    saveUrl:'/nccloud/uapbd/supplyabilityclass/savenode.do'\n};\nlet pageCode=\"10140SACL_supabcl01\";//默认集团\n/***************默认参数  结束********************/\n\n/**\n * 供货能力分类\n */\nclass Supplyabilityclass extends Component {\n    constructor(props){\n        super(props)\n        this.config =Object.assign({\n            title: \"\",\n            treeId:\"supplyabilityclassTree\",\n            formId:formId,\n            pageCode:pageCode,\n            nodeType:'GROUP_NODE',\n            urls:urls\n        },props.config);\n\n        //自定义根节点\n        this.root = {\n            \"isleaf\": false,\n            \"key\":\"~\",\n            \"title\":\"\",\n            \"id\":\"~\",\n            \"innercode\":\"~\",\n            \"pid\": \"\",\n            \"refname\": \"\",\n            \"refpk\": \"~\"\n        };\n\n        //显示停用复选框的状态标志\n        this.state = {\n            pks:[],\n            checked: false,//判断 显示停用按钮是否选中\n            json: {},\n            disabledSearch:false,//左树上搜索按钮\n            curOrg: '' ,//客户销售分类-财务组织节点，选中的组织主键\n            showOffDisable:false,\n            curSelectedNode: {} //直接点击树节点操作按钮时 用于记录selectedNode\n        }\n\n\n\n        //主动事件，绑定this指针\n        this.initButtonStatus = this.initButtonStatus.bind(this);\n        this.changeButtonStatus = this.changeButtonStatus.bind(this);\n        this.onStartEps = this.onStartEps.bind(this);\n        this.onStopEps = this.onStopEps.bind(this);\n        this.dealTreeData = this.dealTreeData.bind(this);\n\n        this.initTemplate(props);\n\n    }\n    \n    \n     //初始化单据模板\n    initTemplate = (props,callback) => {\n        let that = this;\n        createUIDom(props)(\n            {\n                pagecode:props.config.pageCode//页面id\n            // appcode:props.config.appcode//注册按钮的id\n            },\n            {\n                moduleId: '10140SACL',domainName: 'uapbd'\n            },\n            (data, langData)=>{ //(data, langData)\n                if(langData){\n                    this.state.json = langData\n                    that.root.title = this.state.json['10140SACL-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 供货能力分类*/\n                    that.root.refname = this.state.json['10140SACL-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 供货能力分类*/\n                    props.config.title = this.state.json['10140SACL-000000']//this.state.json['10140SACL-000000'],/* 国际化处理： 供货能力分类*/\n                }\n                if (data) {\n\n                    if (data.template) {\n                        let meta = data.template;\n                        \n                        meta['head'].items.map((obj)=>{\n                    \n                            if(obj.attrcode == 'gradesys'){\n                                obj.refName = '等级体系';\n                                obj.placeholder= '等级体系';\n                            }\n                        })\n\n                        props.meta.setMeta(meta);\n                    }\n                    if (data.button) {\n                        let button = data.button;\n                        props.button.setButtons(button);\n                    }\n                    that.onRefresh()\n                    callback && callback();\n                }\n            }\n        )\n\t\t}\n\n     /**\n     * 处理树数据\n     * @param data\n     * @returns {*}\n     */\n    dealTreeData(data){\n        let deleteDataChildrenProp = function(node){\n            node.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            if(!node.children || node.children.length == 0) {\n                delete node.children;\n            }\n            else{\n                node.isLeaf = false;\n                node.children&&node.children.forEach( (e) => {\n                    deleteDataChildrenProp(e);\n                } );\n            }\n        };\n        data&&data.forEach( (e) => {\n            e.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            deleteDataChildrenProp(e);\n        });\n        return data;\n    }\n\n    componentDidUpdate(){\n        //form如果是编辑态，关闭浏览器需要给你提示\n        let formstatus = this.props.form.getFormStatus(this.config.formId);\n\n        if(formstatus == 'browse'|| formstatus == undefined){\n            window.onbeforeunload = null;\n        }else{\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\n                return '';\n                };\n        }\n    }\n\n    /**\n     * react 生命周期函数 组件渲染完后触发事件\n     */\n    componentDidMount(){\n        //this.onRefresh();\n        //修改按钮状态\n        this.initButtonStatus();\n\n    }\n\n    onRefresh(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /**************\n         * 构造请求参数\n         * @type {{checked: boolean}}\n         *************/\n        let that = this;\n        let requestParam = { \n            checked:this.state.checked,\n            pkorg:this.state.curOrg.refpk\n         };\n\n        /*************\n         * ajax请求 加载树数据\n         *************/\n        ajax({\n\n            url:that.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    that.root.title = this.state.json['10140SACL-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 供货能力分类*/\n                    that.root.refname = this.state.json['10140SACL-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 供货能力分类*/\n                    if(result.data){\n                        let data = [Object.assign( {...that.root} , {children : result.data} )];\n                        //同步树  加载全部数据\n                        that.props.syncTree.setSyncTreeData(that.config.treeId , that.dealTreeData(data));\n\n                        //展开节点  设置默认展开项\n                        that.props.syncTree.openNodeByPk(that.config.treeId, that.root.refpk);\n\n                        //设置打印按钮不可用\n                        that.props.button.setButtonDisabled(['print','export'],true);\n                    }\n                    if(!result.data){\n                        that.setSyncTreeData(leftTree, []);\n                    }\n                    if(selectedTreeNode){\n                        that.props.syncTree.setNodeSelected(that.config.treeId, selectedTreeNode.refpk);\n                    }\n                    if(getDefData('supplyability_btnopr',that.props.config.datasource) == 'refresh'){\n                        toast({title:this.state.json['10140SACL-000001'],color:\"success\"});/* 国际化处理： 刷新成功！*/\n                        setDefData('supplyability_btnopr',that.props.config.datasource,'browse');\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 页面初始设置button状态\n     * @param props\n     */\n    initButtonStatus(){\n        //设置保存按钮不显示\n        this.props.button.setButtonVisible('save',false);\n        this.props.button.setButtonVisible('saveadd',false);\n        this.props.button.setButtonVisible('cancel',false);\n    }\n\n    /**\n     * 点击树节点\n     * @param refpk\n     */\n    onSelectTree(refpk){\n\n        if('~' == refpk){\n            this.props.button.setButtonDisabled(['print','export'],true);\n            this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});\n        }else{\n            this.props.button.setButtonDisabled(['print','export'],false);\n        }\n        //编辑态  树节点操作无效  应该提供一个接口，编辑态任何操作都不能动\n        let status = this.props.form.getFormStatus(this.config.formId);\n        if(status == 'edit'){\n            return;\n        }\n\n        if(refpk == this.root.refpk){\n            //清空表单\n            this.props.form.EmptyAllFormValue(this.config.formId);\n            return;\n        }\n        /********************************\n         * ajax 请求选择的树节点数据\n         ********************************/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_supabclass:refpk},\n            success:(result)=>{\n\n                if(result.success){\n                    //表单数据\n                    let headData = result.data.head.rows[0].values;\n                    if(headData.hasOwnProperty('enablestate')){\n                        let enablestateValue = headData.enablestate.value;\n                        //根据表单项enablestate的值修改开关状态\n                        if(enablestateValue == '2'){\n                            result.data.head.rows[0].values.enablestate.value = true;\n                        }else{\n                            result.data.head.rows[0].values.enablestate.value = false;\n                        }\n                    }\n                    let sapks =[];\n                    sapks.push(headData.pk_supabclass.value);\n                    cacheTools.set('sapks',sapks);\n                    \n                    if(headData.pid.display == this.root.refpk){\n                        result.data.head.rows[0].values.pid.display = '';\n                        result.data.head.rows[0].values.pid.value='';\n                    }\n                    //清空表单\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为所选树节点数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //设置表单项enablestate可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});\n                    //设置打印按钮可用\n                    this.props.button.setButtonDisabled(['print','export'],false);\n\n                }\n            }\n        });\n    }\n\n\n    /**\n     * 检查上级是否有停用数据 有：return true\n     * @param props\n     * @param selectedNode\n     * @returns {boolean}\n     */\n    checkParentIsStop = (props,selectedNode)=>{\n        let fathid = selectedNode.pid;\n        if(fathid === '~'){\n            return false;\n        }\n        let parentNode = props.syncTree.getSyncTreeValue(this.config.treeId,selectedNode.pid);\n        if(parentNode && !parentNode.nodeData.enablestate){\n            return !parentNode.nodeData.enablestate;\n        }else{\n            this.checkParentIsStop(props,parentNode);\n        }\n    }\n\n    /**\n     * 表单编辑事件\n     * @param props\n     * @param moduleId\n     * @param key\n     * @param value\n     * @param index\n     */\n    onAfterFormEvent(props, moduleId, key, value, index){\n        switch(key){\n            case \"enablestate\":\n\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n                if(!selectedTreeNode){\n                    let content = value.value?this.state.json['10140SACL-000002']:this.state.json['10140SACL-000003'];/* 国际化处理： 请选中需要启用的树节点,请选中需要停用的树节点*/\n                    NCMessage.create({content: content, color: 'warning'});//默认top\n                    return;\n                }\n                let requestParam = {pk_supabclass:selectedTreeNode.refpk,enablestate:value.value?'2':'1'};\n\n                //检测是否有停用的上级，如果有停用上级，就不能启用\n                let flag = this.checkParentIsStop(props,selectedTreeNode);\n                if(value.value && flag){\n                    toast({content:this.state.json['10140SACL-000029'],color:'warning'});/* 国际化处理： 选中的供应商分类存在停用的上级, 不能启用！*/\n                    props.form.setFormItemsValue(this.config.formId,{enablestate:{value:!value.value,display:!value.value}});\n                    return;\n                        \n                }else{\n                    promptBox({\n                        color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                        title: value.value?this.state.json['10140SACL-000026']:this.state.json['10140SACL-000027'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                        noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                        hasCloseBtn:false,\n                        content: value.value?this.state.json['10140SACL-000005']:this.state.json['10140SACL-000006'],/* 国际化处理： 您确定要启用所选数据吗？,您确定要停用所选数据及其所有下级数据吗？*/\n                        beSureBtnClick: () =>{\n                            ajax({\n                                url:this.config.urls.enablestateUrl,\n                                data:requestParam,\n                                success:(result)=>{\n                                    /****\n                                     * 启用停用，只是启用停用 与树节点的显示隐藏没有关系\n                                     * 想根据启用状态显示或隐藏树节点，需要通过更改显示停用check框来实现\n                                     */\n                                    //刷新界面\n                                    this.onRefresh();\n                                    toast({title:value.value?this.state.json['10140SACL-000007']:this.state.json['10140SACL-000008'],color:'success'});/* 国际化处理： 启用成功！,停用成功！,提示*/\n    \n                                },\n                                error:(result)=>{\n                                    if(value.value){\n                                        props.form.setFormItemsValue(this.config.formId,{enablestate:{value:false,display:null}});\n                                        //result.data.form.head.rows[0].values.enablestate.value = false;\n                                    }else{\n                                        props.form.setFormItemsValue(this.config.formId,{enablestate:{value:true,display:null}});\n                                        //result.data.form.head.rows[0].values.enablestate.value = true;\n                                    }\n                                    toast({content:result.message,title:this.state.json['10140SACL-000010'], color: 'warning'});/* 国际化处理： 警告*/\n                                }\n                            });\n                        } ,\n                        cancelBtnClick:()=>{\n                            props.form.setFormItemsValue(this.config.formId,{enablestate:{value:!value.value,display:null}});\n                            return;\n                        }\n                    })\n                }\n                break;\n            default:\n                break;\n        }\n        //some code\n    }\n\n    /**\n     * 新增\n     */\n    onAddEps(selectNode){\n        this.setState({curSelectedNode:selectNode});\n        let requestParam = {};//请求参数对象\n\n        if(selectNode){\n            //存在选中节点，设置父节点pk为选中节点refpk\n\n            requestParam['pk_father'] = selectNode.refpk;\n        }else{\n            //不存在选中节点，设置父节点为根节点refpk\n            requestParam['pk_father'] = this.root.refpk;\n        }\n\n        ajax({\n            url:this.config.urls.addCardUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    //清空表单数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置新增默认值\n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //设置表单项不可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n\n                    //设置停启用按钮和左树上搜索按钮不可用\n                    this.setState( {\n                        showOffDisable:true,\n                        disabledSearch:true\n                        });\n                        \n                    this.changeButtonStatus(selectNode,'add');\n                }\n            }\n        })\n    }\n\n    /**\n     * 编辑\n     */\n    onEditEps(selectedTreeNode){\n        this.setState({curSelectedNode:selectedTreeNode});\n        /**************************************************\n         *\n         * 编辑：\n         *      1、构造请求参数\n         *      2、ajax请求，后台查询需要编辑的对象\n         *      3、回调，设置表单数据为编辑的对象\n         *\n         * 编辑状态下：\n         *      只有 保存  取消 按钮 显示\n         *\n         *\n         **************************************************/\n        /****未选中提示***/\n        if (!selectedTreeNode) {\n\n            NCMessage.create({content: this.state.json['10140SACL-000011'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点*/\n            return;\n\n        }\n        /***ajax请求***/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_supabclass:selectedTreeNode.refpk},\n            success:(result)=>{\n\n                if(result.success){\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n\n                    //设置表单数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n                    this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n                    //设置表单状态为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    this.changeButtonStatus(selectedTreeNode,'edit');\n\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\"\n                            }\n                        );\n                    }\n\n                    //设置停启用按钮和左树上搜索按钮不可用\n                    this.setState( {\n                        showOffDisable:true,\n                        disabledSearch:true\n                        });\n                }\n            }\n        });\n    }\n\n    /**\n     * 保存\n     */\n    onSaveEps(callback){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.formId);\n        if(!memberFlag){\n            return;\n        }\n\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        if(!selectedTreeNode){\n            selectedTreeNode = this.state.curSelectedNode;\n        }\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息  \n        /****\n         * 构造参数\n         * @type {string}\n         */\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        // formData.rows[0].values.eps_code.value = selectedTreeNode.nodeData.pcode + formData.rows[\"0\"].values.eps_code.value;\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        var pk = null;\n        if(formData.rows[0].values.hasOwnProperty('pk_supabclass')){\n\n            pk = formData.rows[0].values.pk_supabclass.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n\n        }\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n\n        //适配校验公式\n        this.props.validateToSave( requestParam , ()=>{\n            //ajax请求\n            ajax({\n                url: this.config.urls.saveUrl,\n                data: requestParam,\n                success: (result) => {\n                    if(result.success){\n                        //设置表单浏览态\n                        \n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        //设置树可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                        if(!result.data.treenode[0].children || result.data.treenode[0].children.length == 0 ){\n                            delete result.data.treenode[0].children;\n                        }\n                        if(nonPk){\n\n                            //新增回调后添加\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data.treenode);\n                        }else{\n                            \n                            //修改回调后修改\n                            this.props.syncTree.editNodeSuccess(this.config.treeId,result.data.treenode[0]);\n                        }\n\n                        let headData = result.data.head.head.rows[0].values;\n                        if(headData.hasOwnProperty('enablestate')){\n                            let enablestateValue = headData.enablestate.value;\n                            //根据表单项enablestate的值修改开关状态\n                            if(enablestateValue == '2'){\n                                headData.enablestate.value = true;\n                            }else{\n                                headData.enablestate.value = false;\n                            }\n                        }\n\n                        if(headData.pid.display == this.root.refpk){\n                            headData.pid.display = '';\n                            headData.pid.value='';\n                        }\n                        //清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        //设置表单为所选树节点数据\n                        this.props.form.setAllFormValue({head:result.data.head.head});\n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data.treenode[0].pid);\n\n                        this.props.syncTree.setNodeSelected(this.config.treeId, result.data.treenode[0].refpk);\n                        //设置表单项可用\n                        this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});\n                        toast({title:this.state.json['10140SACL-000025'],color:'success'});/* 国际化处理： 保存成功！,提示*/\n                        //清空自定已选中项 设置停启用按钮和左树上搜索按钮不可用\n                        this.setState({\n                            curSelectedNode:null,\n                            showOffDisable:false,\n                            disabledSearch:false\n                        });\n                        this.changeButtonStatus(selectedTreeNode,'save');\n                    }\n                }\n            }); \n        } ,{[this.config.formId]:'form'} , 'form')\n        \n    }\n\n    /**\n     * 保存新增\n     */\n    onSaveAddEps(){\n        \n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: '10140EPSG'//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        var pk = null;\n        \n        if(formData.rows[0].values.hasOwnProperty('pk_custsaleclass')){\n\n            pk = formData.rows[0].values.pk_custsaleclass.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n\n        }\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n\n        }\n\n        //适配校验公式\n        this.props.validateToSave( requestParam , ()=>{\n            /***ajax请求***/\n            ajax({\n                url: this.config.urls.saveUrl,\n                data: requestParam,\n                success: (result) => {\n                    /**********\n                     *\n                     * 这里的代码可以精简，临时先这样，逻辑思路是一样的\n                     *\n                     *\n                     *********/\n                    if(result.success){\n                        //设置表单为浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        if(!result.data[0].children || result.data[0].children.length == 0 ){\n                            delete result.data[0].children;\n                        }\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n\n                        //判断 选中节点如果消失，重新设置新增节点的父节点为选中节点，然后重新获取选中节点\n                        if(!selectedTreeNode){\n                            this.props.syncTree.setNodeSelected(this.config.treeId,result.data[0].pid);\n                            selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                        }\n\n                        //重新设置整棵树不可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,true);\n\n                        //判断是否有选中节点\n                        if (!selectedTreeNode) {\n                            //如果没有默认加载根节点下面\n                            requestParam = {\n                                pk_father:this.root.refpk\n                            };\n                        } else {\n                            requestParam = {\n                                pk_father:selectedTreeNode.refpk\n                            };\n                        }\n                        //ajax请求\n                        ajax({\n                            url: this.config.urls.addCardUrl,\n                            data: requestParam,\n                            success: (result) => {\n                                if(result.success){\n                                    \n                                    //清空表单数据\n                                    this.props.form.EmptyAllFormValue(this.config.formId);\n                                    //新增成功，设置表单默认值\n                                    this.props.form.setAllFormValue({head:result.data.head});\n                                    //设置表单为编辑态\n                                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                                    this.changeButtonStatus(selectedTreeNode,'saveadd');\n                                }\n                            }\n\n                        })\n                    }\n                }\n            });\n        } ,{[this.config.formId]:'form'} , 'form');\n\n        \n    }\n\n    /**\n     * 删除\n     */\n    onDeleteEps(selectedTreeNode){\n\n        let requestParam = {};\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            NCMessage.create({content: this.state.json['10140SACL-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点*/\n            return;\n\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            NCMessage.create({content: this.state.json['10140SACL-000013'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除*/\n            return;\n\n        }\n        let message = this.state.json['10140SACL-000014']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.hasOwnProperty('children') && selectedTreeNode.children && selectedTreeNode.children.length>0){\n            NCMessage.create({content: this.state.json['10140SACL-000015'], color: 'warning'});//默认top/* 国际化处理： 该节点包含子节点，不允许删除！*/\n            return;\n        }\n\n\n        promptBox({\n            color:'info',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140SACL-000016'],/* 国际化处理： 确认删除*/// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: message,/* 国际化处理： 确认删除*/\n            beSureBtnClick: () =>{\n                requestParam = {\n                    pk_supabclass:selectedTreeNode.refpk\n                }\n                let pid = selectedTreeNode.pid;\n                \n                ajax({\n                    url:this.config.urls.deleteUrl,\n                    data:requestParam,\n                    success:(result)=>{\n                        if(result.success){\n                            \n                            this.props.form.EmptyAllFormValue(this.config.formId);\n                            //调用异步树的接口，删除该树节点\n                            this.props.syncTree.delNodeSuceess(this.config.treeId,selectedTreeNode.refpk);\n                            toast({title:this.state.json['10140SACL-000017']});/* 国际化处理： 删除成功！,提示*/\n                            this.changeButtonStatus(selectedTreeNode,'delete');\n                            //删除成功提示\n                            // Message.create({content: '删除成功！', color: 'success'});//默认top\n                        }\n\n                    }\n                })\n            }   \n        })\n    }\n\n    /**\n     * 取消\n     */\n    onCancelEps(){\n\n        promptBox({\n            color:'info',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140SACL-000028'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: this.state.json['10140SACL-000018'],/* 国际化处理： 您确定要取消吗？*/\n            beSureBtnClick: () =>{\n                //同步树 取消的逻辑\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                /**********************************************************\n                 *\n                 * 取消：\n                 *      1、重新根据选中的树节点查询表单对象\n                 *      2、回调，设置表单对象\n                 *      3、设置按钮状态\n                 *\n                 **********************************************************/\n                this.props.form.EmptyAllFormValue(this.config.formId);\n                this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n                if(selectedTreeNode && selectedTreeNode.refpk != '~'){ //新增取消报错修正\n                    //查询节点信息\n                    ajax({\n                        url:this.config.urls.queryCardUrl,\n                        data:{pk_supabclass:selectedTreeNode.refpk},\n                        success:(result)=>{\n                            if(result.success && result.data){\n                                \n                                this.props.form.setAllFormValue({head:result.data.head});\n                                this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':false});\n                            }\n                            if(!result.data){\n                                this.props.form.setAllFormValue({});\n                            }\n                        }\n                    });\n                }else{\n                    //没有选中项  清空所有数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                }\n                this.setState({\n                    showOffDisable:false\n                });\n                this.props.form.setFormStatus(this.config.formId, 'browse');\n                //设置树可用\n                this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                //设置按钮状态\n                //设置停启用按钮和左树上搜索按钮不可用\n                this.setState( {\n                    showOffDisable:false,\n                    disabledSearch:false\n                    });\n                this.changeButtonStatus(selectedTreeNode,'cancel');\n            }   \n        })\n\n        \n    }\n\n    /**\n     * 启用\n     */\n    onStartEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        /**************************************************\n         *\n         * 启用/停用\n         *      1、判断选中树节点的状态，做出相应的提示\n         *      2、构造请求参数\n         *      3、ajax请求，后台执行更新\n         *\n         * 启用/停用状态下：\n         *      按钮的可见性和可操作性不变\n         *\n         *\n         **************************************************/\n\n        if(!selectedTreeNode){\n\n            NCMessage.create({content: this.state.json['10140SACL-000002'], color: 'warning'});//默认top/* 国际化处理： 请选中需要启用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '2'){\n            NCMessage.create({content: this.state.json['10140SACL-000019'], color: 'warning'});//默认top/* 国际化处理： 该数据已启用，无需多次启用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'2'\n        }\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                //启用成功，设置表单数据\n                if(result.success){\n                    //this.props.form.setAllFormValue({head:result.data.head});\n                    //关闭 展开，可以做一个refreshTreeNode方法\n                    this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n    \n                    this.changeButtonStatus('start');\n\n                    //刷新界面\n                    this.onRefresh();\n                }\n               // this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n                // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n            }\n        });\n        \n    }\n\n    /**\n     * 停用\n     */\n    onStopEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n\n        if(!selectedTreeNode){\n\n            NCMessage.create({content: this.state.json['10140SACL-000003'], color: 'warning'});//默认top/* 国际化处理： 请选中需要停用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '1'){\n            NCMessage.create({content: this.state.json['10140SACL-000020'], color: 'warning'});//默认top/* 国际化处理： 该数据已停用，无需多次停用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'1'\n        }\n        \n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n                    this.changeButtonStatus('stop');\n                    //刷新界面\n                    this.onRefresh();\n                    //this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n                    // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                    // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                }\n            }\n        });\n        \n    }\n\n    /**\n     * 更多按钮点击更多选项时触发事件\n     * @param key\n     */\n    onMoreSelect({ key }) {\n        if(key == 'start'){\n            this.onStartEps();\n        }else if(key == 'stop'){\n            this.onStopEps();\n        }\n\n    }\n\n\n    /**\n     * 按钮点击状态切换监听事件\n     * @param id\n     */\n    changeButtonStatus(selectedTreeNode,id){\n        switch(id){\n            case 'add':\n            case 'saveadd':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',true);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible(['refresh','print'],false);\n                this.props.button.setButtonVisible('export',false);\n                break;\n            case 'edit':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',true);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible(['refresh','print'],false);\n                this.props.button.setButtonVisible('export',false);\n                break;\n            case 'delete':\n            case 'save':\n            case 'cancel':\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible(['refresh','print'],true);\n                this.props.button.setButtonVisible('export',true);\n            default :\n                break;\n        }\n    }\n\n    /**\n     * 鼠标进入树节点事件\n     * @param key\n     */\n    onMouseEnterEve(key){\n        //设置\n        let obj = {};\n        if(key === this.root.refpk){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n        }else{\n            obj = {\n                delIcon:true, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:true,\n                addIcon:true\n            };\n        }\n        this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n    }\n\n    /**\n     * enablestate change 事件\n     * @param checked\n     */\n    onChange(checked){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得树节点选中项\n        let requestParam = {};\n        if(!selectNode ){\n            NCMessage.create({content: this.state.json['10140SACL-000021'], color: 'warning'});//默认top/* 国际化处理： 请选中树节点*/\n        }\n        requestParam['pk_custsaleclass'] = selectNode.refpk;\n        requestParam['enablestate'] = checked?'2':'1';\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success) {\n                    if (checked) {\n                        //如果是选中 那就把数据再加载到表单\n                        this.props.form.setAllFormValue({head:result.data.head});\n                    } else {\n                        //如果不是选中那就清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        this.props.syncTree.delNodeSuceess(this.config.treeId, selectNode.refpk);\n                    }\n                }\n                this.refreshTreeNode(this.config.treeId,selectNode.pid);\n\n            }\n        });\n    }\n\n    /**\n     * checkbox change 事件\n     */\n    onCheckBoxChange(){\n        this.setState(\n            {checked:!this.state.checked},\n            () => {\n                let showDisableOrg = this.state.checked;\n                //this.state.checked = !this.state.checked\n                let requestParam = {\n                checked:showDisableOrg\n                };\n                ajax({\n                    url:this.config.urls.loadTreeDataUrl,\n                    data:requestParam,\n                    success:(result)=>{\n                        if(result.success){\n                            var data = [Object.assign( {...this.root} , {children : result.data} )],\n                                initLeaf = function(node){\n                                    if(!node.children || node.children.length == 0) {\n                                        \n                                        delete node.children;\n                                    }\n                                    else{\n                                        node.isLeaf = false;\n                                        node.children&&node.children.forEach( (e) => {\n                                            initLeaf(e);\n                                        } );\n                                    }\n                                };\n\n                                data&& data.forEach( (e) => {\n                                initLeaf(e);\n                            });\n\n                            //同步树 加载全部数据\n                            this.props.syncTree.setSyncTreeData(this.config.treeId , data);\n                            //展开节点  设置默认展开项\n                            this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n                        }\n\n                    }\n                })\n            }\n        );\n        \n    }\n\n    onButtonClick(props,id){\n        switch (id) {\n            case 'save':\n            //保存\n                this.onSaveEps();\n                break;\n            case 'saveadd':\n            //保存新增\n                this.onSaveAddEps()\n                break;\n            case 'cancel':\n            //取消\n                this.onCancelEps()\n                break;\n            case 'refresh':\n            //刷新\n                setDefData('supplyability_btnopr',props.config.datasource,'refresh');\n                this.onRefresh()\n                break;\n            case 'print':\n                let pks =  cacheTools.get('sapks');\n                print(\n                    'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                    urls.printUrl, \n                    {\n                        //billtype:'',  //单据类型\n                        funcode: props.config.appcode,      //功能节点编码，即模板编码\n                        nodekey:'supabcl02',     //模板节点标识\n                        oids: pks    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                    },\n                    false\n                );\n                break;\n            case 'export':\n                let pks1 =  cacheTools.get('sapks');\n                this.setState({\n                    pks: pks1\n                 },this.refs.printOutput.open());\n                // print(\n                //     'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                //     urls.printUrl, \n                //     {\n                //         //billtype:'',  //单据类型\n                //         funcode: props.config.appcode,      //功能节点编码，即模板编码\n                //         //nodekey:'',     //模板节点标识\n                //         // nodekey:'assprinttem',  \n                //         outputType:'output',\n                //         oids: pks1    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                //     }\n                // );\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 渲染\n     * @returns {*}\n     */\n    render(){\n        /**\n         *  经过createPage方法后，初始对象都放到了props中\n         *  例如 asyncTree,syncTree,form,table……\n         *  我们用的话直接从props里取就可以了\n         * */\n\n        const {asyncTree,syncTree,form,button,modal,search,DragWidthCom} = this.props;\n        //DragWidthCom 平台出的左右布局的组件  专用于树卡和树表\n        const {createAsyncTree} = asyncTree;//创建异步树，需要引入这个\n        const {createSyncTree} = syncTree;//创建同步树 需要引入这个\n        const {createForm} = form;//创建表单，需要引入这个\n\n        const {createButtonApp}=button;\n\n        let { createModal } = modal;  //模态框\n\n        const {NCCreateSearch} = search;\n\n        return(\n\n            <div>\n                {createModal('modal',{noFooter:false})}\n                {/* 头部 header*/}\n                <div className=\"header\">\n                    {/* 标题 title*/}\n                    <div className=\"title\">{this.props.config.title}</div>\n                    <span className=\"showOff\">\n                        <NCCheckbox\n                            checked={this.state.checked}\n                            defaultChecked={false}\n                            //checked={this.state.checked}\n                            onChange={this.onCheckBoxChange.bind(this)}\n                            //onClick={this.onCheckBoxClick.bind(this)}\n                            disabled={this.state.showOffDisable}\n                            size=\"lg\"\n                        >\n                            {this.state.json['10140SACL-000024']/* 国际化处理： 显示停用*/}\n                        </NCCheckbox>\n                    </span>\n                    {/* 按钮组 btn-group*/}\n                        <div className=\"btn-group\">\n                            {createButtonApp({\n                                area: 'header-button-area',\n                                buttonLimit: 5,\n                                onButtonClick: this.onButtonClick.bind(this),\n                                popContainer: document.querySelector('.header-button-area')\n                            })}\n                        </div>\n                    </div>\n                {/* 树卡区域 */}\n                <div className=\"tree-card\">\n                    <DragWidthCom\n                         // 左树区域\n                        leftDom = {\n                            <div className=\"tree-area\">\n                                {createSyncTree({\n                                    disabledSearch:this.state.disabledSearch,\n                                    treeId :this.config.treeId,\n                                    needEdit: true, //不启用编辑\n                                    showLine: false, //显示连线\n                                    needSearch: true, //是否需要搜索框\n                                    onSelectEve: this.onSelectTree.bind(this),//选择\n                                    onMouseEnterEve:this.onMouseEnterEve.bind(this),\n                                    clickEditIconEve: this.onEditEps.bind(this), //编辑点击 回调\n                                    clickAddIconEve: this.onAddEps.bind(this), //新增点击 回调\n                                    clickDelIconEve: this.onDeleteEps.bind(this), // 删除点击 回调\n                                    showModal:false\n\n                                })}\n                            </div>}     //左侧区域dom\n                         // 右卡片区域\n                        rightDom = {\n                            <div className=\"card-area\">\n                                {createForm(this.config.formId, {\n                                    cancelPSwitch: true,\n                                    onAfterEvent: this.onAfterFormEvent.bind(this)\n\n                                })\n                                }\n                            </div> }     //右侧区域dom\n\n                            defLeftWid='280px'      // 默认左侧区域宽度，px/百分百 \n                    />\n                    <PrintOutput\n                        ref='printOutput'\n                        url={urls.printUrl}\n                        data={{\n                            funcode:'10140SACL',      //功能节点编码，即模板编码\n                            // nodekey:'',     //模板节点标识\n                            oids: this.state.pks,    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                            outputType: \"output\"\n                        }}\n                        //callback={this.onSubmit}\n                        >\n                    </PrintOutput>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\n/**\n * 创建页面\n */\nexport default Supplyabilityclass = createPage({\n    billinfo:[{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: formId\n    }],\n    //initTemplate: initTemplate,\n    mutiLangCode: '10140SACL'\n})(Supplyabilityclass)\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Supplyabilityclass from '../../supplyabilityclass/main/';\r\n\r\n/**\r\n * 供货能力分类-集团\r\n */\r\nexport default class Supplyabilityclass_Glb extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        /**\r\n         *  后面还要考虑 多语 的情况\r\n         * @type {{nodeTitle: string, pageCode: string, nodeType: string}}\r\n         */\r\n        let config = {\r\n            title:'供货能力分类',\r\n            pageCode:'10140SACL_supabcl01',\r\n            appcode:'10140SACL',\r\n            appid:'0001Z010000000000MEC',\r\n            nodeType:'GROUP_NODE',\r\n            formId:'head',\r\n            treeId:'supplyabilityclassTree',\r\n            isGlbGrp:'0'\r\n        };\r\n        return (\r\n            <Supplyabilityclass {...{config:config}}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<Supplyabilityclass_Glb/>, document.querySelector('#app'));"],"sourceRoot":""}