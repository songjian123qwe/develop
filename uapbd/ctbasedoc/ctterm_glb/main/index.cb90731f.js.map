{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.less?61d5","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.less","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/./src/uapbd/ctbasedoc/ctterm_glb/main/index.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/urls.js","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","options","transform","locals","push","props","pageCfg","arguments","length","undefined","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","color","MultiInit","getMultiLang","createUIDom","_react","Ctterm_Glb","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","Component","_react2","default","createElement","_main2","config","title","pageCode","appcode","appid","nodeType","formId","treeId","isGlbGrp","ReactDOM","render","document","querySelector","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","stylesInDom","isOldIE","fn","memo","apply","memoize","all","atob","getElement","selector","target","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","attrs","type","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","setDefData","cardCache","getDefData","NCMenu","PrintOutput","NCDropdown","NCCheckbox","NCPopconfirm","NCCol","NCRow","NCButton","NCTooltip","NCMenuGroup","Item","high","cardfromId","urls","loadTreeDataUrl","queryTemplet","addcttermUrl","queryCardUrl","savetermUrl","savetermtypeUrl","deleteTermUrl","deleteTermtypeUrl","printUrl","sysQueryByPkUrl","CustsaleClass","_this","_initialiseProps","state","pks","disabledSearch","disabledOrgunit","checked","curOrg","json","curSelectedNode","assign","isleaf","innercode","pid","refname","refpk","initTemplate","initButtonStatus","changeButtonStatus","onStartEps","onStopEps","dealTreeData","onSaveCtterm","onDeleteCtterm","allpks","e","iconBox","delIcon","editIcon","addIcon","deleteDataChildrenProp","node","nodeData","isTermType","children","isLeaf","datasource","formstatus","form","getFormStatus","cardfromtatus","onbeforeunload","_this2","that","requestParam","pkorg","ajax","url","_extends","syncTree","setSyncTreeData","openNodeByPk","button","setButtonVisible","_this3","status","getSelectNode","istermType","EmptyAllFormValue","pk_ct_termset","_props$dealFormulamsg","formulamsg","Array","dealFormulamsg","_defineProperty","headData","head","rows","values","enablestateValue","enablestate","pk_ct_termtype","display","setAllFormValue","_this4","selectedTreeNode","pk_custsaleclass","promptBox","noFooter","hasCloseBtn","beSureBtnClick","enablestateUrl","cancelBtnClick","setFormItemsValue","selectNode","openSysModal","_this5","setState","setFormStatus","setNodeDisable","isGroup","_this6","_props$dealFormulamsg2","pk","_this7","method","res","modal","show","card","_this8","isCheckNow","formData","getAllFormValue","areacode","model","pageid","nonPk","validateToSave","treenode","addNodeSuccess","editNodeSuccess","setNodeSelected","alert","_this9","close","_this10","urlchanage","onAddCtterm","_this11","urlchange","delNodeSuceess","_this12","message","deleteCtterm","_this13","_this14","setFormItemsDisabled","_props$dealFormulamsg3","_this15","asyncTree","getSelectNodeAsync","refreshTreeNode","_this16","val","param","field","firstvalue","linkTo","_ref","visible","setButtonDisabled","getSyncTreeValue","hideIcon","_this17","_this18","initLeaf","_this19","setTimeout","onRefresh","onEditCtterm","onSaveAddCtterm","onCancelCtterm","print","funcode","nodekey","oids","pks1","printOutput","open","_this20","_props","search","DragWidthCom","createSyncTree","createAsyncTree","createForm","createButtonApp","createModal","NCCreateSearch","className","userControl","onSaveCttermtype","height","padding","createPageIcon","_BusinessUnitTreeRef2","onChange","onOrgChange","disabled","queryCondition","TreeRefActionExt","orgtype2","AppCode","area","buttonLimit","onButtonClick","popContainer","leftDom","needEdit","showLine","needSearch","onSelectEve","onSelectTree","onMouseEnterEve","clickEditIconEve","onEditCttermtype","clickAddIconEve","onAddCttermtype","clickDelIconEve","onDeleteCttermtype","showModal","rightDom","cancelPSwitch","onAfterEvent","onAfterFormEvent","defLeftWid","ref","outputType","_this21","_BDCreateUIDom2","pagecode","domainName","ccontext","context","pk_org","org_Name","template","meta","setMeta","setButtons","createPage","billinfo","billtype","headcode","mutiLangCode","React","Refer","conf","_index","multiLang","currentLocale","refType","refName","refCode","rootNode","placeholder","queryTreeUrl","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit"],"mappings":"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","file":"uapbd/ctbasedoc/ctterm_glb/main/index.cb90731f.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/ctbasedoc/ctterm_glb/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/ctbasedoc/ctterm_glb/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 136);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box .clearfix {\\n  width: 220px!important;\\n}\\n\", \"\"]);\n\n// exports\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Ctterm from '../../ctterm/main/';\r\n\r\n/**\r\n * 合同条款定义-集团\r\n */\r\nexport default class Ctterm_Glb extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        /**\r\n         *  后面还要考虑 多语 的情况\r\n         * @type {{nodeTitle: string, pageCode: string, nodeType: string}}\r\n         */\r\n        let config = {\r\n            title:'合同条款定义-集团',\r\n            pageCode:'10140Z00_termset',\r\n            appcode:'10140Z00',\r\n            appid:'0001Z010000000000MDP',\r\n            nodeType:'GROUP_NODE',\r\n            formId:'head',\r\n            treeId:'cttermTree',\r\n            isGlbGrp:'0'\r\n        };\r\n        return (\r\n            <Ctterm {...{config:config}}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<Ctterm_Glb/>, document.querySelector('#app'));","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import React, { Component } from 'react';\nimport { createPage, base, ajax ,NCCreateSearch,toast,promptBox,cardCache,getMultiLang,print,high,cacheTools,createPageIcon} from 'nc-lightapp-front';\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\n//import Wanglqh from '../../../refer/supplier/CustSupplierFlexGridTreeRef'\nimport './index.less'\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\nlet {setDefData, getDefData } = cardCache;\nconst {NCMenu,NCDropdown,NCCheckbox,NCPopconfirm,NCCol,NCRow,NCButton,NCTooltip} = base;\nconst {NCMenuGroup} = NCMenu;\nconst { Item } = NCMenu;\nconst {PrintOutput}=high;\n\n\n\n/****************默认参数  开始***********************/\nlet formId = \"head\";//卡片组件Id\nlet cardfromId = \"card\";//卡片组件Id\nlet memberModalId = 'memberModal';//成员--编辑模态窗id\nconst urls={\n    loadTreeDataUrl:\"/nccloud/uapbd/ctterm/loadtreedata.do\",\n    queryTemplet : '/nccloud/platform/templet/querypage.do',\n    addcttermUrl:\"/nccloud/uapbd/ctterm/addctterm.do\",\n    queryCardUrl:\"/nccloud/uapbd/ctterm/querycard.do\",\n    savetermUrl:'/nccloud/uapbd/ctterm/saveterm.do',\n    savetermtypeUrl:'/nccloud/uapbd/ctterm/savetermtype.do',\n    deleteTermUrl:'/nccloud/uapbd/ctterm/delterm.do',\n    deleteTermtypeUrl:'/nccloud/uapbd/ctterm/deltermtype.do',\n    printUrl:'/nccloud/uapbd/ctterm/printurl.do',\n    sysQueryByPkUrl:'/nccloud/uapbd/ctterm/sysquerybypk.do'\n};\nlet pageCode=\"10140Z00_termset\";//默认集团\n/***************默认参数  结束********************/\n\n/**\n * 合同条款定义\n */\nclass CustsaleClass extends Component {\n    constructor(props){\n        super(props)\n        //显示停用复选框的状态标志\n        this.state = {\n            pks:[],\n            disabledSearch:false,\n            disabledOrgunit:false,\n            checked: false,//判断 显示停用按钮是否选中\n            curOrg: '' ,//合同条款定义-组织节点，选中的组织主键\n            json: null,\n            curSelectedNode: null //直接点击树节点操作按钮时 用于记录selectedNode\n        }\n\n        this.config =Object.assign({\n            title: \"\",//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n            treeId:\"cttermTree\",\n            formId:formId,\n            cardfromId:cardfromId,\n            pageCode:pageCode,\n            nodeType:'GROUP_NODE',\n            urls:urls\n        },props.config);\n\n        //自定义根节点\n        this.root = {\n            \"isleaf\": false,\n            \"key\":\"~\",\n            \"title\":\"\",\n            \"id\":\"~\",\n            \"innercode\":\"~\",\n            \"pid\": \"\",\n            \"refname\": \"\",\n            \"refpk\": \"~\"\n        };\n        \n        //主动事件，绑定this指针\n        this.initTemplate = this.initTemplate.bind(this);\n        this.initButtonStatus = this.initButtonStatus.bind(this);\n        this.changeButtonStatus = this.changeButtonStatus.bind(this);\n        this.onStartEps = this.onStartEps.bind(this);\n        this.onStopEps = this.onStopEps.bind(this);\n        this.dealTreeData = this.dealTreeData.bind(this);\n        this.onSaveCtterm = this.onSaveCtterm.bind(this);\n        this.onDeleteCtterm = this.onDeleteCtterm.bind(this);\n\n        this.initTemplate(props);\n        \n\n    }\n\n    //初始化单据模板\n    initTemplate = (props,callback) => {\n        let that = this;\n        createUIDom(props)(\n            {\n                pagecode:props.config.pageCode//页面id\n            // appcode:props.config.appcode//注册按钮的id\n            },\n            {\n                moduleId: '10140Z00',domainName: 'uapbd'\n            },\n            (data, langData)=>{ //(data, langData)\n                if(langData){\n                    this.state.json = langData\n                    that.root.title = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    that.root.refname = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    if(props.config.nodeType == 'GROUP_NODE'){\n\t\t\t\t\t\tprops.config.title = this.state.json['10140Z00-000032']//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprops.config.title = this.state.json['10140Z00-000033']//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n\t\t\t\t\t}\n                }\n                if (data) {\n                \t\t//默认业务单元赋值\n                    let ccontext = data.context || {};\n                    that.state.curOrg = {\n                        refpk : ccontext.pk_org,\n                        refname : ccontext.org_Name,\n                        display : ccontext.org_Name,\n                        values : {refpk : ccontext.pk_org, refname : ccontext.org_Name}\n                    };\n                    if (data.template) {\n                        let meta = data.template;\n                        props.meta.setMeta(meta);\n                    }\n                    if (data.button) {\n                        let button = data.button;\n                        props.button.setButtons(button);\n                    }\n                    that.onRefresh();\n                    callback && callback();\n                }\n            }\n        )\n}\n\n\n      /**\n     * 处理树数据\n     * @param data\n     * @returns {*}\n     */\n    dealTreeData(data){\n        //为了打印左边所有树节点\n        let allpks =[];\n        let deleteDataChildrenProp = function(node){\n            if(!('~' == node.refpk || node.refpk == undefined ) && node.nodeData.isTermType ){\n                allpks.push(node.refpk);\n            }\n            node.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            if(!node.children || node.children.length == 0) {\n                delete node.children;\n            }\n            else{\n                node.isLeaf = false;\n                node.children.forEach( (e) => {\n                    deleteDataChildrenProp(e);\n                } );\n            }\n        };\n        data.forEach( (e) => {\n            e.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            deleteDataChildrenProp(e);\n        });\n        setDefData('allpks',this.props.config.datasource,allpks)\n       // cacheTools.set('allpks',allpks);\n        return data;\n    }\n\n    componentDidUpdate(){\n        //form如果是编辑态，关闭浏览器需要给你提示\n        let formstatus = this.props.form.getFormStatus(this.config.formId);\n\n        let cardfromtatus = this.props.form.getFormStatus(this.config.cardfromId);\n        \n        if((formstatus == undefined || formstatus == 'browse') && (cardfromtatus == 'browse' || cardfromtatus == undefined)){\n            window.onbeforeunload = null;\n        }else{\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\n                return '';\n                };\n        }\n    }\n\n    // componentWillMount() {\n    // \tlet callback = (json) => { // json 多语json格式参数； status： 是否请求到json多语，可用来判断多语资源是否请求到并进行一些别的操作； inlt： 可用来进行占位符的一些操作\n    //    \t\tthis.setState({json})       // 保存json和inlt到页面state中并刷新页面\n\t// \t}\n    // \tgetMultiLang({moduleId: '10140Z00',domainName: 'uapbd',callback})\n    // }\n    /**\n     * react 生命周期函数 组件渲染完后触发事件\n     */\n    componentDidMount(){\n        //组织节点，刚进去不加载数据\n        // if(this.config.nodeType==='GROUP_NODE'){\n        //     this.onRefresh();\n        // }\n        \n        //修改按钮状态\n        this.initButtonStatus();\n\n    }\n\n    onRefresh(){\n         /**************\n         * 构造请求参数\n         * @type {{checked: boolean}}\n         *************/\n        let that = this;\n        let requestParam = { \n            checked:that.state.checked,\n            pkorg:that.state.curOrg.refpk\n         };\n         let data = [];\n        /*************\n         * ajax请求 加载树数据\n         *************/\n        ajax({\n\n            url:that.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n\n                    that.root.title = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    that.root.refname = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n\n                    if(that.config.nodeType==='ORG_NODE' && !that.state.curOrg){\n                        data = [{...that.root}];\n                    }else{\n                        data = [Object.assign( {...that.root} , {children : result.data} )];\n                    }\n                    //同步树  加载全部数据\n                    that.props.syncTree.setSyncTreeData(that.config.treeId , that.dealTreeData(data));\n                    //展开节点  设置默认展开项\n                    that.props.syncTree.openNodeByPk(that.config.treeId, that.root.refpk);\n                    if(getDefData('ctterm_btnopr',that.props.config.datasource) == 'refresh'){\n                        toast({title:this.state.json['10140Z00-000001'],color:\"success\"});/* 国际化处理： 刷新成功！*/\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 页面初始设置button状态\n     * @param props\n     */\n    initButtonStatus(){\n        //设置保存按钮不显示\n        this.props.button.setButtonVisible('add',false);\n        this.props.button.setButtonVisible('edit',false);\n        this.props.button.setButtonVisible('save',false);\n        this.props.button.setButtonVisible('saveadd',false);\n        this.props.button.setButtonVisible('cancel',false);\n        this.props.button.setButtonVisible('delete',false);\n        this.props.button.setButtonVisible('printpage',false);\n    }\n\n    /**\n     * 点击树节点\n     * @param refpk\n     */\n    onSelectTree(refpk){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);\n        //编辑态  树节点操作无效  应该提供一个接口，编辑态任何操作都不能动\n        let status = this.props.form.getFormStatus(this.config.formId);\n        let istermType = this.props.syncTree.getSelectNode(this.config.treeId);\n        if(refpk == this.root.refpk){\n            //清空表单\n            this.props.form.EmptyAllFormValue(this.config.formId);\n            this.changeButtonStatus('selectroot');\n            return;\n        }\n        //选中树节点的时候如果是编辑态或者是选中的是合同条款类型，就不往卡片回写数据\n        if(status == 'edit' || istermType.nodeData.isTermType){\n            this.changeButtonStatus('select');\n            return;\n        }\n        \n        /********************************\n         * ajax 请求选择的树节点数据\n         ********************************/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_ct_termset:refpk,isGlbGrp: this.config.isGlbGrp},\n            success:(result)=>{\n\n                if(result.success){\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\",\n                                [this.config.cardfromId]:\"form\"\n                            }\n                        );\n                    }\n            \n                    //表单数据\n                    let headData = result.data.head.rows[0].values;\n                    if(headData.hasOwnProperty('enablestate')){\n                        let enablestateValue = headData.enablestate.value;\n                        //根据表单项enablestate的值修改开关状态\n                        if(enablestateValue == '2'){\n                            result.data.head.rows[0].values.enablestate.value = true;\n                        }else{\n                            result.data.head.rows[0].values.enablestate.value = false;\n                        }\n                    }\n                    \n                    if(headData.pk_ct_termtype.display == this.root.refpk){\n                        result.data.head.rows[0].values.pk_ct_termtype.display = '';\n                        result.data.head.rows[0].values.pk_ct_termtype.value='';\n                    }\n                    //清空表单\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为所选树节点数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n\n                    this.changeButtonStatus('cancel');\n                    //设置表单项enablestate可用\n                   // this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});\n\n                }\n            }\n        });\n        \n    }\n\n\n    /**\n     * 表单编辑事件\n     * @param props\n     * @param moduleId\n     * @param key\n     * @param value\n     * @param index\n     */\n    onAfterFormEvent(props, moduleId, key, value, index){\n        switch(key){\n            case \"enablestate\":\n\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n                if(!selectedTreeNode){\n                    let content = value.value?this.state.json['10140Z00-000002']:this.state.json['10140Z00-000003'];/* 国际化处理： 请选中需要启用的树节点,请选中需要停用的树节点*/\n                    toast({content: content, color: 'warning'});//默认top\n                    return;\n                }\n                let requestParam = {pk_custsaleclass:selectedTreeNode.refpk,enablestate:value.value?'2':'1'};\n\n                promptBox({\n                    color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                    noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                    hasCloseBtn:false,\n                    content: value.value?this.state.json['10140Z00-000005']:this.state.json['10140Z00-000006'],/* 国际化处理： 确认启用该数据？,确认停用该数据？*/\n                    beSureBtnClick: () =>{\n                        ajax({\n                            url:this.config.urls.enablestateUrl,\n                            data:requestParam,\n                            success:(result)=>{\n                                /****\n                                 * 启用停用，只是启用停用 与树节点的显示隐藏没有关系\n                                 * 想根据启用状态显示或隐藏树节点，需要通过更改显示停用check框来实现\n                                 */\n                                toast({title:value.value?this.state.json['10140Z00-000007']:this.state.json['10140Z00-000008'],color:'success'});/* 国际化处理： 启用成功！,停用成功！,提示*/\n\n                            }\n                        });\n                    } ,\n                    cancelBtnClick:()=>{\n                        props.form.setFormItemsValue(this.config.formId,{enablestate:true});\n                        return;\n                    }\n                })\n                break;\n            default:\n                break;\n        }\n        //some code\n    }\n\n    /**\n     * 新增\n     */\n    onAddCttermtype(selectNode){\n        if (selectNode.refpk != '~' && !selectNode.nodeData.isTermType) {\n            toast({content: this.state.json['10140Z00-000010'], color: 'warning'});//默认top/* 国际化处理： 合同条款上不能新增合同条款类型！*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && !this.state.curOrg.refpk){\n            toast({content: this.state.json['10140Z00-000011'], color: 'warning'});//默认top/* 国际化处理： 请选择业务单元*/\n            return;\n        }\n        this.openSysModal('');\n    }\n\n    /**\n     * 新增\n     */\n    onAddCtterm(){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n        if(this.config.nodeType==='ORG_NODE' && !this.state.curOrg.refpk){\n            toast({content: this.state.json['10140Z00-000011'], color: 'warning'});//默认top/* 国际化处理： 请选择业务单元*/\n            return;\n        }\n\n        if (!selectNode) {\n\n            toast({content: this.state.json['10140Z00-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点*/\n            return;\n\n        }\n        \n        this.setState({curSelectedNode:selectNode});\n        let requestParam = {};//请求参数对象\n        requestParam['pkorg'] = this.state.curOrg.refpk;\n        if(selectNode.nodeData.isTermType){\n            //存在选中节点，设置父节点pk为选中节点refpk\n            requestParam['pk_ct_termtype'] = selectNode.refpk;\n        }else{\n            //不存在选中节点，设置父节点为根节点refpk\n            requestParam['pk_ct_termtype'] = selectNode.pid;\n        }\n\n        ajax({\n            url:this.config.urls.addcttermUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    //清空表单数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置新增默认值\n                    \n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //设置表单项不可用   \n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //设置左树上搜索按钮不可用\n                    this.setState( {\n                        disabledSearch:true,\n                        disabledOrgunit:true\n                        });\n                    this.changeButtonStatus('add');\n                }\n            }\n        })\n        \n    }\n\n    /**\n     * 编辑\n     */\n    onEditCttermtype(selectedTreeNode){\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if (!selectedTreeNode.nodeData.isTermType) {\n            toast({content: this.state.json['10140Z00-000014'], color: 'warning'});//默认top/* 国际化处理： 树上不能编辑合同条款！*/\n            return;\n        }\n        this.openSysModal(selectedTreeNode.id);\n    }\n\n    /**\n     * 编辑\n     */\n    onEditCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点*/\n            return;\n\n        }\n        this.setState({curSelectedNode:selectedTreeNode});\n        /**************************************************\n         *\n         * 编辑：\n         *      1、构造请求参数\n         *      2、ajax请求，后台查询需要编辑的对象\n         *      3、回调，设置表单数据为编辑的对象\n         *\n         * 编辑状态下：\n         *      只有 保存  取消 按钮 显示\n         *\n         *\n         **************************************************/\n        /****选中的如果是条款类型节点，则提示不让修改***/\n\n        if (selectedTreeNode.nodeData.isTermType) {\n\n            toast({content: this.state.json['10140Z00-000015'], color: 'warning'});//默认top/* 国际化处理： 请选中合同条款节点(叶子节点)*/\n            return;\n\n        }\n\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n\n        /***ajax请求***/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_ct_termset:selectedTreeNode.refpk},\n            success:(result)=>{\n\n                if(result.success){\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\",\n                                [this.config.cardfromId]:\"form\"\n                            }\n                        );\n                    }\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //设置表单数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n                  //  this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});//设置表单项不可用\n                    //设置表单状态为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置左树上搜索按钮不可用\n                    this.setState( {\n                        disabledSearch:true,\n                        disabledOrgunit:true\n                        });\n                    this.changeButtonStatus('edit');\n                }\n            }\n        });\n    }\n    \n    //体系编辑窗口\n    openSysModal(pk){\n        this.props.form.setFormStatus(cardfromId,'edit');\n       // this.props.form.EmptyAllFormValue(cardfromId);\n        //请求参数对象\n        let requestParam = {\n            pk_ct_termtype:pk,\n            pkorg:this.state.curOrg.refpk\n        };\n        ajax({\n            url:this.config.urls.sysQueryByPkUrl,\n            method:\"post\",\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n                    //弹出体系编辑窗口\n                    //this.props.modal.show(memberModalId);\n                    this.props.modal.show('treeedit',{title:this.state.json['10140Z00-000029']});\n\n                    this.props.form.setFormStatus(this.config.cardfromId, 'edit');\n                    //设置表单为编辑态\n                    this.props.form.EmptyAllFormValue(cardfromId);\n                    //设置新增默认值\n                    this.props.form.setAllFormValue({card:res.data.card});\n                }\n            }\n        });\n        \n    }\n\n\n    /**\n     * 保存\n     */\n    onSaveCtterm(){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.formId);\n        if(!memberFlag){\n            return;\n        }\n\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        if(!selectedTreeNode){\n            selectedTreeNode = this.state.curSelectedNode;\n        }\n        if(!selectedTreeNode){\n            alert(this.state.json['10140Z00-000016']);/* 国际化处理： 请选中节点*/\n            return;\n        }\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData ;//= this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let urlchanage ; \n        var pk = null;\n        formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termset')){\n            pk = formData.rows[0].values.pk_ct_termset.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n            formData.areacode = this.config.formId;//添加表单的areacode编码\n        }\n        /***设置请求参数***/\n        formData.rows['status'] = '2';//设置状态\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n        \n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        \n        \n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n\n        //校验公式\n        this.props.validateToSave(requestParam ,()=>{\n            //ajax请求\n            ajax({\n                url: this.config.urls.savetermUrl,\n                data: requestParam,\n                success: (result) => {\n                    if(result.success){\n                        //设置表单浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        //设置树可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                        if(!result.data.treenode[0].children || result.data.treenode[0].children.length == 0 ){\n                            delete result.data.treenode[0].children;\n                        }\n                        if(nonPk){\n                            //新增回调后添加\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data.treenode);\n                        }else{\n                            \n                            //修改回调后修改\n                            this.props.syncTree.editNodeSuccess(this.config.treeId,result.data.treenode[0]);\n                        }\n                        //表单数据\n                        let headData = result.data.head.head.rows[0].values;\n                        if(headData.hasOwnProperty('enablestate')){\n                            let enablestateValue = headData.enablestate.value;\n                            //根据表单项enablestate的值修改开关状态\n                            if(enablestateValue == '2'){\n                                headData.enablestate.value = true;\n                            }else{\n                                headData.enablestate.value = false;\n                            }\n                        }\n                        \n                        //清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        //设置表单为所选树节点数据\n                        this.props.form.setAllFormValue({head:result.data.head.head});\n                        \n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data.treenode[0].pid);\n\n                        this.props.syncTree.setNodeSelected(this.config.treeId, result.data.treenode[0].refpk);\n                        //设置表单项可用\n                        \n                        //清空自定已选中项\n                        this.setState({curSelectedNode:null,disabledSearch:false,disabledOrgunit:false});\n                        toast({title:this.state.json['10140Z00-000017'],color:'success'});/* 国际化处理： 保存成功！,提示*/\n                        this.changeButtonStatus('save');\n                    }\n                }\n            });\n        }, {'head':'form'} , 'form' );\n        \n    }\n\n    /**\n     * 保存\n     */\n    onSaveCttermtype(){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.cardfromId);\n        if(!memberFlag){\n            this.props.modal.show('treeedit',{title:this.state.json['10140Z00-000029']});\n            return;\n        }\n        \n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData ;//= this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let urlchanage ; \n        var pk = null;\n        formData = this.props.form.getAllFormValue(this.config.cardfromId);//获得表单信息\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termtype')){\n            pk = formData.rows[0].values.pk_ct_termtype.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点  \n            formData.areacode = this.config.cardfromId;//添加表单的areacode编码 \n        }\n        /***设置请求参数***/\n        formData.rows['status'] = '2';//设置状态\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n        \n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n        //ajax请求\n        ajax({\n            url: this.config.urls.savetermtypeUrl,\n            data: requestParam,\n            success: (result) => {\n                if(result.success && result.data){\n                    //设置表单浏览态\n                    this.props.form.setFormStatus(this.config.formId, 'browse');\n                    //设置树可用\n                    this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                    if(!result.data[0].children || result.data[0].children.length == 0 ){\n                        delete result.data[0].children;\n                    }\n                    if(nonPk){\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                    }else{\n                        \n                        //修改回调后修改\n                        this.props.syncTree.editNodeSuccess(this.config.treeId,result.data[0]);\n                    }\n                    //展开树节点\n                    this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n\n                    this.props.syncTree.setNodeSelected(this.config.treeId, result.data[0].refpk);\n                    //设置表单项可用\n                  //  this.props.form.setFormItemsDisabled(this.config.formId);\n                    //清空自定已选中项\n                    this.setState({curSelectedNode:null});\n\n                    this.changeButtonStatus('save');\n                    \n                    this.props.form.setFormStatus(cardfromId,'browse');\n\n                    toast({title:this.state.json['10140Z00-000017'],color:'success'});/* 国际化处理： 保存成功！,提示*/\n\n                    this.props.modal.close('treeedit');\n                }\n\n            }\n        }); \n    }\n\n\n\n    /**\n     * 保存新增\n     */\n    onSaveAddCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        let urlchanage ; \n        var pk = null;\n        urlchanage = this.config.urls.savetermUrl;\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termset')){\n            pk = formData.rows[0].values.pk_ct_termset.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n        }\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: '10140EPSG'//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n\n        }\n\n        //校验公式\n        this.props.validateToSave( requestParam , ()=>{\n            /***ajax请求***/\n            ajax({\n                url: urlchanage,\n                data: requestParam,\n                success: (result) => {\n                    /**********\n                     *\n                     * 这里的代码可以精简，临时先这样，逻辑思路是一样的\n                     *\n                     *\n                     *********/\n                    if(result.success){\n                        //设置表单为浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        if(!result.data.treenode[0].children || result.data.treenode[0].children.length == 0 ){\n                            delete result.data.treenode[0].children;\n                        }\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data.treenode);\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data.treenode[0].pid);\n\n                        //判断 选中节点如果消失，重新设置新增节点的父节点为选中节点，然后重新获取选中节点\n                        if(!selectedTreeNode){\n                            this.props.syncTree.setNodeSelected(this.config.treeId,result.data.treenode[0].pid);\n                            selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                        }\n\n                        //重新设置整棵树不可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,true);\n\n                        //this.props.syncTree.setNodeSelected(this.config.treeId, result.data[0].refpk);\n                        //保存新增的时候，以当前节点合同类型作为下个新增的合同类型\n                        requestParam = {\n                            pk_ct_termtype:result.data.treenode[0].pid\n                        };\n                        this.onAddCtterm();\n                    }\n                }\n            });\n        }, {[this.config.formId]:'form'} , 'form' )\n\n        \n    }\n\n    deleteCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        let urlchange;\n        if(selectedTreeNode.nodeData.isTermType == true){\n            urlchange = this.config.urls.deleteTermtypeUrl\n           requestParam = {\n               pk_ct_termtype:selectedTreeNode.refpk     \n           }\n       }else{\n           urlchange  = this.config.urls.deleteTermUrl\n           requestParam = {\n               pk_ct_termset:selectedTreeNode.refpk\n           }\n       }\n\n       ajax({\n           url:urlchange,\n           data:requestParam,\n           success:(result)=>{\n               if(result.success){        \n                   this.props.form.EmptyAllFormValue(this.config.formId);\n                   //调用同步树的接口，删除该树节点\n                   this.props.syncTree.delNodeSuceess(this.config.treeId,selectedTreeNode.refpk);\n                   toast({title:this.state.json['10140Z00-000018'],color:'success'});/* 国际化处理： 删除成功！,提示*/\n                   //删除成功提示\n                   // Message.create({content: '删除成功！', color: 'success'});//默认top\n               }\n\n           }\n       })\n        \n    }\n\n    /**\n     * 删除\n     */\n    onDeleteCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000019'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            toast({content: this.state.json['10140Z00-000020'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除*/\n            return;\n        }\n        if (selectedTreeNode.nodeData.isTermType) {\n\n            toast({content: this.state.json['10140Z00-000021'], color: 'warning'});//默认top/* 国际化处理： 不能删除合同条款类型,请到树上进行删除*/\n            return;\n        }\n        let message = this.state.json['10140Z00-000022']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.children && selectedTreeNode.children.length>0){\n            toast({content: this.state.json['10140Z00-000023'], color: 'warning'});//默认top/* 国际化处理： 删除失败！该合同条款类型下已有合同条款！*/\n            return;\n        }\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: message,\n            beSureBtnClick: () =>{\n                this.deleteCtterm()\n            }   \n        })\n        // this.props.modal.show('modal', {\n        //     title: '确认删除',\n        //     content: message,\n        //     beSureBtnClick:this.deleteCtterm.bind(this),\n        // });\n        this.changeButtonStatus('delete');\n\n    }\n\n    /**\n     * 删除\n     */\n    onDeleteCttermtype(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000019'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            toast({content: this.state.json['10140Z00-000020'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除*/\n            return;\n        }\n        let message = this.state.json['10140Z00-000022']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.nodeData.isTermType &&  selectedTreeNode.hasOwnProperty('children') && selectedTreeNode.children.length>0){\n            toast({content: this.state.json['10140Z00-000023'], color: 'warning'});//默认top/* 国际化处理： 删除失败！该合同条款类型下已有合同条款！*/\n            return;\n        }\n        if(!selectedTreeNode.nodeData.isTermType){\n            toast({content: this.state.json['10140Z00-000024'], color: 'warning'});//默认top/* 国际化处理： 删除失败！树上不能删除合同条款！*/\n            return;\n        }\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: message,\n            beSureBtnClick: () =>{\n                this.deleteCtterm();\n            }   \n        })\n        // this.props.modal.show('modal', {\n        //     title: '确认删除',\n        //     content: message,\n        //     beSureBtnClick:this.deleteCtterm.bind(this),\n        // });\n        this.changeButtonStatus('del');\n\n    }\n\n    /**\n     * 取消\n     */\n    onCancelCtterm(){\n        let istermType = this.props.syncTree.getSelectNode(this.config.treeId);\n\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000034'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: this.state.json['10140Z00-000025'],/* 国际化处理： 您确定要取消吗？*/\n            beSureBtnClick: () =>{\n                //同步树 取消的逻辑\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                /**********************************************************\n                 *\n                 * 取消：\n                 *      1、重新根据选中的树节点查询表单对象\n                 *      2、回调，设置表单对象\n                 *      3、设置按钮状态\n                 *\n                 **********************************************************/\n                this.props.form.EmptyAllFormValue(this.config.formId);\n                this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n                if(selectedTreeNode){\n                    //查询节点信息\n                    ajax({\n                        url:this.config.urls.queryCardUrl,\n                        data:{pk_ct_termset:selectedTreeNode.refpk},\n                        success:(result)=>{\n\n                            if(result.success){\n                                //查询时执行显示公式前端适配\n                                if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                                    props.dealFormulamsg(\n                                        result.formulamsg,  //参数一：返回的公式对象\n                                        {                //参数二：界面使用的表格类型\n                                            [this.config.formId]:\"form\",\n                                            [this.config.cardfromId]:\"form\"\n                                        }\n                                    );\n                                }\n                                this.props.form.setAllFormValue({head:result.data.head});\n                            }\n                        }\n                    });\n                }else{\n                    //没有选中项  清空所有数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                }\n                this.props.form.setFormStatus(this.config.formId, 'browse');\n                //设置树可用\n                this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                //设置按钮状态\n                //设置左树上搜索按钮可用\n                this.setState( {\n                    disabledSearch:false,\n                    disabledOrgunit:false\n                    });\n\n                if(istermType.nodeData.isTermType){\n                    this.changeButtonStatus('select');\n                }else{\n                    this.changeButtonStatus('cancel');\n                }\n                \n            }   \n        })\n        // this.props.modal.show('confirm',{\n        //     title:'提示',\n        //     content: \"您确定要取消吗？\",\n        //     noFooter : false, //是否需要底部按钮,默认true\n        //     userControl:true,//自己控制什么时候关闭窗口\n        //     beSureBtnClick:() =>{\n        //         //同步树 取消的逻辑\n        //         let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        //         /**********************************************************\n        //          *\n        //          * 取消：\n        //          *      1、重新根据选中的树节点查询表单对象\n        //          *      2、回调，设置表单对象\n        //          *      3、设置按钮状态\n        //          *\n        //          **********************************************************/\n        //         this.props.form.EmptyAllFormValue(this.config.formId);\n        //         this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n        //         if(selectedTreeNode){\n        //             //查询节点信息\n        //             ajax({\n        //                 url:this.config.urls.queryCardUrl,\n        //                 data:{pk_ct_termset:selectedTreeNode.refpk},\n        //                 success:(result)=>{\n\n        //                     if(result.success){\n        //                         this.props.form.setAllFormValue({head:result.data.head});\n\n\n        //                     }\n        //                 }\n        //             });\n        //         }else{\n        //             //没有选中项  清空所有数据\n        //             this.props.form.EmptyAllFormValue(this.config.formId);\n        //         }\n        //         this.props.form.setFormStatus(this.config.formId, 'browse');\n        //         //设置树可用\n        //         this.props.syncTree.setNodeDisable(this.config.treeId,false);\n        //         //设置按钮状态\n        //         //设置左树上搜索按钮可用\n        //         this.setState( {\n        //             disabledSearch:false,\n        //             disabledOrgunit:false\n        //             });\n        //         this.changeButtonStatus('cancel');\n        //     }\n        // });\n        \n    }\n\n    /**\n     * 启用\n     */\n    onStartEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        /**************************************************\n         *\n         * 启用/停用\n         *      1、判断选中树节点的状态，做出相应的提示\n         *      2、构造请求参数\n         *      3、ajax请求，后台执行更新\n         *\n         * 启用/停用状态下：\n         *      按钮的可见性和可操作性不变\n         *\n         *\n         **************************************************/\n\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140Z00-000002'], color: 'warning'});//默认top/* 国际化处理： 请选中需要启用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '2'){\n            toast({content: this.state.json['10140Z00-000026'], color: 'warning'});//默认top/* 国际化处理： 该数据已启用，无需多次启用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'2'\n        }\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                //启用成功，设置表单数据\n                if(res.success){\n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //关闭 展开，可以做一个refreshTreeNode方法\n    \n                    this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n    \n                    this.changeButtonStatus('start');\n                }\n                // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n            }\n        });\n    }\n\n    /**\n     * 停用\n     */\n    onStopEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140Z00-000003'], color: 'warning'});//默认top/* 国际化处理： 请选中需要停用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '1'){\n            toast({content: this.state.json['10140Z00-000027'], color: 'warning'});//默认top/* 国际化处理： 该数据已停用，无需多次停用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'1'\n        }\n\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n\n                    this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n\n                    this.changeButtonStatus('stop');\n                    // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                    // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                }\n            }\n        });\n        \n    }\n\n    /*****button group end*****/\n\n    /**\n     * 查询按钮点击事件\n     * @param props\n     * @param val\n     */\n    onClickSearchBtn(props,val){\n        let url = \"/uapbd/eps/main/list/index.html\";\n        //获得查询区域条件\n        // let data = props.search.getAllSearchData(\"epsQryTemp\");\n        let param = {};\n        if(val!=null){\n            val.map((e)=>{\n                param[e.field] = e.value.firstvalue;\n            });\n        }\n\n\n        props.linkTo(\n            url,param\n        );\n    }\n\n    /**\n     * 更多按钮点击更多选项时触发事件\n     * @param key\n     */\n    onMoreSelect({ key }) {\n        if(key == 'start'){\n            this.onStartEps();\n        }else if(key == 'stop'){\n            this.onStopEps();\n        }\n\n    }\n\n    /**\n     * 更多选项，切换选项时触发事件\n     * @param visible\n     */\n    onVisibleChange(visible) {\n    }\n\n    /**\n     * 更多按钮占位事件\n     */\n    onMore(){\n    }\n\n    /**\n     * 按钮点击状态切换监听事件\n     * @param id\n     */\n    changeButtonStatus(id){\n        switch(id){\n            case 'saveadd':\n            case 'add':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',true);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible('printpage',false);\n                this.props.button.setButtonVisible('refresh',false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('delete',false);\n                this.props.button.setButtonVisible('add',false);\n                break;\n            case 'edit':\n                this.props.button.setButtonVisible('add',false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible('printpage',false);\n                this.props.button.setButtonVisible('refresh',false);\n                this.props.button.setButtonVisible('delete',false);\n                break;\n            case 'save':\n            case 'cancel':\n            case 'delete':\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonDisabled(['delete'],false);\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonDisabled(['add'],false);\n                this.props.button.setButtonVisible('edit',true);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                break;\n            case 'select':\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonDisabled(['add'],false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                this.props.button.setButtonDisabled(['delete'],true);\n                break;\n            case 'selectroot':\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                this.props.button.setButtonDisabled(['delete','add'],true);\n                break;\n            default :\n                break;\n        }\n    }\n\n    /**\n     * 鼠标进入树节点事件\n     * @param key\n     */\n    onMouseEnterEve(key){\n        let selectedTreeNode = this.props.syncTree.getSyncTreeValue(this.config.treeId,key);\n        let obj = {};\n        //设置\n        if(key === this.root.refpk || (this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData && selectedTreeNode.nodeData.isGroup)){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n\n        if(this.config.nodeType==='GROUP_NODE' && selectedTreeNode.nodeData && !selectedTreeNode.nodeData.isGroup){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n\n        if(!selectedTreeNode.nodeData.isTermType){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:false\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n    }\n\n    /**\n     * enablestate change 事件\n     * @param checked\n     */\n    onChange(checked){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得树节点选中项\n        let requestParam = {};\n        if(!selectNode ){\n            toast({content: this.state.json['10140Z00-000028'], color: 'warning'});//默认top/* 国际化处理： 请选中树节点*/\n        }\n        requestParam['pk_custsaleclass'] = selectNode.refpk;\n        requestParam['enablestate'] = checked?'2':'1';\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success) {\n                    if (checked) {\n                        //如果是选中 那就把数据再加载到表单\n                        \n                        this.props.form.setAllFormValue({head:result.data.head});\n                    } else {\n                        //如果不是选中那就清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        this.props.syncTree.delNodeSuceess(this.config.treeId, selectNode.refpk);\n                    }\n                }\n\n            }\n        });\n    }\n\n    /**\n     * checkbox change 事件\n     */\n    onCheckBoxChange(){\n        let checked = this.state.checked;\n        let requestParam = {\n          checked:this.state.checked\n        };\n        ajax({\n            url:this.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    var data = [Object.assign( {...this.root} , {children : result.data} )],\n                        initLeaf = function(node){\n                            if(!node.children || node.children.length == 0) {\n                        \n                                delete node.children;\n                            }\n                            else{\n                                node.isLeaf = false;\n                                node.children.forEach( (e) => {\n                                    initLeaf(e);\n                                } );\n                            }\n                        };\n\n                    data.forEach( (e) => {\n                        initLeaf(e);\n                    });\n\n                    //同步树 加载全部数据\n                    this.props.syncTree.setSyncTreeData(this.config.treeId , data);\n                    //展开节点  设置默认展开项\n                    this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n                }\n\n            }\n        })\n    }\n\n    /**\n     * checkbox 选中事件\n     */\n    onCheckBoxClick(){\n\n        this.setState({checked:!this.state.checked});\n        this.props.form.EmptyAllFormValue(this.config.formId);//清空表单数据\n    }\n\n    /**\n     * 业务单元组织参照 选中事件\n     */\n    onOrgChange(value){\n        this.setState({\n            curOrg: value\n        });\n        setTimeout(() => this.onRefresh() ,10); //选中后开始加载部门数据\n    }\n\n    // loadCustSaleClassTreeData(){\n    //     ajax({\n    //         loading: true,\n    //         url: this.config.urls.loadTreeDataUrl,\n    //         data: {\n    //             checked:this.state.checked,\n    //             pkorg:this.state.curOrg.refpk\n    //         }, //参数带上选中的行政组织\n    //         success:(result)=>{\n    //             if(result.success && result.data){\n\n    //                 let data = [Object.assign( {...this.root} , {children : result.data} )];\n    //                 //同步树  加载全部数据\n    //                 this.props.syncTree.setSyncTreeData(this.config.treeId , this.dealTreeData(data));\n    //                 //展开节点  设置默认展开项\n    //                 this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n    //             }else{\n    //                 this.props.syncTree.setSyncTreeData(this.config.treeId , []);\n    //             }\n    //         }\n    //     });\n    // }\n\n\n    onButtonClick(props,id){\n        switch (id) {\n            case 'add':\n            //新增\n                this.onAddCtterm()\n                break;\n            case 'edit':\n            //编辑\n                this.onEditCtterm()\n                break;\n            case 'save':\n            //保存\n                this.onSaveCtterm();\n                break;\n            case 'saveadd':\n            //保存新增\n                this.onSaveAddCtterm()\n                break;\n            case 'delete':\n            //删除\n                this.onDeleteCtterm()\n                break;\n            case 'cancel':\n            //取消\n                this.onCancelCtterm()\n                break;\n            case 'print':\n                let pks = getDefData('allpks',props.config.datasource);//cacheTools.get('allpks');\n                if(pks.length <= 0){\n                    toast({content: this.state.json['10140Z00-000035'], color: 'warning'});/* 国际化处理： 没有要打印的数据！*/\n                    return;\n                }\n                print(\n                    'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                    this.config.urls.printUrl, \n                    {\n                        //billtype:'',  //单据类型\n                        funcode: '10140Z00',//props.config.appcode,      //功能节点编码，即模板编码\n                        nodekey:'termset',     //模板节点标识\n                        oids: pks    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                    },false\n                );\n                break;\n            case 'export':\n                let pks1 = getDefData('allpks',props.config.datasource);//cacheTools.get('allpks');\n                if(pks1.length <= 0){\n                    toast({content: this.state.json['10140Z00-000036'], color: 'warning'});/* 国际化处理： 没有要输出的数据！*/\n                    return;\n                }\n                this.setState({\n                    pks: pks1\n                 },this.refs.printOutput.open());\n                // print(\n                //     'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                //     urls.printUrl, \n                //     {\n                //         //billtype:'',  //单据类型\n                //         funcode: '10140CSCLG',      //功能节点编码，即模板编码\n                //         //nodekey:'',     //模板节点标识\n                //         // nodekey:'assprinttem',  \n                //         outputType:'output',\n                //         oids: pks1    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                //     }\n                // );\n                break;\n            case 'refresh': \n            //刷新\n            setDefData('ctterm_btnopr',props.config.datasource,'refresh');\n            this.onRefresh();\n               break;\n               \n            default:\n                break;\n        }\n    }\n\n\n    /**\n     * 渲染\n     * @returns {*}\n     */\n    render(){\n        /**\n         *  经过createPage方法后，初始对象都放到了props中\n         *  例如 asyncTree,syncTree,form,table……\n         *  我们用的话直接从props里取就可以了\n         * */\n        const {asyncTree,syncTree,form,button,modal,search,DragWidthCom} = this.props;\n        //DragWidthCom 平台出的左右布局的组件  专用于树卡和树表\n        const {createAsyncTree} = asyncTree;//创建异步树，需要引入这个\n        const {createSyncTree} = syncTree;//创建同步树 需要引入这个\n        const {createForm} = form;//创建表单，需要引入这个\n\n        const {createButtonApp}=button;\n\n        let { createModal } = modal;  //模态框\n\n        const {NCCreateSearch} = search;\n\n        return(\n\n            <div className=\"nc-bill-tree-card\">\n                {createModal('modal',{noFooter:false})}\n                {createModal('confirm')}\n                { this.state.json && createModal('treeedit',{\n                    title:this.state.json['10140Z00-000029'],/* 国际化处理： 合同条款类型*/\n                    content:this.props.form.createForm(cardfromId),\n                    userControl:true,//自己控制什么时候关闭窗口\n                    beSureBtnClick: this.onSaveCttermtype.bind(this),\n                    cancelBtnClick:()=>{\n                        promptBox({\n                            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                            title: this.state.json['10140Z00-000034'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                            hasCloseBtn:false,\n                            content: this.state.json['10140Z00-000025'],/* 国际化处理： 您确定要取消吗？*/\n                            beSureBtnClick: () =>{\n                                this.props.form.setFormStatus(cardfromId,'browse');\n                                this.props.modal.close('treeedit');\n                            }   \n                        })\n                       // this.props.modal.close('treeedit');\n                    },\n                    noFooter : false //是否需要底部按钮,默认true\n                }) }\n                {/* 头部 header*/}\n                <div className = 'nc-bill-header-area' style={{height:'auto',padding:'0'}}>\n                <div className=\"header header-title-search-area\">\n                    {/* 标题 title*/}\n                    {createPageIcon()}\n                    <h2 className=\"title\">{this.props.config.title}</h2>\n                    {/*Wanglqh({\n                        isTreelazyLoad:true,\n                    })*/}\n                    {/* 显示停用*/}\n                    {this.config.nodeType==='ORG_NODE'?(\n                        <div className=\"search-box\">\n                            {BusinessUnitTreeRef({\n                                onChange:this.onOrgChange.bind(this),\n                                value:this.state.curOrg,\n                                disabled: this.state.disabledOrgunit,\n                                queryCondition : () => {\n                                    return {\n                                        TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder,nccloud.web.uapbd.ctbasedoc.ctterm.action.OrgUnitForCorpFilter',\n                                        orgtype2:'Y',\n                                        AppCode:this.config.appcode\n                                    }\n                                }\n                            })}\n                        </div>\n                    ):('')\n                    }\n                    {/* 按钮组 btn-group*/}\n                    <div className=\"btn-group\">\n                        {createButtonApp({\n                            area: 'header-button-area',\n                            buttonLimit: 5,\n                            onButtonClick: this.onButtonClick.bind(this),\n                            popContainer: document.querySelector('.header-button-area')\n                        })}\n                    </div>\n                </div>\n                </div>\n                {/* 树卡区域 */}\n                <div className=\"tree-card\">\n                    <DragWidthCom\n                         // 左树区域\n                        leftDom = {\n                            <div className=\"tree-area\">\n                                {createSyncTree({\n                                    disabledSearch:this.state.disabledSearch,\n                                    treeId :this.config.treeId,\n                                    needEdit: true, //不启用编辑\n                                    showLine: false, //显示连线\n                                    needSearch: true, //是否需要搜索框\n                                    onSelectEve: this.onSelectTree.bind(this),//选择\n                                    onMouseEnterEve:this.onMouseEnterEve.bind(this),\n                                    clickEditIconEve: this.onEditCttermtype.bind(this), //编辑点击 回调\n                                    clickAddIconEve: this.onAddCttermtype.bind(this), //新增点击 回调\n                                    clickDelIconEve: this.onDeleteCttermtype.bind(this), // 删除点击 回调\n                                    showModal:false\n\n                                })}\n                            </div>}     //左侧区域dom\n                         // 右卡片区域\n                        rightDom = {\n                            <div className=\"card-area\">\n                                {createForm(this.config.formId, {\n                                    cancelPSwitch: true,\n                                    onAfterEvent: this.onAfterFormEvent.bind(this)\n\n                                })\n                                }\n                            </div> }     //右侧区域dom\n\n                        defLeftWid = '20%'      // 默认左侧区域宽度，px/百分百\n                    />\n                </div>\n\n                <PrintOutput\n                        ref='printOutput'\n                        url={this.config.urls.printUrl}\n                        data={{\n                            funcode:'10140Z00',      //功能节点编码，即模板编码\n                            nodekey:'termset',     //模板节点标识\n                            oids: this.state.pks,    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                            outputType: \"output\"\n                        }}\n                        //callback={this.onSubmit}\n                        >\n                </PrintOutput>\n\n            </div>\n\n        )\n    }\n}\n\n// //初始化单据模板\n// var initTemplate = function(props) {\n//     props.createUIDom(\n//         {\n//             pagecode:props.config.pageCode//页面id\n//            // appcode:props.config.appcode//注册按钮的id\n//         },\n//         function (data){\n//             debugger\n//             if(data){\n//                 //默认业务单元赋值\n//                 let ccontext = data.context || {};\n//                 this.state.curOrg = {\n//                     refpk : ccontext.pk_org,\n//                     refname : ccontext.org_Name,\n//                     display : ccontext.org_Name,\n//                     values : {refpk : ccontext.pk_org, refname : ccontext.org_Name}\n//                 };\n//                 if(data.template){\n//                     let meta = data.template;\n//                     props.meta.setMeta(meta);\n//                 }\n//                 if(data.button){\n//                     let button = data.button;\n//                     props.button.setButtons(button);\n//                 }\n//                 setFormEnableStateProp(props);\n//             }\n//         }\n//     )\n// }\n\n\n\n/**\n * 设置表单启用状态属性可以编辑\n * @param props\n */\nconst setFormEnableStateProp=(props)=>{\n    //获得元数据\n    let meta = props.meta.getMeta();\n    formId = props.config.formId?props.config.formId:formId;\n    //判断元数据中有我的表单元数据\n    if(Object.prototype.toString.call(meta).slice(8, -1) === 'Object' && meta.hasOwnProperty(formId)){\n        //获得表单元数据\n        let formMeta = props.meta.getMeta()[formId];\n        //判断表单元数据有属性\n        if(formMeta.hasOwnProperty(\"items\")){\n            //获得属性\n            let items = formMeta.items;\n            if(Object.prototype.toString.call(items).slice(8, -1) === 'Array'){\n                items.map((item)=>{\n                    //查找enablestate属性\n                    if(item.hasOwnProperty(\"attrcode\") && item.attrcode == 'enablestate'){\n                        //设置enablestate属性不可用\n                        props.form.setFormItemsDisabled(formId,{enablestate:true});\n                    }\n                });\n            }\n        }\n    }\n}\n\n\n/**\n * 创建页面\n */\nexport default CustsaleClass = createPage({\n    billinfo:[{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: formId\n    },{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: cardfromId\n    }],\n    mutiLangCode: '10140Z00'\n})(CustsaleClass)\n","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n"],"sourceRoot":""}