{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.less?61d5","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.less","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js","webpack://[name]/./node_modules/_style-loader@0.18.2@style-loader/lib/urls.js","webpack://[name]/./src/uapbd/ctbasedoc/ctterm/main/index.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","options","transform","locals","push","props","pageCfg","arguments","length","undefined","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","color","MultiInit","getMultiLang","createUIDom","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","stylesInDom","isOldIE","fn","memo","apply","memoize","document","all","atob","getElement","selector","target","querySelector","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","_react","setDefData","cardCache","getDefData","NCMenu","PrintOutput","NCDropdown","NCCheckbox","NCPopconfirm","NCCol","NCRow","NCButton","NCTooltip","NCMenuGroup","Item","high","formId","cardfromId","urls","loadTreeDataUrl","queryTemplet","addcttermUrl","queryCardUrl","savetermUrl","savetermtypeUrl","deleteTermUrl","deleteTermtypeUrl","printUrl","sysQueryByPkUrl","pageCode","CustsaleClass","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","state","pks","disabledSearch","disabledOrgunit","checked","curOrg","json","curSelectedNode","config","assign","title","treeId","nodeType","isleaf","innercode","pid","refname","refpk","initTemplate","initButtonStatus","changeButtonStatus","onStartEps","onStopEps","dealTreeData","onSaveCtterm","onDeleteCtterm","Component","allpks","e","iconBox","delIcon","editIcon","addIcon","deleteDataChildrenProp","node","nodeData","isTermType","children","isLeaf","datasource","formstatus","form","getFormStatus","cardfromtatus","onbeforeunload","_this2","that","requestParam","pkorg","ajax","url","_extends","syncTree","setSyncTreeData","openNodeByPk","button","setButtonVisible","_this3","status","getSelectNode","istermType","EmptyAllFormValue","pk_ct_termset","isGlbGrp","_props$dealFormulamsg","formulamsg","Array","dealFormulamsg","_defineProperty","headData","head","rows","values","enablestateValue","enablestate","pk_ct_termtype","display","setAllFormValue","_this4","selectedTreeNode","pk_custsaleclass","promptBox","noFooter","hasCloseBtn","beSureBtnClick","enablestateUrl","cancelBtnClick","setFormItemsValue","selectNode","openSysModal","_this5","setState","setFormStatus","setNodeDisable","isGroup","_this6","_props$dealFormulamsg2","pk","_this7","method","res","modal","show","card","_this8","isCheckNow","formData","getAllFormValue","areacode","model","pageid","nonPk","validateToSave","treenode","addNodeSuccess","editNodeSuccess","setNodeSelected","alert","_this9","close","_this10","urlchanage","onAddCtterm","_this11","urlchange","delNodeSuceess","_this12","message","deleteCtterm","_this13","_this14","setFormItemsDisabled","_props$dealFormulamsg3","_this15","asyncTree","getSelectNodeAsync","refreshTreeNode","_this16","val","param","field","firstvalue","linkTo","_ref","visible","setButtonDisabled","getSyncTreeValue","hideIcon","_this17","_this18","initLeaf","_this19","setTimeout","onRefresh","onEditCtterm","onSaveAddCtterm","onCancelCtterm","print","funcode","nodekey","oids","pks1","printOutput","open","_this20","_props","search","DragWidthCom","createSyncTree","createAsyncTree","createForm","createButtonApp","createModal","NCCreateSearch","_react2","default","className","userControl","onSaveCttermtype","_BusinessUnitTreeRef2","onChange","onOrgChange","disabled","queryCondition","TreeRefActionExt","orgtype2","AppCode","appcode","area","buttonLimit","onButtonClick","popContainer","leftDom","needEdit","showLine","needSearch","onSelectEve","onSelectTree","onMouseEnterEve","clickEditIconEve","onEditCttermtype","clickAddIconEve","onAddCttermtype","clickDelIconEve","onDeleteCttermtype","showModal","rightDom","cancelPSwitch","onAfterEvent","onAfterFormEvent","defLeftWid","ref","outputType","_this21","_BDCreateUIDom2","pagecode","domainName","ccontext","context","pk_org","org_Name","template","meta","setMeta","setButtons","createPage","billinfo","billtype","headcode","mutiLangCode","React","Refer","conf","_index","multiLang","currentLocale","refType","refName","refCode","rootNode","placeholder","queryTreeUrl","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit"],"mappings":"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","file":"uapbd/ctbasedoc/ctterm/main/index.28b99da8.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/ctbasedoc/ctterm/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse\n\t\troot[\"uapbd/ctbasedoc/ctterm/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 140);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box .clearfix {\\n  width: 220px!important;\\n}\\n\", \"\"]);\n\n// exports\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import React, { Component } from 'react';\nimport { createPage, base, ajax ,NCCreateSearch,toast,promptBox,cardCache,getMultiLang,print,high,cacheTools} from 'nc-lightapp-front';\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\n//import Wanglqh from '../../../refer/supplier/CustSupplierFlexGridTreeRef'\nimport './index.less'\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\nlet {setDefData, getDefData } = cardCache;\nconst {NCMenu,NCDropdown,NCCheckbox,NCPopconfirm,NCCol,NCRow,NCButton,NCTooltip} = base;\nconst {NCMenuGroup} = NCMenu;\nconst { Item } = NCMenu;\nconst {PrintOutput}=high;\n\n\n\n/****************默认参数  开始***********************/\nlet formId = \"head\";//卡片组件Id\nlet cardfromId = \"card\";//卡片组件Id\nlet memberModalId = 'memberModal';//成员--编辑模态窗id\nconst urls={\n    loadTreeDataUrl:\"/nccloud/uapbd/ctterm/loadtreedata.do\",\n    queryTemplet : '/nccloud/platform/templet/querypage.do',\n    addcttermUrl:\"/nccloud/uapbd/ctterm/addctterm.do\",\n    queryCardUrl:\"/nccloud/uapbd/ctterm/querycard.do\",\n    savetermUrl:'/nccloud/uapbd/ctterm/saveterm.do',\n    savetermtypeUrl:'/nccloud/uapbd/ctterm/savetermtype.do',\n    deleteTermUrl:'/nccloud/uapbd/ctterm/delterm.do',\n    deleteTermtypeUrl:'/nccloud/uapbd/ctterm/deltermtype.do',\n    printUrl:'/nccloud/uapbd/ctterm/printurl.do',\n    sysQueryByPkUrl:'/nccloud/uapbd/ctterm/sysquerybypk.do'\n};\nlet pageCode=\"10140Z00_termset\";//默认集团\n/***************默认参数  结束********************/\n\n/**\n * 合同条款定义\n */\nclass CustsaleClass extends Component {\n    constructor(props){\n        super(props)\n        //显示停用复选框的状态标志\n        this.state = {\n            pks:[],\n            disabledSearch:false,\n            disabledOrgunit:false,\n            checked: false,//判断 显示停用按钮是否选中\n            curOrg: '' ,//合同条款定义-组织节点，选中的组织主键\n            json: null,\n            curSelectedNode: null //直接点击树节点操作按钮时 用于记录selectedNode\n        }\n\n        this.config =Object.assign({\n            title: \"\",//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n            treeId:\"cttermTree\",\n            formId:formId,\n            cardfromId:cardfromId,\n            pageCode:pageCode,\n            nodeType:'GROUP_NODE',\n            urls:urls\n        },props.config);\n\n        //自定义根节点\n        this.root = {\n            \"isleaf\": false,\n            \"key\":\"~\",\n            \"title\":\"\",\n            \"id\":\"~\",\n            \"innercode\":\"~\",\n            \"pid\": \"\",\n            \"refname\": \"\",\n            \"refpk\": \"~\"\n        };\n        \n        //主动事件，绑定this指针\n        this.initTemplate = this.initTemplate.bind(this);\n        this.initButtonStatus = this.initButtonStatus.bind(this);\n        this.changeButtonStatus = this.changeButtonStatus.bind(this);\n        this.onStartEps = this.onStartEps.bind(this);\n        this.onStopEps = this.onStopEps.bind(this);\n        this.dealTreeData = this.dealTreeData.bind(this);\n        this.onSaveCtterm = this.onSaveCtterm.bind(this);\n        this.onDeleteCtterm = this.onDeleteCtterm.bind(this);\n\n        this.initTemplate(props);\n        \n\n    }\n\n    //初始化单据模板\n    initTemplate = (props,callback) => {\n        let that = this;\n        createUIDom(props)(\n            {\n                pagecode:props.config.pageCode//页面id\n            // appcode:props.config.appcode//注册按钮的id\n            },\n            {\n                moduleId: '10140Z00',domainName: 'uapbd'\n            },\n            (data, langData)=>{ //(data, langData)\n                if(langData){\n                    this.state.json = langData\n                    that.root.title = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    that.root.refname = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    if(props.config.nodeType == 'GROUP_NODE'){\n\t\t\t\t\t\tprops.config.title = this.state.json['10140Z00-000032']//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprops.config.title = this.state.json['10140Z00-000033']//this.state.json['10140Z00-000000'],/* 国际化处理： 合同条款定义*/\n\t\t\t\t\t}\n                }\n                if (data) {\n                \t\t//默认业务单元赋值\n                    let ccontext = data.context || {};\n                    that.state.curOrg = {\n                        refpk : ccontext.pk_org,\n                        refname : ccontext.org_Name,\n                        display : ccontext.org_Name,\n                        values : {refpk : ccontext.pk_org, refname : ccontext.org_Name}\n                    };\n                    if (data.template) {\n                        let meta = data.template;\n                        props.meta.setMeta(meta);\n                    }\n                    if (data.button) {\n                        let button = data.button;\n                        props.button.setButtons(button);\n                    }\n                    that.onRefresh();\n                    callback && callback();\n                }\n            }\n        )\n}\n\n\n      /**\n     * 处理树数据\n     * @param data\n     * @returns {*}\n     */\n    dealTreeData(data){\n        //为了打印左边所有树节点\n        let allpks =[];\n        let deleteDataChildrenProp = function(node){\n            if(!('~' == node.refpk || node.refpk == undefined ) && node.nodeData.isTermType ){\n                allpks.push(node.refpk);\n            }\n            node.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            if(!node.children || node.children.length == 0) {\n                delete node.children;\n            }\n            else{\n                node.isLeaf = false;\n                node.children.forEach( (e) => {\n                    deleteDataChildrenProp(e);\n                } );\n            }\n        };\n        data.forEach( (e) => {\n            e.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            deleteDataChildrenProp(e);\n        });\n        setDefData('allpks',this.props.config.datasource,allpks)\n       // cacheTools.set('allpks',allpks);\n        return data;\n    }\n\n    componentDidUpdate(){\n        //form如果是编辑态，关闭浏览器需要给你提示\n        let formstatus = this.props.form.getFormStatus(this.config.formId);\n\n        let cardfromtatus = this.props.form.getFormStatus(this.config.cardfromId);\n        \n        if((formstatus == undefined || formstatus == 'browse') && (cardfromtatus == 'browse' || cardfromtatus == undefined)){\n            window.onbeforeunload = null;\n        }else{\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\n                return '';\n                };\n        }\n    }\n\n    // componentWillMount() {\n    // \tlet callback = (json) => { // json 多语json格式参数； status： 是否请求到json多语，可用来判断多语资源是否请求到并进行一些别的操作； inlt： 可用来进行占位符的一些操作\n    //    \t\tthis.setState({json})       // 保存json和inlt到页面state中并刷新页面\n\t// \t}\n    // \tgetMultiLang({moduleId: '10140Z00',domainName: 'uapbd',callback})\n    // }\n    /**\n     * react 生命周期函数 组件渲染完后触发事件\n     */\n    componentDidMount(){\n        //组织节点，刚进去不加载数据\n        // if(this.config.nodeType==='GROUP_NODE'){\n        //     this.onRefresh();\n        // }\n        \n        //修改按钮状态\n        this.initButtonStatus();\n\n    }\n\n    onRefresh(){\n         /**************\n         * 构造请求参数\n         * @type {{checked: boolean}}\n         *************/\n        let that = this;\n        let requestParam = { \n            checked:that.state.checked,\n            pkorg:that.state.curOrg.refpk\n         };\n         let data = [];\n        /*************\n         * ajax请求 加载树数据\n         *************/\n        ajax({\n\n            url:that.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n\n                    that.root.title = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n                    that.root.refname = this.state.json['10140Z00-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 合同条款定义*/\n\n                    if(that.config.nodeType==='ORG_NODE' && !that.state.curOrg){\n                        data = [{...that.root}];\n                    }else{\n                        data = [Object.assign( {...that.root} , {children : result.data} )];\n                    }\n                    //同步树  加载全部数据\n                    that.props.syncTree.setSyncTreeData(that.config.treeId , that.dealTreeData(data));\n                    //展开节点  设置默认展开项\n                    that.props.syncTree.openNodeByPk(that.config.treeId, that.root.refpk);\n                    if(getDefData('ctterm_btnopr',that.props.config.datasource) == 'refresh'){\n                        toast({title:this.state.json['10140Z00-000001'],color:\"success\"});/* 国际化处理： 刷新成功！*/\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 页面初始设置button状态\n     * @param props\n     */\n    initButtonStatus(){\n        //设置保存按钮不显示\n        this.props.button.setButtonVisible('add',false);\n        this.props.button.setButtonVisible('edit',false);\n        this.props.button.setButtonVisible('save',false);\n        this.props.button.setButtonVisible('saveadd',false);\n        this.props.button.setButtonVisible('cancel',false);\n        this.props.button.setButtonVisible('delete',false);\n        this.props.button.setButtonVisible('printpage',false);\n    }\n\n    /**\n     * 点击树节点\n     * @param refpk\n     */\n    onSelectTree(refpk){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);\n        //编辑态  树节点操作无效  应该提供一个接口，编辑态任何操作都不能动\n        let status = this.props.form.getFormStatus(this.config.formId);\n        let istermType = this.props.syncTree.getSelectNode(this.config.treeId);\n        if(refpk == this.root.refpk){\n            //清空表单\n            this.props.form.EmptyAllFormValue(this.config.formId);\n            this.changeButtonStatus('selectroot');\n            return;\n        }\n        //选中树节点的时候如果是编辑态或者是选中的是合同条款类型，就不往卡片回写数据\n        if(status == 'edit' || istermType.nodeData.isTermType){\n            this.changeButtonStatus('select');\n            return;\n        }\n        \n        /********************************\n         * ajax 请求选择的树节点数据\n         ********************************/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_ct_termset:refpk,isGlbGrp: this.config.isGlbGrp},\n            success:(result)=>{\n\n                if(result.success){\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\",\n                                [this.config.cardfromId]:\"form\"\n                            }\n                        );\n                    }\n            \n                    //表单数据\n                    let headData = result.data.head.rows[0].values;\n                    if(headData.hasOwnProperty('enablestate')){\n                        let enablestateValue = headData.enablestate.value;\n                        //根据表单项enablestate的值修改开关状态\n                        if(enablestateValue == '2'){\n                            result.data.head.rows[0].values.enablestate.value = true;\n                        }else{\n                            result.data.head.rows[0].values.enablestate.value = false;\n                        }\n                    }\n                    \n                    if(headData.pk_ct_termtype.display == this.root.refpk){\n                        result.data.head.rows[0].values.pk_ct_termtype.display = '';\n                        result.data.head.rows[0].values.pk_ct_termtype.value='';\n                    }\n                    //清空表单\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为所选树节点数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n\n                    this.changeButtonStatus('cancel');\n                    //设置表单项enablestate可用\n                   // this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});\n\n                }\n            }\n        });\n        \n    }\n\n\n    /**\n     * 表单编辑事件\n     * @param props\n     * @param moduleId\n     * @param key\n     * @param value\n     * @param index\n     */\n    onAfterFormEvent(props, moduleId, key, value, index){\n        switch(key){\n            case \"enablestate\":\n\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n                if(!selectedTreeNode){\n                    let content = value.value?this.state.json['10140Z00-000002']:this.state.json['10140Z00-000003'];/* 国际化处理： 请选中需要启用的树节点,请选中需要停用的树节点*/\n                    toast({content: content, color: 'warning'});//默认top\n                    return;\n                }\n                let requestParam = {pk_custsaleclass:selectedTreeNode.refpk,enablestate:value.value?'2':'1'};\n\n                promptBox({\n                    color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                    noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                    hasCloseBtn:false,\n                    content: value.value?this.state.json['10140Z00-000005']:this.state.json['10140Z00-000006'],/* 国际化处理： 确认启用该数据？,确认停用该数据？*/\n                    beSureBtnClick: () =>{\n                        ajax({\n                            url:this.config.urls.enablestateUrl,\n                            data:requestParam,\n                            success:(result)=>{\n                                /****\n                                 * 启用停用，只是启用停用 与树节点的显示隐藏没有关系\n                                 * 想根据启用状态显示或隐藏树节点，需要通过更改显示停用check框来实现\n                                 */\n                                toast({title:value.value?this.state.json['10140Z00-000007']:this.state.json['10140Z00-000008'],color:'success'});/* 国际化处理： 启用成功！,停用成功！,提示*/\n\n                            }\n                        });\n                    } ,\n                    cancelBtnClick:()=>{\n                        props.form.setFormItemsValue(this.config.formId,{enablestate:true});\n                        return;\n                    }\n                })\n                break;\n            default:\n                break;\n        }\n        //some code\n    }\n\n    /**\n     * 新增\n     */\n    onAddCttermtype(selectNode){\n        if (selectNode.refpk != '~' && !selectNode.nodeData.isTermType) {\n            toast({content: this.state.json['10140Z00-000010'], color: 'warning'});//默认top/* 国际化处理： 合同条款上不能新增合同条款类型！*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && !this.state.curOrg.refpk){\n            toast({content: this.state.json['10140Z00-000011'], color: 'warning'});//默认top/* 国际化处理： 请选择业务单元*/\n            return;\n        }\n        this.openSysModal('');\n    }\n\n    /**\n     * 新增\n     */\n    onAddCtterm(){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n        if(this.config.nodeType==='ORG_NODE' && !this.state.curOrg.refpk){\n            toast({content: this.state.json['10140Z00-000011'], color: 'warning'});//默认top/* 国际化处理： 请选择业务单元*/\n            return;\n        }\n\n        if (!selectNode) {\n\n            toast({content: this.state.json['10140Z00-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点*/\n            return;\n\n        }\n        \n        this.setState({curSelectedNode:selectNode});\n        let requestParam = {};//请求参数对象\n        requestParam['pkorg'] = this.state.curOrg.refpk;\n        if(selectNode.nodeData.isTermType){\n            //存在选中节点，设置父节点pk为选中节点refpk\n            requestParam['pk_ct_termtype'] = selectNode.refpk;\n        }else{\n            //不存在选中节点，设置父节点为根节点refpk\n            requestParam['pk_ct_termtype'] = selectNode.pid;\n        }\n\n        ajax({\n            url:this.config.urls.addcttermUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    //清空表单数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    //设置表单为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置新增默认值\n                    \n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //设置表单项不可用   \n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //设置左树上搜索按钮不可用\n                    this.setState( {\n                        disabledSearch:true,\n                        disabledOrgunit:true\n                        });\n                    this.changeButtonStatus('add');\n                }\n            }\n        })\n        \n    }\n\n    /**\n     * 编辑\n     */\n    onEditCttermtype(selectedTreeNode){\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if (!selectedTreeNode.nodeData.isTermType) {\n            toast({content: this.state.json['10140Z00-000014'], color: 'warning'});//默认top/* 国际化处理： 树上不能编辑合同条款！*/\n            return;\n        }\n        this.openSysModal(selectedTreeNode.id);\n    }\n\n    /**\n     * 编辑\n     */\n    onEditCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点*/\n            return;\n\n        }\n        this.setState({curSelectedNode:selectedTreeNode});\n        /**************************************************\n         *\n         * 编辑：\n         *      1、构造请求参数\n         *      2、ajax请求，后台查询需要编辑的对象\n         *      3、回调，设置表单数据为编辑的对象\n         *\n         * 编辑状态下：\n         *      只有 保存  取消 按钮 显示\n         *\n         *\n         **************************************************/\n        /****选中的如果是条款类型节点，则提示不让修改***/\n\n        if (selectedTreeNode.nodeData.isTermType) {\n\n            toast({content: this.state.json['10140Z00-000015'], color: 'warning'});//默认top/* 国际化处理： 请选中合同条款节点(叶子节点)*/\n            return;\n\n        }\n\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n\n        /***ajax请求***/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_ct_termset:selectedTreeNode.refpk},\n            success:(result)=>{\n\n                if(result.success){\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\",\n                                [this.config.cardfromId]:\"form\"\n                            }\n                        );\n                    }\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //设置表单数据\n                    this.props.form.setAllFormValue({head:result.data.head});\n                  //  this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:false});//设置表单项不可用\n                    //设置表单状态为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置左树上搜索按钮不可用\n                    this.setState( {\n                        disabledSearch:true,\n                        disabledOrgunit:true\n                        });\n                    this.changeButtonStatus('edit');\n                }\n            }\n        });\n    }\n    \n    //体系编辑窗口\n    openSysModal(pk){\n        this.props.form.setFormStatus(cardfromId,'edit');\n       // this.props.form.EmptyAllFormValue(cardfromId);\n        //请求参数对象\n        let requestParam = {\n            pk_ct_termtype:pk,\n            pkorg:this.state.curOrg.refpk\n        };\n        ajax({\n            url:this.config.urls.sysQueryByPkUrl,\n            method:\"post\",\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n                    //弹出体系编辑窗口\n                    //this.props.modal.show(memberModalId);\n                    this.props.modal.show('treeedit',{title:this.state.json['10140Z00-000029']});\n\n                    this.props.form.setFormStatus(this.config.cardfromId, 'edit');\n                    //设置表单为编辑态\n                    this.props.form.EmptyAllFormValue(cardfromId);\n                    //设置新增默认值\n                    this.props.form.setAllFormValue({card:res.data.card});\n                }\n            }\n        });\n        \n    }\n\n\n    /**\n     * 保存\n     */\n    onSaveCtterm(){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.formId);\n        if(!memberFlag){\n            return;\n        }\n\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        if(!selectedTreeNode){\n            selectedTreeNode = this.state.curSelectedNode;\n        }\n        if(!selectedTreeNode){\n            alert(this.state.json['10140Z00-000016']);/* 国际化处理： 请选中节点*/\n            return;\n        }\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData ;//= this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let urlchanage ; \n        var pk = null;\n        formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termset')){\n            pk = formData.rows[0].values.pk_ct_termset.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n            formData.areacode = this.config.formId;//添加表单的areacode编码\n        }\n        /***设置请求参数***/\n        formData.rows['status'] = '2';//设置状态\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n        \n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        \n        \n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n\n        //校验公式\n        this.props.validateToSave(requestParam ,()=>{\n            //ajax请求\n            ajax({\n                url: this.config.urls.savetermUrl,\n                data: requestParam,\n                success: (result) => {\n                    if(result.success){\n                        //设置表单浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        //设置树可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                        if(!result.data.treenode[0].children || result.data.treenode[0].children.length == 0 ){\n                            delete result.data.treenode[0].children;\n                        }\n                        if(nonPk){\n                            //新增回调后添加\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data.treenode);\n                        }else{\n                            \n                            //修改回调后修改\n                            this.props.syncTree.editNodeSuccess(this.config.treeId,result.data.treenode[0]);\n                        }\n                        //表单数据\n                        let headData = result.data.head.head.rows[0].values;\n                        if(headData.hasOwnProperty('enablestate')){\n                            let enablestateValue = headData.enablestate.value;\n                            //根据表单项enablestate的值修改开关状态\n                            if(enablestateValue == '2'){\n                                headData.enablestate.value = true;\n                            }else{\n                                headData.enablestate.value = false;\n                            }\n                        }\n                        \n                        //清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        //设置表单为所选树节点数据\n                        this.props.form.setAllFormValue({head:result.data.head.head});\n                        \n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data.treenode[0].pid);\n\n                        this.props.syncTree.setNodeSelected(this.config.treeId, result.data.treenode[0].refpk);\n                        //设置表单项可用\n                        \n                        //清空自定已选中项\n                        this.setState({curSelectedNode:null,disabledSearch:false,disabledOrgunit:false});\n                        toast({title:this.state.json['10140Z00-000017'],color:'success'});/* 国际化处理： 保存成功！,提示*/\n                        this.changeButtonStatus('save');\n                    }\n                }\n            });\n        }, {'head':'form'} , 'form' );\n        \n    }\n\n    /**\n     * 保存\n     */\n    onSaveCttermtype(){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.cardfromId);\n        if(!memberFlag){\n            this.props.modal.show('treeedit',{title:this.state.json['10140Z00-000029']});\n            return;\n        }\n        \n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData ;//= this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let urlchanage ; \n        var pk = null;\n        formData = this.props.form.getAllFormValue(this.config.cardfromId);//获得表单信息\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termtype')){\n            pk = formData.rows[0].values.pk_ct_termtype.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点  \n            formData.areacode = this.config.cardfromId;//添加表单的areacode编码 \n        }\n        /***设置请求参数***/\n        formData.rows['status'] = '2';//设置状态\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n        \n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n        //ajax请求\n        ajax({\n            url: this.config.urls.savetermtypeUrl,\n            data: requestParam,\n            success: (result) => {\n                if(result.success && result.data){\n                    //设置表单浏览态\n                    this.props.form.setFormStatus(this.config.formId, 'browse');\n                    //设置树可用\n                    this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                    if(!result.data[0].children || result.data[0].children.length == 0 ){\n                        delete result.data[0].children;\n                    }\n                    if(nonPk){\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                    }else{\n                        \n                        //修改回调后修改\n                        this.props.syncTree.editNodeSuccess(this.config.treeId,result.data[0]);\n                    }\n                    //展开树节点\n                    this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n\n                    this.props.syncTree.setNodeSelected(this.config.treeId, result.data[0].refpk);\n                    //设置表单项可用\n                  //  this.props.form.setFormItemsDisabled(this.config.formId);\n                    //清空自定已选中项\n                    this.setState({curSelectedNode:null});\n\n                    this.changeButtonStatus('save');\n                    \n                    this.props.form.setFormStatus(cardfromId,'browse');\n\n                    toast({title:this.state.json['10140Z00-000017'],color:'success'});/* 国际化处理： 保存成功！,提示*/\n\n                    this.props.modal.close('treeedit');\n                }\n\n            }\n        }); \n    }\n\n\n\n    /**\n     * 保存新增\n     */\n    onSaveAddCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        let urlchanage ; \n        var pk = null;\n        urlchanage = this.config.urls.savetermUrl;\n        if(formData.rows[0].values.hasOwnProperty('pk_ct_termset')){\n            pk = formData.rows[0].values.pk_ct_termset.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n        }\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: '10140EPSG'//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n\n        }\n\n        //校验公式\n        this.props.validateToSave( requestParam , ()=>{\n            /***ajax请求***/\n            ajax({\n                url: urlchanage,\n                data: requestParam,\n                success: (result) => {\n                    /**********\n                     *\n                     * 这里的代码可以精简，临时先这样，逻辑思路是一样的\n                     *\n                     *\n                     *********/\n                    if(result.success){\n                        //设置表单为浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        if(!result.data[0].children || result.data[0].children.length == 0 ){\n                            delete result.data[0].children;\n                        }\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n\n                        //判断 选中节点如果消失，重新设置新增节点的父节点为选中节点，然后重新获取选中节点\n                        if(!selectedTreeNode){\n                            this.props.syncTree.setNodeSelected(this.config.treeId,result.data[0].pid);\n                            selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                        }\n\n                        //重新设置整棵树不可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,true);\n\n                        //this.props.syncTree.setNodeSelected(this.config.treeId, result.data[0].refpk);\n                        //保存新增的时候，以当前节点合同类型作为下个新增的合同类型\n                        requestParam = {\n                            pk_ct_termtype:result.data[0].pid\n                        };\n                        this.onAddCtterm();\n                    }\n                }\n            });\n        }, {[this.config.formId]:'form'} , 'form' )\n\n        \n    }\n\n    deleteCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        let urlchange;\n        if(selectedTreeNode.nodeData.isTermType == true){\n            urlchange = this.config.urls.deleteTermtypeUrl\n           requestParam = {\n               pk_ct_termtype:selectedTreeNode.refpk     \n           }\n       }else{\n           urlchange  = this.config.urls.deleteTermUrl\n           requestParam = {\n               pk_ct_termset:selectedTreeNode.refpk\n           }\n       }\n\n       ajax({\n           url:urlchange,\n           data:requestParam,\n           success:(result)=>{\n               if(result.success){        \n                   this.props.form.EmptyAllFormValue(this.config.formId);\n                   //调用同步树的接口，删除该树节点\n                   this.props.syncTree.delNodeSuceess(this.config.treeId,selectedTreeNode.refpk);\n                   toast({title:this.state.json['10140Z00-000018'],color:'success'});/* 国际化处理： 删除成功！,提示*/\n                   //删除成功提示\n                   // Message.create({content: '删除成功！', color: 'success'});//默认top\n               }\n\n           }\n       })\n        \n    }\n\n    /**\n     * 删除\n     */\n    onDeleteCtterm(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000019'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            toast({content: this.state.json['10140Z00-000020'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除*/\n            return;\n        }\n        if (selectedTreeNode.nodeData.isTermType) {\n\n            toast({content: this.state.json['10140Z00-000021'], color: 'warning'});//默认top/* 国际化处理： 不能删除合同条款类型,请到树上进行删除*/\n            return;\n        }\n        let message = this.state.json['10140Z00-000022']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.children && selectedTreeNode.children.length>0){\n            toast({content: this.state.json['10140Z00-000023'], color: 'warning'});//默认top/* 国际化处理： 删除失败！该合同条款类型下已有合同条款！*/\n            return;\n        }\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: message,\n            beSureBtnClick: () =>{\n                this.deleteCtterm()\n            }   \n        })\n        // this.props.modal.show('modal', {\n        //     title: '确认删除',\n        //     content: message,\n        //     beSureBtnClick:this.deleteCtterm.bind(this),\n        // });\n        this.changeButtonStatus('delete');\n\n    }\n\n    /**\n     * 删除\n     */\n    onDeleteCttermtype(){\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140Z00-000019'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点*/\n            return;\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140Z00-000013'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据*/\n            return;\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            toast({content: this.state.json['10140Z00-000020'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除*/\n            return;\n        }\n        let message = this.state.json['10140Z00-000022']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.nodeData.isTermType &&  selectedTreeNode.hasOwnProperty('children') && selectedTreeNode.children.length>0){\n            toast({content: this.state.json['10140Z00-000023'], color: 'warning'});//默认top/* 国际化处理： 删除失败！该合同条款类型下已有合同条款！*/\n            return;\n        }\n        if(!selectedTreeNode.nodeData.isTermType){\n            toast({content: this.state.json['10140Z00-000024'], color: 'warning'});//默认top/* 国际化处理： 删除失败！树上不能删除合同条款！*/\n            return;\n        }\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000004'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: message,\n            beSureBtnClick: () =>{\n                this.deleteCtterm();\n            }   \n        })\n        // this.props.modal.show('modal', {\n        //     title: '确认删除',\n        //     content: message,\n        //     beSureBtnClick:this.deleteCtterm.bind(this),\n        // });\n        this.changeButtonStatus('del');\n\n    }\n\n    /**\n     * 取消\n     */\n    onCancelCtterm(){\n        let istermType = this.props.syncTree.getSelectNode(this.config.treeId);\n\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140Z00-000034'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            hasCloseBtn:false,\n            content: this.state.json['10140Z00-000025'],/* 国际化处理： 您确定要取消吗？*/\n            beSureBtnClick: () =>{\n                //同步树 取消的逻辑\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                /**********************************************************\n                 *\n                 * 取消：\n                 *      1、重新根据选中的树节点查询表单对象\n                 *      2、回调，设置表单对象\n                 *      3、设置按钮状态\n                 *\n                 **********************************************************/\n                this.props.form.EmptyAllFormValue(this.config.formId);\n                this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n                if(selectedTreeNode){\n                    //查询节点信息\n                    ajax({\n                        url:this.config.urls.queryCardUrl,\n                        data:{pk_ct_termset:selectedTreeNode.refpk},\n                        success:(result)=>{\n\n                            if(result.success){\n                                //查询时执行显示公式前端适配\n                                if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                                    props.dealFormulamsg(\n                                        result.formulamsg,  //参数一：返回的公式对象\n                                        {                //参数二：界面使用的表格类型\n                                            [this.config.formId]:\"form\",\n                                            [this.config.cardfromId]:\"form\"\n                                        }\n                                    );\n                                }\n                                this.props.form.setAllFormValue({head:result.data.head});\n                            }\n                        }\n                    });\n                }else{\n                    //没有选中项  清空所有数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                }\n                this.props.form.setFormStatus(this.config.formId, 'browse');\n                //设置树可用\n                this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                //设置按钮状态\n                //设置左树上搜索按钮可用\n                this.setState( {\n                    disabledSearch:false,\n                    disabledOrgunit:false\n                    });\n\n                if(istermType.nodeData.isTermType){\n                    this.changeButtonStatus('select');\n                }else{\n                    this.changeButtonStatus('cancel');\n                }\n                \n            }   \n        })\n        // this.props.modal.show('confirm',{\n        //     title:'提示',\n        //     content: \"您确定要取消吗？\",\n        //     noFooter : false, //是否需要底部按钮,默认true\n        //     userControl:true,//自己控制什么时候关闭窗口\n        //     beSureBtnClick:() =>{\n        //         //同步树 取消的逻辑\n        //         let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        //         /**********************************************************\n        //          *\n        //          * 取消：\n        //          *      1、重新根据选中的树节点查询表单对象\n        //          *      2、回调，设置表单对象\n        //          *      3、设置按钮状态\n        //          *\n        //          **********************************************************/\n        //         this.props.form.EmptyAllFormValue(this.config.formId);\n        //         this.props.form.setFormItemsDisabled(this.config.formId,{enablestate:true});//设置表单项不可用\n        //         if(selectedTreeNode){\n        //             //查询节点信息\n        //             ajax({\n        //                 url:this.config.urls.queryCardUrl,\n        //                 data:{pk_ct_termset:selectedTreeNode.refpk},\n        //                 success:(result)=>{\n\n        //                     if(result.success){\n        //                         this.props.form.setAllFormValue({head:result.data.head});\n\n\n        //                     }\n        //                 }\n        //             });\n        //         }else{\n        //             //没有选中项  清空所有数据\n        //             this.props.form.EmptyAllFormValue(this.config.formId);\n        //         }\n        //         this.props.form.setFormStatus(this.config.formId, 'browse');\n        //         //设置树可用\n        //         this.props.syncTree.setNodeDisable(this.config.treeId,false);\n        //         //设置按钮状态\n        //         //设置左树上搜索按钮可用\n        //         this.setState( {\n        //             disabledSearch:false,\n        //             disabledOrgunit:false\n        //             });\n        //         this.changeButtonStatus('cancel');\n        //     }\n        // });\n        \n    }\n\n    /**\n     * 启用\n     */\n    onStartEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        /**************************************************\n         *\n         * 启用/停用\n         *      1、判断选中树节点的状态，做出相应的提示\n         *      2、构造请求参数\n         *      3、ajax请求，后台执行更新\n         *\n         * 启用/停用状态下：\n         *      按钮的可见性和可操作性不变\n         *\n         *\n         **************************************************/\n\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140Z00-000002'], color: 'warning'});//默认top/* 国际化处理： 请选中需要启用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '2'){\n            toast({content: this.state.json['10140Z00-000026'], color: 'warning'});//默认top/* 国际化处理： 该数据已启用，无需多次启用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'2'\n        }\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                //启用成功，设置表单数据\n                if(res.success){\n                    this.props.form.setAllFormValue({head:result.data.head});\n                    //关闭 展开，可以做一个refreshTreeNode方法\n    \n                    this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n    \n                    this.changeButtonStatus('start');\n                }\n                // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n            }\n        });\n    }\n\n    /**\n     * 停用\n     */\n    onStopEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140Z00-000003'], color: 'warning'});//默认top/* 国际化处理： 请选中需要停用的树节点*/\n        }else if(formData.rows[0].values.enablestate.value == '1'){\n            toast({content: this.state.json['10140Z00-000027'], color: 'warning'});//默认top/* 国际化处理： 该数据已停用，无需多次停用*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'1'\n        }\n\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n\n                    this.refreshTreeNode(\"epsTree\",selectedTreeNode.pid);\n\n                    this.changeButtonStatus('stop');\n                    // this.props.asyncTree.closeNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                    // this.props.asyncTree.openNodeByPkAsync(this.config.treeId, selectedTreeNode.pid);\n                }\n            }\n        });\n        \n    }\n\n    /*****button group end*****/\n\n    /**\n     * 查询按钮点击事件\n     * @param props\n     * @param val\n     */\n    onClickSearchBtn(props,val){\n        let url = \"/uapbd/eps/main/list/index.html\";\n        //获得查询区域条件\n        // let data = props.search.getAllSearchData(\"epsQryTemp\");\n        let param = {};\n        if(val!=null){\n            val.map((e)=>{\n                param[e.field] = e.value.firstvalue;\n            });\n        }\n\n\n        props.linkTo(\n            url,param\n        );\n    }\n\n    /**\n     * 更多按钮点击更多选项时触发事件\n     * @param key\n     */\n    onMoreSelect({ key }) {\n        if(key == 'start'){\n            this.onStartEps();\n        }else if(key == 'stop'){\n            this.onStopEps();\n        }\n\n    }\n\n    /**\n     * 更多选项，切换选项时触发事件\n     * @param visible\n     */\n    onVisibleChange(visible) {\n    }\n\n    /**\n     * 更多按钮占位事件\n     */\n    onMore(){\n    }\n\n    /**\n     * 按钮点击状态切换监听事件\n     * @param id\n     */\n    changeButtonStatus(id){\n        switch(id){\n            case 'saveadd':\n            case 'add':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',true);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible('printpage',false);\n                this.props.button.setButtonVisible('refresh',false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('delete',false);\n                this.props.button.setButtonVisible('add',false);\n                break;\n            case 'edit':\n                this.props.button.setButtonVisible('add',false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible('printpage',false);\n                this.props.button.setButtonVisible('refresh',false);\n                this.props.button.setButtonVisible('delete',false);\n                break;\n            case 'save':\n            case 'cancel':\n            case 'delete':\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonDisabled(['delete'],false);\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonDisabled(['add'],false);\n                this.props.button.setButtonVisible('edit',true);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                break;\n            case 'select':\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonDisabled(['add'],false);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                this.props.button.setButtonDisabled(['delete'],true);\n                break;\n            case 'selectroot':\n                this.props.button.setButtonVisible('add',true);\n                this.props.button.setButtonVisible('edit',false);\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible('delete',true);\n                this.props.button.setButtonVisible('refresh',true);\n                this.props.button.setButtonVisible('printpage',true);\n                this.props.button.setButtonDisabled(['delete','add'],true);\n                break;\n            default :\n                break;\n        }\n    }\n\n    /**\n     * 鼠标进入树节点事件\n     * @param key\n     */\n    onMouseEnterEve(key){\n        let selectedTreeNode = this.props.syncTree.getSyncTreeValue(this.config.treeId,key);\n        let obj = {};\n        //设置\n        if(key === this.root.refpk || (this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData && selectedTreeNode.nodeData.isGroup)){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n\n        if(this.config.nodeType==='GROUP_NODE' && selectedTreeNode.nodeData && !selectedTreeNode.nodeData.isGroup){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n\n        if(!selectedTreeNode.nodeData.isTermType){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:false\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n    }\n\n    /**\n     * enablestate change 事件\n     * @param checked\n     */\n    onChange(checked){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得树节点选中项\n        let requestParam = {};\n        if(!selectNode ){\n            toast({content: this.state.json['10140Z00-000028'], color: 'warning'});//默认top/* 国际化处理： 请选中树节点*/\n        }\n        requestParam['pk_custsaleclass'] = selectNode.refpk;\n        requestParam['enablestate'] = checked?'2':'1';\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success) {\n                    if (checked) {\n                        //如果是选中 那就把数据再加载到表单\n                        \n                        this.props.form.setAllFormValue({head:result.data.head});\n                    } else {\n                        //如果不是选中那就清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        this.props.syncTree.delNodeSuceess(this.config.treeId, selectNode.refpk);\n                    }\n                }\n\n            }\n        });\n    }\n\n    /**\n     * checkbox change 事件\n     */\n    onCheckBoxChange(){\n        let checked = this.state.checked;\n        let requestParam = {\n          checked:this.state.checked\n        };\n        ajax({\n            url:this.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    var data = [Object.assign( {...this.root} , {children : result.data} )],\n                        initLeaf = function(node){\n                            if(!node.children || node.children.length == 0) {\n                        \n                                delete node.children;\n                            }\n                            else{\n                                node.isLeaf = false;\n                                node.children.forEach( (e) => {\n                                    initLeaf(e);\n                                } );\n                            }\n                        };\n\n                    data.forEach( (e) => {\n                        initLeaf(e);\n                    });\n\n                    //同步树 加载全部数据\n                    this.props.syncTree.setSyncTreeData(this.config.treeId , data);\n                    //展开节点  设置默认展开项\n                    this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n                }\n\n            }\n        })\n    }\n\n    /**\n     * checkbox 选中事件\n     */\n    onCheckBoxClick(){\n\n        this.setState({checked:!this.state.checked});\n        this.props.form.EmptyAllFormValue(this.config.formId);//清空表单数据\n    }\n\n    /**\n     * 业务单元组织参照 选中事件\n     */\n    onOrgChange(value){\n        this.setState({\n            curOrg: value\n        });\n        setTimeout(() => this.onRefresh() ,10); //选中后开始加载部门数据\n    }\n\n    // loadCustSaleClassTreeData(){\n    //     ajax({\n    //         loading: true,\n    //         url: this.config.urls.loadTreeDataUrl,\n    //         data: {\n    //             checked:this.state.checked,\n    //             pkorg:this.state.curOrg.refpk\n    //         }, //参数带上选中的行政组织\n    //         success:(result)=>{\n    //             if(result.success && result.data){\n\n    //                 let data = [Object.assign( {...this.root} , {children : result.data} )];\n    //                 //同步树  加载全部数据\n    //                 this.props.syncTree.setSyncTreeData(this.config.treeId , this.dealTreeData(data));\n    //                 //展开节点  设置默认展开项\n    //                 this.props.syncTree.openNodeByPk(this.config.treeId, this.root.refpk);\n    //             }else{\n    //                 this.props.syncTree.setSyncTreeData(this.config.treeId , []);\n    //             }\n    //         }\n    //     });\n    // }\n\n\n    onButtonClick(props,id){\n        switch (id) {\n            case 'add':\n            //新增\n                this.onAddCtterm()\n                break;\n            case 'edit':\n            //编辑\n                this.onEditCtterm()\n                break;\n            case 'save':\n            //保存\n                this.onSaveCtterm();\n                break;\n            case 'saveadd':\n            //保存新增\n                this.onSaveAddCtterm()\n                break;\n            case 'delete':\n            //删除\n                this.onDeleteCtterm()\n                break;\n            case 'cancel':\n            //取消\n                this.onCancelCtterm()\n                break;\n            case 'print':\n                let pks = getDefData('allpks',props.config.datasource);//cacheTools.get('allpks');\n                if(pks.length <= 0){\n                    toast({content: this.state.json['10140Z00-000035'], color: 'warning'});/* 国际化处理： 没有要打印的数据！*/\n                    return;\n                }\n                print(\n                    'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                    this.config.urls.printUrl, \n                    {\n                        //billtype:'',  //单据类型\n                        funcode: '10140Z00',//props.config.appcode,      //功能节点编码，即模板编码\n                        nodekey:'termset',     //模板节点标识\n                        oids: pks    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                    },false\n                );\n                break;\n            case 'export':\n                let pks1 = getDefData('allpks',props.config.datasource);//cacheTools.get('allpks');\n                if(pks1.length <= 0){\n                    toast({content: this.state.json['10140Z00-000036'], color: 'warning'});/* 国际化处理： 没有要输出的数据！*/\n                    return;\n                }\n                this.setState({\n                    pks: pks1\n                 },this.refs.printOutput.open());\n                // print(\n                //     'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                //     urls.printUrl, \n                //     {\n                //         //billtype:'',  //单据类型\n                //         funcode: '10140CSCLG',      //功能节点编码，即模板编码\n                //         //nodekey:'',     //模板节点标识\n                //         // nodekey:'assprinttem',  \n                //         outputType:'output',\n                //         oids: pks1    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                //     }\n                // );\n                break;\n            case 'refresh': \n            //刷新\n            setDefData('ctterm_btnopr',props.config.datasource,'refresh');\n            this.onRefresh();\n               break;\n               \n            default:\n                break;\n        }\n    }\n\n\n    /**\n     * 渲染\n     * @returns {*}\n     */\n    render(){\n        /**\n         *  经过createPage方法后，初始对象都放到了props中\n         *  例如 asyncTree,syncTree,form,table……\n         *  我们用的话直接从props里取就可以了\n         * */\n        const {asyncTree,syncTree,form,button,modal,search,DragWidthCom} = this.props;\n        //DragWidthCom 平台出的左右布局的组件  专用于树卡和树表\n        const {createAsyncTree} = asyncTree;//创建异步树，需要引入这个\n        const {createSyncTree} = syncTree;//创建同步树 需要引入这个\n        const {createForm} = form;//创建表单，需要引入这个\n\n        const {createButtonApp}=button;\n\n        let { createModal } = modal;  //模态框\n\n        const {NCCreateSearch} = search;\n\n        return(\n\n            <div className=\"nc-bill-card\">\n                {createModal('modal',{noFooter:false})}\n                {createModal('confirm')}\n                { this.state.json && createModal('treeedit',{\n                    title:this.state.json['10140Z00-000029'],/* 国际化处理： 合同条款类型*/\n                    content:this.props.form.createForm(cardfromId),\n                    userControl:true,//自己控制什么时候关闭窗口\n                    beSureBtnClick: this.onSaveCttermtype.bind(this),\n                    cancelBtnClick:()=>{\n                        promptBox({\n                            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                            title: this.state.json['10140Z00-000034'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                            hasCloseBtn:false,\n                            content: this.state.json['10140Z00-000025'],/* 国际化处理： 您确定要取消吗？*/\n                            beSureBtnClick: () =>{\n                                this.props.form.setFormStatus(cardfromId,'browse');\n                                this.props.modal.close('treeedit');\n                            }   \n                        })\n                       // this.props.modal.close('treeedit');\n                    },\n                    noFooter : false //是否需要底部按钮,默认true\n                }) }\n                {/* 头部 header*/}\n                <div className=\"header\">\n                    {/* 标题 title*/}\n                    <h2 className=\"title\">{this.props.config.title}</h2>\n                    {/*Wanglqh({\n                        isTreelazyLoad:true,\n                    })*/}\n                    {/* 显示停用*/}\n                    {this.config.nodeType==='ORG_NODE'?(\n                        <div className=\"search-box\">\n                            {BusinessUnitTreeRef({\n                                onChange:this.onOrgChange.bind(this),\n                                value:this.state.curOrg,\n                                disabled: this.state.disabledOrgunit,\n                                queryCondition : () => {\n                                    return {\n                                        TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder,nccloud.web.uapbd.ctbasedoc.ctterm.action.OrgUnitForCorpFilter',\n                                        orgtype2:'Y',\n                                        AppCode:this.config.appcode\n                                    }\n                                }\n                            })}\n                        </div>\n                    ):('')\n                    }\n                    {/* 按钮组 btn-group*/}\n                    <div className=\"btn-group\">\n                        {createButtonApp({\n                            area: 'header-button-area',\n                            buttonLimit: 5,\n                            onButtonClick: this.onButtonClick.bind(this),\n                            popContainer: document.querySelector('.header-button-area')\n                        })}\n                    </div>\n                </div>\n                {/* 树卡区域 */}\n                <div className=\"tree-card\">\n                    <DragWidthCom\n                         // 左树区域\n                        leftDom = {\n                            <div className=\"tree-area\">\n                                {createSyncTree({\n                                    disabledSearch:this.state.disabledSearch,\n                                    treeId :this.config.treeId,\n                                    needEdit: true, //不启用编辑\n                                    showLine: false, //显示连线\n                                    needSearch: true, //是否需要搜索框\n                                    onSelectEve: this.onSelectTree.bind(this),//选择\n                                    onMouseEnterEve:this.onMouseEnterEve.bind(this),\n                                    clickEditIconEve: this.onEditCttermtype.bind(this), //编辑点击 回调\n                                    clickAddIconEve: this.onAddCttermtype.bind(this), //新增点击 回调\n                                    clickDelIconEve: this.onDeleteCttermtype.bind(this), // 删除点击 回调\n                                    showModal:false\n\n                                })}\n                            </div>}     //左侧区域dom\n                         // 右卡片区域\n                        rightDom = {\n                            <div className=\"card-area\">\n                                {createForm(this.config.formId, {\n                                    cancelPSwitch: true,\n                                    onAfterEvent: this.onAfterFormEvent.bind(this)\n\n                                })\n                                }\n                            </div> }     //右侧区域dom\n\n                        defLeftWid = '20%'      // 默认左侧区域宽度，px/百分百\n                    />\n                </div>\n\n                <PrintOutput\n                        ref='printOutput'\n                        url={this.config.urls.printUrl}\n                        data={{\n                            funcode:'10140Z00',      //功能节点编码，即模板编码\n                            nodekey:'termset',     //模板节点标识\n                            oids: this.state.pks,    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                            outputType: \"output\"\n                        }}\n                        //callback={this.onSubmit}\n                        >\n                </PrintOutput>\n\n            </div>\n\n        )\n    }\n}\n\n// //初始化单据模板\n// var initTemplate = function(props) {\n//     props.createUIDom(\n//         {\n//             pagecode:props.config.pageCode//页面id\n//            // appcode:props.config.appcode//注册按钮的id\n//         },\n//         function (data){\n//             debugger\n//             if(data){\n//                 //默认业务单元赋值\n//                 let ccontext = data.context || {};\n//                 this.state.curOrg = {\n//                     refpk : ccontext.pk_org,\n//                     refname : ccontext.org_Name,\n//                     display : ccontext.org_Name,\n//                     values : {refpk : ccontext.pk_org, refname : ccontext.org_Name}\n//                 };\n//                 if(data.template){\n//                     let meta = data.template;\n//                     props.meta.setMeta(meta);\n//                 }\n//                 if(data.button){\n//                     let button = data.button;\n//                     props.button.setButtons(button);\n//                 }\n//                 setFormEnableStateProp(props);\n//             }\n//         }\n//     )\n// }\n\n\n\n/**\n * 设置表单启用状态属性可以编辑\n * @param props\n */\nconst setFormEnableStateProp=(props)=>{\n    //获得元数据\n    let meta = props.meta.getMeta();\n    formId = props.config.formId?props.config.formId:formId;\n    //判断元数据中有我的表单元数据\n    if(Object.prototype.toString.call(meta).slice(8, -1) === 'Object' && meta.hasOwnProperty(formId)){\n        //获得表单元数据\n        let formMeta = props.meta.getMeta()[formId];\n        //判断表单元数据有属性\n        if(formMeta.hasOwnProperty(\"items\")){\n            //获得属性\n            let items = formMeta.items;\n            if(Object.prototype.toString.call(items).slice(8, -1) === 'Array'){\n                items.map((item)=>{\n                    //查找enablestate属性\n                    if(item.hasOwnProperty(\"attrcode\") && item.attrcode == 'enablestate'){\n                        //设置enablestate属性不可用\n                        props.form.setFormItemsDisabled(formId,{enablestate:true});\n                    }\n                });\n            }\n        }\n    }\n}\n\n\n/**\n * 创建页面\n */\nexport default CustsaleClass = createPage({\n    billinfo:[{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: formId\n    },{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: cardfromId\n    }],\n    mutiLangCode: '10140Z00'\n})(CustsaleClass)\n","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n"],"sourceRoot":""}