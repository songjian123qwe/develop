{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_base/main/index.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_org/main/index.js","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","arguments","length","undefined","React","createElement","Refer","_extends","conf","high","multiLang","domainName","currentLocale","queryTreeUrl","refType","placeholder","refName","rootNode","refname","refpk","_ncLightappFront","_index","refCode","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit","pageCfg","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","toast","content","color","MultiInit","getMultiLang","createUIDom","_react","cardCache","setDefData","getDefData","base","NCCol","NCRow","NCDatePicker","NCButton","NCPanel","NCCheckbox","NCPopconfirm","NCRadio","leftTree","ajaxUrl","WCRPanel","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","state","json","status","curOrg","pk_org","initTemplate","Component","onbeforeunload","_this2","that","ajax","url","method","nodeType","config","res","isleaf","title","id","innercode","pid","nodeData","dataType","assign","children","treeData","dealTreeData","syncTree","setSyncTreeData","modifierTreeBtn","setNodeSelected","onRootSelected","toggleShow","forEach","e","deleteDataChildrenProp","node","isLeaf","item","glbData","editIcon","delIcon","push","setIconVisible","selectNode","getSelectNode","button","setButtonsVisible","CreateCalendar","Refresh","Save","SaveAdd","Cancel","setButtonDisabled","selectedTreeNode","_this3","pk_wcr","pageCode","userjson","headform","JSON","parse","maintainPerm","form","setAllFormValue","_defineProperty","setAllState","Message","_this4","message","promptBox","noFooter","noCancelBtn","beSureBtnName","cancelBtnName","beSureBtnClick","EmptyAllFormValue","asyncTree","delTreeData","doDelete","_this5","onSelect","_this6","formData","getAllFormValue","areacode","requestParam","model","pageid","pk","rows","values","nonPk","isCheckNow","validateToSave","addNodeSuccess","editNodeSuccess","_this7","validateData","isChange","_this8","loadLeftTreeData","setFormItemsValue","ondutytime","display","offdutytime","_this9","modal","close","_this10","checkBDManage","permissionInfo","managePerm","setFormItemsDisabled","createmodel","setFormStatus","show","onSave","onSaveAdd","initModal","onCancel","onRefresh","_this11","flag","setNodeDisable","setState","_this12","_this13","_props","DragWidthCom","createButtonApp","createForm","createSyncTree","createModal","_react2","default","className","userControl","onGenerate","cancelBtnClick","hasCloseBtn","_BusinessUnitTreeRef2","isTreelazyLoad","queryCondition","AppCode","appcode","TreeRefActionExt","onChange","onOrgChange","disabled","area","onButtonClick","buttonClick","leftDom","treeId","showLine","clickEditIconEve","onEdit","clickDelIconEve","onDelete","clickAddIconEve","onAdd","onSelectEve","defaultExpandAll","showModal","rightDom","expandArr","defLeftWid","_this14","_BDCreateUIDom2","pagecode","template","meta","setMeta","setButtons","mainOrg","context","org_Name","WCRPanel_ORG","createPage","billinfo","billtype","headcode","ReactDOM","render","document","querySelector"],"mappings":"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","file":"uapbd/pubinfo/workcalendarrule_org/main/index.1366a079.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 209);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createPage, ajax, base, toast, print, cacheTools, high, promptBox, getBusinessInfo, cardCache } from 'nc-lightapp-front';\r\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\r\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\r\nlet { setDefData, getDefData } = cardCache;\r\nlet { NCCol: Col, NCRow: Row } = base;\r\nconst { NCDatePicker, NCButton, NCPanel, NCCheckbox, NCPopconfirm, NCRadio } = base;\r\n\r\n\r\n/**\r\n * 工作日历规则\r\n * @author wangying16\r\n * \r\n */\r\n\r\nlet leftTree = 'systemTree';//左树id\r\nlet headFormId = 'headform';//右表-工作日历规则\r\nlet bodyFormId = 'bodyform';//右表-公休日设置\r\nlet modalFormId = 'createmodel';//生成工作日历模态框\r\nlet modalId = 'wcModal';//模态框id\r\nlet pageCode = '10140WCRB_main';            //pagecode\r\nlet glbOrg = 'GLOBLE00000000000000';\r\n//请求路径\r\nlet ajaxUrl = {\r\n    initUrl: '/nccloud/platform/templet/querypage.do',\r\n    loadTreeDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleTree.do\",\r\n    loadFormDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleForm.do\",\r\n    saveWCRUrl: \"/nccloud/uapbd/wcr/saveWorkCalendarRule.do\",\r\n    generateWCUrl: \"/nccloud/uapbd/wcr/generateWorkCalendar.do\",\r\n    deleteWCRUrl: \"/nccloud/uapbd/wcr/deleteWorkCalendarRule.do\"\r\n}\r\nclass WCRPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            json: {},\r\n            status: 'browse',//页面状态\r\n            curOrg: {\r\n                pk_org:'',\r\n                name: ''\r\n            }\r\n        }\r\n\r\n\r\n        this.initTemplate(props);\r\n\r\n    }\r\n    //初始化单据模板\r\n    initTemplate = (props, callback) => {\r\n        let that = this;\r\n        createUIDom(props)(\r\n            {\r\n                pagecode: props.config.pageCode///页面id\r\n                // appcode:props.config.appcode//注册按钮的id\r\n            },\r\n            {\r\n                moduleId: '10140WCR', domainName: 'uapbd'\r\n            },\r\n            (data, langData) => { //(data, langData)\r\n                if (langData) {\r\n                    that.setState({\r\n                        json: langData\r\n                    })\r\n                }\r\n                if (data) {\r\n\r\n                    if (data.template) {\r\n                        let meta = data.template;\r\n                        modifierMeta(props, meta)\r\n                        props.meta.setMeta(meta);\r\n                    }\r\n                    if (data.button) {\r\n                        let button = data.button;\r\n                        props.button.setButtons(button);\r\n                        //toggleShow(props);\r\n                    }\r\n                    //处理个性化中心设置默认业务单元\r\n                    let mainOrg=this.state.curOrg;\r\n                    if(this.props.config.nodeType=='glb' ){\r\n                        mainOrg={\r\n                            pk_org:glbOrg,\r\n                            name:''\r\n                        }\r\n                    }else{\r\n                        if(data.context&&data.context.pk_org){\r\n                            mainOrg={\r\n                                pk_org:data.context.pk_org,\r\n                                name:data.context.org_Name\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        curOrg:mainOrg\r\n                    },() => {\r\n                        this.loadLeftTreeData();\r\n                    })\r\n                    \r\n\r\n                    callback && callback();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.status === 'browse') {\r\n            window.onbeforeunload = null;\r\n        } else {\r\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\r\n                return '';\r\n            };\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    //加载左树数据\r\n    loadLeftTreeData(callback) {\r\n        let that = this;\r\n        ajax({\r\n            url: ajaxUrl.loadTreeDataUrl,\r\n            method: \"post\",\r\n            data: { pk_org: this.state.curOrg.pk_org, nodeType: this.props.config.nodeType },\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    //自定义根节点\r\n                    this.root = {\r\n                        isleaf: false,\r\n                        key: \"root\",\r\n                        title: this.state.json['10140WCR-000000'],/* 国际化处理： 工作日历规则*/\r\n                        id: \"root\",\r\n                        innercode: \"root\",\r\n                        pid: \"\",\r\n                        refname: this.state.json['10140WCR-000000'],/* 国际化处理： 工作日历规则*/\r\n                        refpk: \"root\",\r\n                        nodeData:{\r\n                            dataType:'root'\r\n                        }\r\n                    };\r\n                    //转换树的父子关系\r\n                    let data = [Object.assign(this.root, { children: res.data })];\r\n                    let treeData = this.dealTreeData(data);\r\n                    that.props.syncTree.setSyncTreeData(leftTree, treeData);\r\n                    //控制树节点按钮显隐性\r\n                    that.modifierTreeBtn(data);\r\n                }\r\n                if (!res.data) {\r\n                    that.props.syncTree.setSyncTreeData(leftTree, that.root);\r\n                }\r\n                //设置默认选中根节点\r\n                that.props.syncTree.setNodeSelected(leftTree, 'root');\r\n                that.onRootSelected();\r\n                //设置按钮状态\r\n                that.toggleShow();\r\n                callback && callback.call(this)\r\n            }\r\n        });\r\n\r\n    }\r\n    /**\r\n    * 处理树数据\r\n    * @param data\r\n    * @returns {*}\r\n    */\r\n    dealTreeData(data) {\r\n        let deleteDataChildrenProp = function (node) {\r\n            if (!node.children || node.children.length == 0) {\r\n                delete node.children;\r\n            }\r\n            else {\r\n                node.isLeaf = false;\r\n                node.children.forEach((e) => {\r\n                    deleteDataChildrenProp(e);\r\n                });\r\n            }\r\n        };\r\n        data && data.forEach((e) => {\r\n            deleteDataChildrenProp(e);\r\n        });\r\n        if (data[0].children && data[0].children.length > 0) {   \r\n            data[0].children.forEach((item) => {\r\n                //工作日历规则节点所有数据挂在根节点下。\r\n                item.pid = 'root'\r\n            })\r\n        }\r\n        return data;\r\n    }\r\n    //控制树节点按钮显隐性\r\n    modifierTreeBtn(data){\r\n        let glbData=[];\r\n        //业务单元节点下全局级数据不应示修改和删除按钮\r\n        if(this.props.config.nodeType=='org' && data[0].children && data[0].children.length > 0){\r\n            data[0].children.forEach((item) => {\r\n                if(item.nodeData.dataType=='glb'){\r\n                    let node = {\r\n                        key:item.id,\r\n                        value: { editIcon: false, delIcon: false }\r\n                    }\r\n                    glbData.push(node);\r\n                }\r\n            })\r\n            this.props.syncTree.setIconVisible(leftTree, glbData)\r\n        }\r\n        //设置根节点只有新增按钮可选\r\n        this.props.syncTree.setIconVisible(leftTree, [{ key: 'root', value: { editIcon: false, delIcon: false } }])\r\n        \r\n    }\r\n    //设置按钮状态\r\n    toggleShow() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        if (this.state.status == 'browse') {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: true,\r\n                Refresh: true,\r\n                Save: false,\r\n                SaveAdd: false,\r\n                Cancel: false,\r\n            });\r\n        } else {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: false,\r\n                Refresh: false,\r\n                Save: true,\r\n                SaveAdd: true,\r\n                Cancel: true,\r\n            });\r\n        }\r\n        if (selectNode.refpk === 'root') {\r\n            //根节点只有刷新和新增按钮可用\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], true);\r\n        } else {\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], false);\r\n        }\r\n\r\n    }\r\n    //点击编辑按钮\r\n    onEdit(selectedTreeNode) {\r\n        let that = this;\r\n        /****未选中提示***/\r\n        if (!selectedTreeNode) {\r\n            Message.create({ content: this.state.json['10140WCR-000001'], color: 'warning' });//默认top/* 国际化处理： 请选中需要编辑的节点*/\r\n            return;\r\n        }\r\n\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 1, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.userjson && result.data.headform) {\r\n                        let permissionInfo = JSON.parse(result.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                            //设置编辑时树，表及按钮状态\r\n                            that.setAllState('edit');\r\n                            this.props.button.setButtonsVisible({SaveAdd:false});\r\n                        }\r\n                        else {\r\n                            toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    //点击删除按钮\r\n    onDelete(selectedTreeNode) {\r\n        var doDelete = () => {\r\n            let message = this.state.json['10140WCR-000003']/* 国际化处理： 确认要删除所选数据吗？*/\r\n            promptBox({\r\n                color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                title: this.state.json['10140WCR-000004'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认删除*/\r\n                content: message,             // 提示内容,非必输\r\n                noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n                beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n                cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n                beSureBtnClick: () => {\r\n                    ajax({\r\n                        url: ajaxUrl.deleteWCRUrl,\r\n                        data: { pk_wcr: selectedTreeNode.refpk },\r\n                        success: (result) => {\r\n                            if (result.success) {\r\n\r\n                                this.props.form.EmptyAllFormValue(headFormId);\r\n                                //调用异步树的接口，删除该树节点\r\n                                this.props.asyncTree.delTreeData(leftTree, selectedTreeNode.refpk);\r\n                                toast({ content: this.state.json['10140WCR-000007'], color: 'success'});/* 国际化处理： 删除成功！*/\r\n\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                }   // 确定按钮点击调用函数,非必输\r\n            })\r\n        }\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType },//status 为2时为新增，1为修改，0为未变化\r\n            success: function (res) {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            doDelete();\r\n                        } else {\r\n                            toast({ color: 'warning', content: this.state.json['10100JTB-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //新增工作日历规则\r\n    onAdd(selectedTreeNode) {\r\n        //保存新增情况无节点选择\r\n        if (selectedTreeNode)\r\n            this.props.syncTree.setNodeSelected(leftTree, selectedTreeNode.refpk);\r\n        if (this.props.config.nodeType == 'org' && !this.state.curOrg.pk_org) {\r\n            toast({ content: this.state.json['10140WCR-000009'], color: 'warning' });/* 国际化处理： 请选择业务单元*/\r\n            return;\r\n        }\r\n        let that = this;\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode ? selectedTreeNode.refpk : '', pk_org: this.state.curOrg.pk_org, status: 2, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.headform) {\r\n                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                        //设置编辑时树，表及按钮状态\r\n                        that.setAllState('edit');\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //点击取消\r\n    onCancel() {\r\n        promptBox({\r\n            color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n            title: this.state.json['10140WCR-000010'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认取消*/\r\n            content: this.state.json['10140WCR-000011'],             // 提示内容,非必输/* 国际化处理： 是否确认要取消？*/\r\n            noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n            noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n            beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n            cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n            beSureBtnClick: () => {\r\n                var selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n                // //取消时刷新页面\r\n                // this.loadLeftTreeData();\r\n                // //设置选中节点,并刷新右表数据\r\n                // this.props.syncTree.setNodeSelected(leftTree, selectNode.refpk);\r\n                this.onSelect(selectNode.refpk, {}, true);\r\n                this.setAllState('browse');\r\n            }   // 确定按钮点击调用函数,非必输\r\n        })\r\n\r\n    }\r\n    //保存工作日历规则\r\n    onSave() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        formData.areacode = headFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        //判断是新增树节点还是更新树节点\r\n        var pk = null;\r\n        if (formData.rows[0].values.hasOwnProperty('pk_workcalendrule')) {\r\n\r\n            pk = formData.rows[0].values['pk_workcalendrule'].value;//当前表单有pk:update 更新节点；没有pk:save 新增树节点\r\n\r\n        }\r\n        let nonPk = false;//更新树节点\r\n        if (pk == null || pk == '') {\r\n            nonPk = true;// 新增树节点\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        //设置浏览时树，表及按钮状态\r\n                        this.setAllState('browse');\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        if (nonPk) {\r\n                            //新增回调后添加\r\n                            this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n\r\n                        } else {\r\n                            //修改回调后修改\r\n                            this.props.syncTree.editNodeSuccess(leftTree, result.data[0]);\r\n                        }\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        this.onSelect(result.data[0].refpk, {}, true);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //保存新增工作日历规则\r\n    onSaveAdd() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        let validateData =  {\r\n            pageid:this.props.config.pageCode,\r\n            headform:formData\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(validateData, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        //新增回调后添加\r\n                        this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                        //保存后清空表单\r\n                        this.props.form.EmptyAllFormValue(headFormId);\r\n                        let that = this;\r\n                        ajax({\r\n                            url: ajaxUrl.loadFormDataUrl,\r\n                            data: { pk_wcr: '', pk_org: this.state.curOrg.pk_org, status: 2 },//status 为2时为新增，1为修改，0为未变化\r\n                            success: (result) => {\r\n                                if (result.success) {\r\n                                    if (result.data && result.data.headform) {\r\n                                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                                        //设置编辑时树，表及按钮状态\r\n                                        that.setAllState('edit');\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //树节点选中事件\r\n    onSelect(pk, item, isChange) {\r\n        //选中根节点\r\n        if (pk === 'root') {\r\n            this.onRootSelected();\r\n            this.toggleShow();\r\n        } else {\r\n            //加载工作日历规则右表数据\r\n            let that = this;\r\n            ajax({\r\n                url: ajaxUrl.loadFormDataUrl,\r\n                method: \"post\",\r\n                data: { pk_wcr: pk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n                success: function (res) {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.headform) {\r\n                            that.props.form.setAllFormValue({ [headFormId]: res.data.headform })\r\n                            that.toggleShow();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n    //点击刷新按钮\r\n    onRefresh() {\r\n        this.loadLeftTreeData(() => {\r\n            toast({\r\n                title: this.state.json['10140WCR-000013'], /* 国际化处理： 刷新成功！*/\r\n                color: 'success'\r\n            })\r\n        })\r\n    }\r\n    //选中根节点\r\n    onRootSelected() {\r\n        //清空表单\r\n        this.props.form.EmptyAllFormValue(headFormId);\r\n        //设置上班时间，下班时间默认值\r\n        this.props.form.setFormItemsValue(headFormId, { 'ondutytime': { value: '00:00', display: '' }, 'offdutytime': { value: '00:00', display: '' } });\r\n    }\r\n    //生成工作日历\r\n    onGenerate() {\r\n        //获取模态框数据\r\n        let formData = this.props.form.getAllFormValue(modalFormId);\r\n        formData.areacode = modalFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        this.props.form.isCheckNow(modalFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.generateWCUrl,\r\n                method: \"post\",\r\n                data: requestParam,\r\n                success: (res) => {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.result === 'Y') {\r\n                            this.props.modal.close(modalId);\r\n                            toast({ content: this.state.json['10140WCR-000012'], color: 'success' });/* 国际化处理： 保存成功！*/\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n        }, { [modalFormId]: 'form' }, 'form')\r\n\r\n\r\n    }\r\n    initModal() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectNode.refpk, pk_org: this.state.curOrg.pk_org, status: 3, nodeType: this.props.config.nodeType, checkBDManage: 'Y', pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化,checkBDManage根据管控模式控制字段可编辑性\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.managePerm === 'N') {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': true })\r\n                        } else {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': false })\r\n                        }\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            //设置模态框默认值\r\n                            this.props.form.setAllFormValue({ [modalFormId]: res.data.createmodel })\r\n                            this.props.form.setFormStatus(modalFormId, \"edit\");\r\n                            this.props.modal.show(modalId, {});\r\n                        } else {\r\n                            if(this.props.config.nodeType=='org'){\r\n                                toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                            }else{\r\n                                toast({ color: 'warning', content: this.state.json['10140WCR-000018'] })/* 国际化处理： 全局节点只能维护全局的数据！*/\r\n                            }\r\n                            \r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //表头按钮点击事件\r\n    buttonClick(props, id) {\r\n        switch (id) {\r\n            case 'Save':\r\n                this.onSave();\r\n                break;\r\n            case 'SaveAdd':\r\n                this.onSaveAdd();\r\n                break;\r\n\r\n            case 'CreateCalendar':\r\n                this.initModal();\r\n                break;\r\n            case 'Cancel':\r\n                this.onCancel();\r\n                break;\r\n            case 'Refresh':\r\n                this.onRefresh();\r\n                break;\r\n        }\r\n\r\n    }\r\n    //设置编辑时树，表及按钮状态\r\n    setAllState(status) {\r\n        let flag = status === 'edit' ? true : false;\r\n        this.props.syncTree.setNodeDisable(leftTree, flag);//编辑时设置整棵树不可用\r\n        //设置表单状态以及页面状态\r\n        this.props.form.setFormStatus(headFormId, status);\r\n        this.setState({ status: status }, () => {\r\n            //设置按钮状态\r\n            this.toggleShow();\r\n        });\r\n        \r\n\r\n\r\n    }\r\n    //业务单元参照变更事件\r\n    onOrgChange(e) {\r\n\r\n        this.setState({\r\n            curOrg: {\r\n                pk_org: e.refpk,\r\n                name: e.refname\r\n            }\r\n        }, () => {\r\n            this.loadLeftTreeData();\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        /**\r\n             *  经过createPage方法后，初始对象都放到了props中\r\n             *  例如 asyncTree,syncTree,form,table……\r\n             *  我们用的话直接从props里取就可以了\r\n             * */\r\n        const { button, syncTree, modal, DragWidthCom, form, config } = this.props;\r\n        let { createButtonApp } = button;\r\n        let { createForm } = form;\r\n        let { createSyncTree } = syncTree;\r\n        let { createModal } = modal;\r\n        let nodeType = this.props.config.nodeType;\r\n        let orgPermCondition = function () {\r\n            return {\r\n                AppCode: config.appcode,\r\n                TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder'\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    {createModal(modalId, {\r\n                        title: this.state.json['10140WCR-000014'],/* 国际化处理： 生成工作日历*/\r\n                        content: createForm(modalFormId, {}),\r\n                        userControl: true,//自己控制什么时候关闭窗口\r\n                        beSureBtnClick: this.onGenerate.bind(this),\r\n                        cancelBtnClick: () => {\r\n                            promptBox({\r\n                                color: 'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                                title: this.state.json['10140WCR-000017'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\r\n                                noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                                hasCloseBtn: false,\r\n                                content: this.state.json['10140WCR-000011'],/* 国际化处理： 您确定要取消吗？*/\r\n                                beSureBtnClick: () => {\r\n                                    this.props.modal.close(modalId);\r\n\r\n                                }   // 确定按钮点击调用函数,非必输\r\n                            })\r\n                        },\r\n                    })}\r\n                    {/* 标题 title */}\r\n                    <h2 className=\"title\">{this.props.config.nodeType == 'glb' ? this.state.json['10140WCR-000015'] : this.state.json['10140WCR-000016']}</h2>{/* 国际化处理： 工作日历规则*/}\r\n                    {/*业务单元参照*/}\r\n                    <div className=\"search-box\">\r\n                        {nodeType == 'org' && BusinessUnitTreeRef({\r\n                            isTreelazyLoad: false,\r\n                            queryCondition: orgPermCondition,\r\n                            onChange: this.onOrgChange.bind(this),\r\n                            value: { refpk: this.state.curOrg.pk_org, refname: this.state.curOrg.name },\r\n                            disabled: this.state.status == 'browse' ? false : true,//是否禁用\r\n                        })}\r\n                    </div>\r\n                    {/* 按钮区  btn-group */}\r\n                    <div className=\"btn-group\">\r\n                        {createButtonApp({\r\n                            area: 'header-button-area',//按钮注册中的按钮区域\r\n                            onButtonClick: this.buttonClick.bind(this)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"tree-card\">\r\n                    <DragWidthCom\r\n                        //工作日历规则左树\r\n                        leftDom={\r\n                            <div className=\"tree-area\">\r\n                                {createSyncTree({\r\n                                    treeId: leftTree,\r\n                                    showLine: true,\r\n                                    clickEditIconEve: this.onEdit.bind(this), //编辑点击 回调\r\n                                    clickDelIconEve: this.onDelete.bind(this), // 删除点击 回调\r\n                                    clickAddIconEve: this.onAdd.bind(this), //新增点击 回调\r\n                                    onSelectEve: this.onSelect.bind(this),   //选择节点回调方法\r\n                                    defaultExpandAll: true,   //初始化展开所有节点  ，默认参数为false,不展开\r\n                                    showModal: false\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        //工作日历规则右表\r\n                        rightDom={\r\n                            <div className=\"card-area\">\r\n                                {createForm(headFormId, {\r\n                                    expandArr:[bodyFormId]\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        defLeftWid='280px'      // 默认左侧区域宽度，px/百分百 \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//初始数据处理\r\nfunction modifierMeta(props, meta) {\r\n}\r\n\r\n\r\n// let WCRPage = createPage({\r\n//     //initTemplate: initTemplate,\r\n//     mutiLangCode: '10140WCR'\r\n// })(WCRPanel);\r\nexport default WCRPanel","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WCRPanel from '../../workcalendarrule_base/main/';\r\nimport { createPage, base, ajax ,NCCreateSearch,toast} from 'nc-lightapp-front';\r\n/**\r\n * 工作日历规则-业务单元\r\n */\r\n\r\nlet config = {\r\n    title: '工作日历规则-业务单元',\r\n    pageCode: '10140WCRO_main',\r\n    appcode: '10140WCRO',\r\n    nodeType: 'org',\r\n};\r\n\r\nlet WCRPanel_ORG = createPage({\r\n    billinfo:[{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'headform'\r\n    },{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'createmodel'\r\n    }]\r\n    // initTemplate: []\r\n})(WCRPanel)\r\n\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<WCRPanel_ORG config={config}/>, document.querySelector('#app'));","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;"],"sourceRoot":""}