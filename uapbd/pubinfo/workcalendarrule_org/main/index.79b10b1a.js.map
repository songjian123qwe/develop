{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_base/main/index.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_org/main/index.js","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","arguments","length","undefined","React","createElement","Refer","_extends","conf","high","multiLang","domainName","currentLocale","queryTreeUrl","refType","placeholder","refName","rootNode","refname","refpk","pageCfg","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","content","color","MultiInit","getMultiLang","createUIDom","_index","refCode","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit","_react","cardCache","setDefData","getDefData","base","NCCol","NCRow","NCDatePicker","NCButton","NCPanel","NCCheckbox","NCPopconfirm","NCRadio","leftTree","glbOrg","ajaxUrl","WCRPanel","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","state","json","status","curOrg","pk_org","config","nodeType","initTemplate","Component","onbeforeunload","_this2","that","ajax","url","method","res","isleaf","title","id","innercode","pid","assign","children","treeData","dealTreeData","syncTree","setSyncTreeData","setNodeSelected","onRootSelected","setIconVisible","editIcon","delIcon","toggleShow","forEach","e","deleteDataChildrenProp","node","isLeaf","item","selectNode","getSelectNode","button","setButtonsVisible","CreateCalendar","Refresh","Save","SaveAdd","Cancel","setButtonDisabled","selectedTreeNode","_this3","pk_wcr","pageCode","userjson","headform","JSON","parse","maintainPerm","form","setAllFormValue","_defineProperty","setAllState","Message","_this4","message","promptBox","noFooter","noCancelBtn","beSureBtnName","cancelBtnName","beSureBtnClick","EmptyAllFormValue","asyncTree","delTreeData","doDelete","_this5","onSelect","_this6","formData","getAllFormValue","areacode","requestParam","model","pageid","pk","rows","values","nonPk","isCheckNow","validateToSave","addNodeSuccess","editNodeSuccess","_this7","validateData","isChange","_this8","loadLeftTreeData","setFormItemsValue","ondutytime","display","offdutytime","_this9","_this10","checkBDManage","permissionInfo","managePerm","setFormItemsDisabled","createmodel","setFormStatus","modal","show","onSave","onSaveAdd","initModal","onCancel","onRefresh","_this11","flag","setNodeDisable","setState","_this12","_this13","_props","DragWidthCom","createButtonApp","createForm","createSyncTree","createModal","_react2","default","className","userControl","onGenerate","cancelBtnClick","hasCloseBtn","close","_BusinessUnitTreeRef2","isTreelazyLoad","queryCondition","AppCode","appcode","TreeRefActionExt","onChange","onOrgChange","disabled","area","onButtonClick","buttonClick","leftDom","treeId","showLine","clickEditIconEve","onEdit","clickDelIconEve","onDelete","clickAddIconEve","onAdd","onSelectEve","defaultExpandAll","showModal","rightDom","defLeftWid","_this14","_BDCreateUIDom2","pagecode","template","meta","setMeta","setButtons","WCRPanel_ORG","createPage","billinfo","billtype","headcode","ReactDOM","render","document","querySelector"],"mappings":"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","file":"uapbd/pubinfo/workcalendarrule_org/main/index.79b10b1a.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 210);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createPage, ajax, base, toast, print, cacheTools, high, promptBox, getBusinessInfo, cardCache } from 'nc-lightapp-front';\r\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\r\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\r\nlet { setDefData, getDefData } = cardCache;\r\nlet { NCCol: Col, NCRow: Row } = base;\r\nconst { NCDatePicker, NCButton, NCPanel, NCCheckbox, NCPopconfirm, NCRadio } = base;\r\n\r\n\r\n/**\r\n * 工作日历规则\r\n * @author wangying16\r\n * \r\n */\r\n\r\nlet leftTree = 'systemTree';//左树id\r\nlet headFormId = 'headform';//右表-工作日历规则\r\nlet bodyFormId = 'bodyform';//右表-公休日设置\r\nlet modalFormId = 'createmodel';//生成工作日历模态框\r\nlet modalId = 'wcModal';//模态框id\r\nlet pageCode = '10140WCRB_main';            //pagecode\r\nlet glbOrg = 'GLOBLE00000000000000';\r\n//请求路径\r\nlet ajaxUrl = {\r\n    initUrl: '/nccloud/platform/templet/querypage.do',\r\n    loadTreeDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleTree.do\",\r\n    loadFormDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleForm.do\",\r\n    saveWCRUrl: \"/nccloud/uapbd/wcr/saveWorkCalendarRule.do\",\r\n    generateWCUrl: \"/nccloud/uapbd/wcr/generateWorkCalendar.do\",\r\n    deleteWCRUrl: \"/nccloud/uapbd/wcr/deleteWorkCalendarRule.do\"\r\n}\r\nclass WCRPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            json: {},\r\n            status: 'browse',//页面状态\r\n            curOrg: {\r\n                pk_org: props.config.nodeType == 'glb' ? glbOrg : '',\r\n                name: ''\r\n            }\r\n        }\r\n\r\n\r\n        this.initTemplate(props);\r\n\r\n    }\r\n    //初始化单据模板\r\n    initTemplate = (props, callback) => {\r\n        let that = this;\r\n        createUIDom(props)(\r\n            {\r\n                pagecode: props.config.pageCode///页面id\r\n                // appcode:props.config.appcode//注册按钮的id\r\n            },\r\n            {\r\n                moduleId: '10140WCR', domainName: 'uapbd'\r\n            },\r\n            (data, langData) => { //(data, langData)\r\n                if (langData) {\r\n                    that.setState({\r\n                        json: langData\r\n                    }, () => {\r\n                        this.loadLeftTreeData();\r\n                    })\r\n                }\r\n                if (data) {\r\n\r\n                    if (data.template) {\r\n                        let meta = data.template;\r\n                        modifierMeta(props, meta)\r\n                        props.meta.setMeta(meta);\r\n                    }\r\n                    if (data.button) {\r\n                        let button = data.button;\r\n                        props.button.setButtons(button);\r\n                        //toggleShow(props);\r\n                    }\r\n\r\n                    callback && callback();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.status === 'browse') {\r\n            window.onbeforeunload = null;\r\n        } else {\r\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\r\n                return '';\r\n            };\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    //加载左树数据\r\n    loadLeftTreeData(callback) {\r\n        let that = this;\r\n        ajax({\r\n            url: ajaxUrl.loadTreeDataUrl,\r\n            method: \"post\",\r\n            data: { pk_org: this.state.curOrg.pk_org, nodeType: this.props.config.nodeType },\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    //自定义根节点\r\n                    this.root = {\r\n                        \"isleaf\": false,\r\n                        \"key\": \"root\",\r\n                        \"title\": this.state.json['10140WCR-000000'],/* 国际化处理： 工作日历规则*/\r\n                        \"id\": \"root\",\r\n                        \"innercode\": \"root\",\r\n                        \"pid\": \"\",\r\n                        \"refname\": this.state.json['10140WCR-000000'],/* 国际化处理： 工作日历规则*/\r\n                        \"refpk\": \"root\"\r\n                    };\r\n                    //转换树的父子关系\r\n                    let data = [Object.assign(this.root, { children: res.data })];\r\n                    let treeData = this.dealTreeData(data);\r\n                    that.props.syncTree.setSyncTreeData(leftTree, treeData);\r\n\r\n                }\r\n                if (!res.data) {\r\n                    that.props.syncTree.setSyncTreeData(leftTree, that.root);\r\n                }\r\n                //设置默认选中根节点\r\n                that.props.syncTree.setNodeSelected(leftTree, 'root');\r\n                that.onRootSelected();\r\n                //设置根节点只有新增按钮可选\r\n                that.props.syncTree.setIconVisible(leftTree, [{ key: 'root', value: { editIcon: false, delIcon: false } }])\r\n                //设置按钮状态\r\n                that.toggleShow();\r\n                callback && callback.call(this)\r\n            }\r\n        });\r\n\r\n    }\r\n    /**\r\n    * 处理树数据\r\n    * @param data\r\n    * @returns {*}\r\n    */\r\n    dealTreeData(data) {\r\n        let deleteDataChildrenProp = function (node) {\r\n            if (!node.children || node.children.length == 0) {\r\n                delete node.children;\r\n            }\r\n            else {\r\n                node.isLeaf = false;\r\n                node.children.forEach((e) => {\r\n                    deleteDataChildrenProp(e);\r\n                });\r\n            }\r\n        };\r\n        data && data.forEach((e) => {\r\n            deleteDataChildrenProp(e);\r\n        });\r\n        if (data[0].children && data[0].children.length > 0) {\r\n            //工作日历规则节点所有数据挂在根节点下。\r\n            data[0].children.forEach((item) => {\r\n                item.pid = 'root'\r\n            })\r\n        }\r\n        return data;\r\n    }\r\n    //设置按钮状态\r\n    toggleShow() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        if (this.state.status == 'browse') {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: true,\r\n                Refresh: true,\r\n                Save: false,\r\n                SaveAdd: false,\r\n                Cancel: false,\r\n            });\r\n        } else {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: false,\r\n                Refresh: false,\r\n                Save: true,\r\n                SaveAdd: true,\r\n                Cancel: true,\r\n            });\r\n        }\r\n        this.props.button.setButtonDisabled(['SaveAdd'], false);\r\n        if (selectNode.refpk === 'root') {\r\n            //根节点只有刷新和新增按钮可用\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], true);\r\n        } else {\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], false);\r\n        }\r\n\r\n    }\r\n    //点击编辑按钮\r\n    onEdit(selectedTreeNode) {\r\n        let that = this;\r\n        /****未选中提示***/\r\n        if (!selectedTreeNode) {\r\n            Message.create({ content: this.state.json['10140WCR-000001'], color: 'warning' });//默认top/* 国际化处理： 请选中需要编辑的节点*/\r\n            return;\r\n        }\r\n\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 1, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.userjson && result.data.headform) {\r\n                        let permissionInfo = JSON.parse(result.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                            //设置编辑时树，表及按钮状态\r\n                            that.setAllState('edit');\r\n                            this.props.button.setButtonDisabled(['SaveAdd'], true);\r\n                        }\r\n                        else {\r\n                            toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    //点击删除按钮\r\n    onDelete(selectedTreeNode) {\r\n        var doDelete = () => {\r\n            let message = this.state.json['10140WCR-000003']/* 国际化处理： 确认要删除所选数据吗？*/\r\n            promptBox({\r\n                color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                title: this.state.json['10140WCR-000004'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认删除*/\r\n                content: message,             // 提示内容,非必输\r\n                noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n                beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n                cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n                beSureBtnClick: () => {\r\n                    ajax({\r\n                        url: ajaxUrl.deleteWCRUrl,\r\n                        data: { pk_wcr: selectedTreeNode.refpk },\r\n                        success: (result) => {\r\n                            if (result.success) {\r\n\r\n                                this.props.form.EmptyAllFormValue(headFormId);\r\n                                //调用异步树的接口，删除该树节点\r\n                                this.props.asyncTree.delTreeData(leftTree, selectedTreeNode.refpk);\r\n                                toast({ content: this.state.json['10140WCR-000007'], title: this.state.json['10140WCR-000008'] });/* 国际化处理： 删除成功！,提示*/\r\n\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                }   // 确定按钮点击调用函数,非必输\r\n            })\r\n        }\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType },//status 为2时为新增，1为修改，0为未变化\r\n            success: function (res) {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            doDelete();\r\n                        } else {\r\n                            toast({ color: 'warning', content: this.state.json['10100JTB-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //新增工作日历规则\r\n    onAdd(selectedTreeNode) {\r\n        //保存新增情况无节点选择\r\n        if (selectedTreeNode)\r\n            this.props.syncTree.setNodeSelected(leftTree, selectedTreeNode.refpk);\r\n        if (this.props.config.nodeType == 'org' && !this.state.curOrg.pk_org) {\r\n            toast({ content: this.state.json['10140WCR-000009'], color: 'warning' });/* 国际化处理： 请选择业务单元*/\r\n            return;\r\n        }\r\n        let that = this;\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode ? selectedTreeNode.refpk : '', pk_org: this.state.curOrg.pk_org, status: 2, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.headform) {\r\n                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                        //设置编辑时树，表及按钮状态\r\n                        that.setAllState('edit');\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //点击取消\r\n    onCancel() {\r\n        promptBox({\r\n            color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n            title: this.state.json['10140WCR-000010'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认取消*/\r\n            content: this.state.json['10140WCR-000011'],             // 提示内容,非必输/* 国际化处理： 是否确认要取消？*/\r\n            noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n            noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n            beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n            cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n            beSureBtnClick: () => {\r\n                var selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n                // //取消时刷新页面\r\n                // this.loadLeftTreeData();\r\n                // //设置选中节点,并刷新右表数据\r\n                // this.props.syncTree.setNodeSelected(leftTree, selectNode.refpk);\r\n                this.onSelect(selectNode.refpk, {}, true);\r\n                this.setAllState('browse');\r\n            }   // 确定按钮点击调用函数,非必输\r\n        })\r\n\r\n    }\r\n    //保存工作日历规则\r\n    onSave() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        formData.areacode = headFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        //判断是新增树节点还是更新树节点\r\n        var pk = null;\r\n        if (formData.rows[0].values.hasOwnProperty('pk_workcalendrule')) {\r\n\r\n            pk = formData.rows[0].values['pk_workcalendrule'].value;//当前表单有pk:update 更新节点；没有pk:save 新增树节点\r\n\r\n        }\r\n        let nonPk = false;//更新树节点\r\n        if (pk == null || pk == '') {\r\n            nonPk = true;// 新增树节点\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        //设置浏览时树，表及按钮状态\r\n                        this.setAllState('browse');\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        if (nonPk) {\r\n                            //新增回调后添加\r\n                            this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n\r\n                        } else {\r\n                            //修改回调后修改\r\n                            this.props.syncTree.editNodeSuccess(leftTree, result.data[0]);\r\n                        }\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        this.onSelect(result.data[0].refpk, {}, true);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //保存新增工作日历规则\r\n    onSaveAdd() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        let validateData =  {\r\n            pageid:this.props.config.pageCode,\r\n            headform:formData\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(validateData, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        //新增回调后添加\r\n                        this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                        //保存后清空表单\r\n                        this.props.form.EmptyAllFormValue(headFormId);\r\n                        let that = this;\r\n                        ajax({\r\n                            url: ajaxUrl.loadFormDataUrl,\r\n                            data: { pk_wcr: '', pk_org: this.state.curOrg.pk_org, status: 2 },//status 为2时为新增，1为修改，0为未变化\r\n                            success: (result) => {\r\n                                if (result.success) {\r\n                                    if (result.data && result.data.headform) {\r\n                                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                                        //设置编辑时树，表及按钮状态\r\n                                        that.setAllState('edit');\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //树节点选中事件\r\n    onSelect(pk, item, isChange) {\r\n        //选中根节点\r\n        if (pk === 'root') {\r\n            this.onRootSelected();\r\n            this.toggleShow();\r\n        } else {\r\n            //加载工作日历规则右表数据\r\n            let that = this;\r\n            ajax({\r\n                url: ajaxUrl.loadFormDataUrl,\r\n                method: \"post\",\r\n                data: { pk_wcr: pk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n                success: function (res) {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.headform) {\r\n                            that.props.form.setAllFormValue({ [headFormId]: res.data.headform })\r\n                            that.toggleShow();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n    //点击刷新按钮\r\n    onRefresh() {\r\n        this.loadLeftTreeData(() => {\r\n            toast({\r\n                title: this.state.json['10140WCR-000013'], /* 国际化处理： 刷新成功！*/\r\n                color: 'success'\r\n            })\r\n        })\r\n    }\r\n    //选中根节点\r\n    onRootSelected() {\r\n        //清空表单\r\n        this.props.form.EmptyAllFormValue(headFormId);\r\n        //设置上班时间，下班时间默认值\r\n        this.props.form.setFormItemsValue(headFormId, { 'ondutytime': { value: '00:00', display: '' }, 'offdutytime': { value: '00:00', display: '' } });\r\n    }\r\n    //生成工作日历\r\n    onGenerate() {\r\n        //获取模态框数据\r\n        let formData = this.props.form.getAllFormValue(modalFormId);\r\n        formData.areacode = modalFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        this.props.form.isCheckNow(modalFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.generateWCUrl,\r\n                method: \"post\",\r\n                data: requestParam,\r\n                success: (res) => {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.result === 'Y') {\r\n                            toast({ content: this.state.json['10140WCR-000012'], title: this.state.json['10140WCR-000008'] });/* 国际化处理： 保存成功！,提示*/\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n        }, { [modalFormId]: 'form' }, 'form')\r\n\r\n\r\n    }\r\n    initModal() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectNode.refpk, pk_org: this.state.curOrg.pk_org, status: 3, nodeType: this.props.config.nodeType, checkBDManage: 'Y', pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化,checkBDManage根据管控模式控制字段可编辑性\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.managePerm === 'N') {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': true })\r\n                        } else {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': false })\r\n                        }\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            //设置模态框默认值\r\n                            this.props.form.setAllFormValue({ [modalFormId]: res.data.createmodel })\r\n                            this.props.form.setFormStatus(modalFormId, \"edit\");\r\n                            this.props.modal.show(modalId, {});\r\n                        } else {\r\n                            toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //表头按钮点击事件\r\n    buttonClick(props, id) {\r\n        switch (id) {\r\n            case 'Save':\r\n                this.onSave();\r\n                break;\r\n            case 'SaveAdd':\r\n                this.onSaveAdd();\r\n                break;\r\n\r\n            case 'CreateCalendar':\r\n                this.initModal();\r\n                break;\r\n            case 'Cancel':\r\n                this.onCancel();\r\n                break;\r\n            case 'Refresh':\r\n                this.onRefresh();\r\n                break;\r\n        }\r\n\r\n    }\r\n    //设置编辑时树，表及按钮状态\r\n    setAllState(status) {\r\n        let flag = status === 'edit' ? true : false;\r\n        this.props.syncTree.setNodeDisable(leftTree, flag);//编辑时设置整棵树不可用\r\n        //设置表单状态以及页面状态\r\n        this.props.form.setFormStatus(headFormId, status);\r\n        this.setState({ status: status }, () => {\r\n            //设置按钮状态\r\n            this.toggleShow();\r\n        });\r\n\r\n\r\n    }\r\n    //业务单元参照变更事件\r\n    onOrgChange(e) {\r\n\r\n        this.setState({\r\n            curOrg: {\r\n                pk_org: e.refpk,\r\n                name: e.refname\r\n            }\r\n        }, () => {\r\n            this.loadLeftTreeData();\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        /**\r\n             *  经过createPage方法后，初始对象都放到了props中\r\n             *  例如 asyncTree,syncTree,form,table……\r\n             *  我们用的话直接从props里取就可以了\r\n             * */\r\n        const { button, syncTree, modal, DragWidthCom, form, config } = this.props;\r\n        let { createButtonApp } = button;\r\n        let { createForm } = form;\r\n        let { createSyncTree } = syncTree;\r\n        let { createModal } = modal;\r\n        let nodeType = this.props.config.nodeType;\r\n        let orgPermCondition = function () {\r\n            return {\r\n                AppCode: config.appcode,\r\n                TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder'\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    {createModal(modalId, {\r\n                        title: this.state.json['10140WCR-000014'],/* 国际化处理： 生成工作日历*/\r\n                        content: createForm(modalFormId, {}),\r\n                        userControl: true,//自己控制什么时候关闭窗口\r\n                        beSureBtnClick: this.onGenerate.bind(this),\r\n                        cancelBtnClick: () => {\r\n                            promptBox({\r\n                                color: 'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                                title: this.state.json['10140WCR-000017'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\r\n                                noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                                hasCloseBtn: false,\r\n                                content: this.state.json['10140WCR-000011'],/* 国际化处理： 您确定要取消吗？*/\r\n                                beSureBtnClick: () => {\r\n                                    this.props.modal.close(modalId);\r\n\r\n                                }   // 确定按钮点击调用函数,非必输\r\n                            })\r\n                        },\r\n                    })}\r\n                    {/* 标题 title */}\r\n                    <h2 className=\"title\">{this.props.config.nodeType == 'glb' ? this.state.json['10140WCR-000015'] : this.state.json['10140WCR-000016']}</h2>{/* 国际化处理： 工作日历规则*/}\r\n                    {/*业务单元参照*/}\r\n                    <div className=\"search-box\">\r\n                        {nodeType == 'org' && BusinessUnitTreeRef({\r\n                            isTreelazyLoad: false,\r\n                            queryCondition: orgPermCondition,\r\n                            onChange: this.onOrgChange.bind(this),\r\n                            value: { refpk: this.state.curOrg.pk_org, refname: this.state.curOrg.name },\r\n                            disabled: this.state.status == 'browse' ? false : true,//是否禁用\r\n                        })}\r\n                    </div>\r\n                    {/* 按钮区  btn-group */}\r\n                    <div className=\"btn-group\">\r\n                        {createButtonApp({\r\n                            area: 'header-button-area',//按钮注册中的按钮区域\r\n                            onButtonClick: this.buttonClick.bind(this)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"tree-card\">\r\n                    <DragWidthCom\r\n                        //工作日历规则左树\r\n                        leftDom={\r\n                            <div className=\"tree-area\">\r\n                                {createSyncTree({\r\n                                    treeId: leftTree,\r\n                                    showLine: true,\r\n                                    clickEditIconEve: this.onEdit.bind(this), //编辑点击 回调\r\n                                    clickDelIconEve: this.onDelete.bind(this), // 删除点击 回调\r\n                                    clickAddIconEve: this.onAdd.bind(this), //新增点击 回调\r\n                                    onSelectEve: this.onSelect.bind(this),   //选择节点回调方法\r\n                                    defaultExpandAll: true,   //初始化展开所有节点  ，默认参数为false,不展开\r\n                                    showModal: false\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        //工作日历规则右表\r\n                        rightDom={\r\n                            <div className=\"card-area\">\r\n                                {createForm(headFormId, {\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        defLeftWid='280px'      // 默认左侧区域宽度，px/百分百 \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//初始数据处理\r\nfunction modifierMeta(props, meta) {\r\n}\r\n\r\n\r\n// let WCRPage = createPage({\r\n//     //initTemplate: initTemplate,\r\n//     mutiLangCode: '10140WCR'\r\n// })(WCRPanel);\r\nexport default WCRPanel","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WCRPanel from '../../workcalendarrule_base/main/';\r\nimport { createPage, base, ajax ,NCCreateSearch,toast} from 'nc-lightapp-front';\r\n/**\r\n * 工作日历规则-业务单元\r\n */\r\n\r\nlet config = {\r\n    title: '工作日历规则-业务单元',\r\n    pageCode: '10140WCRO_main',\r\n    appcode: '10140WCRO',\r\n    nodeType: 'org',\r\n};\r\n\r\nlet WCRPanel_ORG = createPage({\r\n    billinfo:[{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'headform'\r\n    },{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'createmodel'\r\n    }]\r\n    // initTemplate: []\r\n})(WCRPanel)\r\n\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<WCRPanel_ORG config={config}/>, document.querySelector('#app'));","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;"],"sourceRoot":""}