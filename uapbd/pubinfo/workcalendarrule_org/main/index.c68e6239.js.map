{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_base/main/index.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/uapbd/pubinfo/workcalendarrule_org/main/index.js","webpack://[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","arguments","length","undefined","React","createElement","Refer","_extends","conf","high","multiLang","domainName","currentLocale","queryTreeUrl","refType","placeholder","refName","rootNode","refname","refpk","pageCfg","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","_ncLightappFront","toast","content","color","MultiInit","getMultiLang","createUIDom","_index","refCode","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit","_react","cardCache","setDefData","getDefData","base","NCCol","NCRow","NCDatePicker","NCButton","NCPanel","NCCheckbox","NCPopconfirm","NCRadio","leftTree","ajaxUrl","WCRPanel","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","state","json","status","curOrg","pk_org","title","id","innercode","pid","nodeData","dataType","initTemplate","Component","onbeforeunload","that","config","nodeType","syncTree","setSyncTreeData","setNodeSelected","onRootSelected","toggleShow","ajax","url","method","res","assign","children","treeData","dealTreeData","modifierTreeBtn","onSelect","forEach","e","deleteDataChildrenProp","node","isLeaf","item","glbData","editIcon","delIcon","push","setIconVisible","selectNode","getSelectNode","button","setButtonsVisible","CreateCalendar","Refresh","Save","SaveAdd","Cancel","setButtonDisabled","selectedTreeNode","_this2","pk_wcr","pageCode","userjson","headform","JSON","parse","maintainPerm","form","setAllFormValue","_defineProperty","setAllState","Message","_this3","message","promptBox","noFooter","noCancelBtn","beSureBtnName","cancelBtnName","beSureBtnClick","EmptyAllFormValue","asyncTree","delTreeData","doDelete","_this4","_this5","formData","getAllFormValue","areacode","requestParam","model","pageid","pk","rows","values","nonPk","isCheckNow","validateToSave","addNodeSuccess","editNodeSuccess","_this6","validateData","isChange","_this7","loadLeftTreeData","setFormItemsValue","ondutytime","display","offdutytime","_this8","modal","close","_this9","checkBDManage","permissionInfo","managePerm","setFormItemsDisabled","createmodel","setFormStatus","show","onSave","onSaveAdd","initModal","onCancel","onRefresh","_this10","flag","setNodeDisable","setState","_this11","_this12","_props","DragWidthCom","createButtonApp","createForm","createSyncTree","createModal","_react2","default","className","userControl","onGenerate","cancelBtnClick","hasCloseBtn","createPageIcon","_BusinessUnitTreeRef2","isTreelazyLoad","queryCondition","AppCode","appcode","TreeRefActionExt","onChange","onOrgChange","disabled","area","onButtonClick","buttonClick","leftDom","treeId","showLine","clickEditIconEve","onEdit","clickDelIconEve","onDelete","clickAddIconEve","onAdd","onSelectEve","defaultExpandAll","showModal","rightDom","expandArr","defLeftWid","_this13","_BDCreateUIDom2","pagecode","template","meta","setMeta","setButtons","mainOrg","context","org_Name","WCRPanel_ORG","createPage","billinfo","billtype","headcode","ReactDOM","render","document","querySelector"],"mappings":"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","file":"uapbd/pubinfo/workcalendarrule_org/main/index.c68e6239.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"uapbd/pubinfo/workcalendarrule_org/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 212);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createPageIcon, createPage, ajax, base, toast, print, cacheTools, high, promptBox, getBusinessInfo, cardCache } from 'nc-lightapp-front';\r\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\r\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\r\nlet { setDefData, getDefData } = cardCache;\r\nlet { NCCol: Col, NCRow: Row } = base;\r\nconst { NCDatePicker, NCButton, NCPanel, NCCheckbox, NCPopconfirm, NCRadio } = base;\r\n\r\n\r\n/**\r\n * 工作日历规则\r\n * @author wangying16\r\n * \r\n */\r\n\r\nlet leftTree = 'systemTree';//左树id\r\nlet headFormId = 'headform';//右表-工作日历规则\r\nlet bodyFormId = 'bodyform';//右表-公休日设置\r\nlet modalFormId = 'createmodel';//生成工作日历模态框\r\nlet modalId = 'wcModal';//模态框id\r\nlet pageCode = '10140WCRB_main';            //pagecode\r\nlet glbOrg = 'GLOBLE00000000000000';\r\n//请求路径\r\nlet ajaxUrl = {\r\n    initUrl: '/nccloud/platform/templet/querypage.do',\r\n    loadTreeDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleTree.do\",\r\n    loadFormDataUrl: \"/nccloud/uapbd/wcr/queryWorkCalendarRuleForm.do\",\r\n    saveWCRUrl: \"/nccloud/uapbd/wcr/saveWorkCalendarRule.do\",\r\n    generateWCUrl: \"/nccloud/uapbd/wcr/generateWorkCalendar.do\",\r\n    deleteWCRUrl: \"/nccloud/uapbd/wcr/deleteWorkCalendarRule.do\"\r\n}\r\nclass WCRPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            json: {},\r\n            status: 'browse',//页面状态\r\n            curOrg: {\r\n                pk_org: '',\r\n                name: ''\r\n            }\r\n        }\r\n        //自定义根节点\r\n        this.root = {\r\n            key: \"root\",\r\n            title: \"\",\r\n            id: \"root\",\r\n            innercode: \"root\",\r\n            pid: \"\",\r\n            refname: \"\",\r\n            refpk: \"root\",\r\n            nodeData: {\r\n                dataType: 'root'\r\n            }\r\n        };\r\n\r\n\r\n        this.initTemplate(props);\r\n\r\n    }\r\n    //初始化单据模板\r\n    initTemplate = (props, callback) => {\r\n        let that = this;\r\n        createUIDom(props)(\r\n            {\r\n                pagecode: props.config.pageCode///页面id\r\n                // appcode:props.config.appcode//注册按钮的id\r\n            },\r\n            {\r\n                moduleId: '10140WCR', domainName: 'uapbd'\r\n            },\r\n            (data, langData) => { //(data, langData)\r\n                if (langData) {\r\n                    that.setState({\r\n                        json: langData\r\n                    })\r\n                }\r\n                if (data) {\r\n\r\n                    if (data.template) {\r\n                        let meta = data.template;\r\n                        modifierMeta(props, meta)\r\n                        props.meta.setMeta(meta);\r\n                    }\r\n                    if (data.button) {\r\n                        let button = data.button;\r\n                        props.button.setButtons(button);\r\n                        //toggleShow(props);\r\n                    }\r\n                    //处理个性化中心设置默认业务单元\r\n                    let mainOrg = this.state.curOrg;\r\n                    if (this.props.config.nodeType == 'glb') {\r\n                        mainOrg = {\r\n                            pk_org: glbOrg,\r\n                            name: ''\r\n                        }\r\n                    } else {\r\n                        if (data.context && data.context.pk_org) {\r\n                            mainOrg = {\r\n                                pk_org: data.context.pk_org,\r\n                                name: data.context.org_Name\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        curOrg: mainOrg\r\n                    }, () => {\r\n                        this.loadLeftTreeData();\r\n                    })\r\n\r\n\r\n                    callback && callback();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.status === 'browse') {\r\n            window.onbeforeunload = null;\r\n        } else {\r\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\r\n                return '';\r\n            };\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    //加载左树数据\r\n    loadLeftTreeData(callback) {\r\n        let that = this;\r\n        that.root.title = that.state.json['10140WCR-000000']/* 国际化处理： 工作日历规则*/\r\n        that.root.refname = that.state.json['10140WCR-000000']/* 国际化处理： 工作日历规则*/\r\n        //业务单元节点\r\n        if (that.props.config.nodeType == 'org' && !this.state.curOrg.pk_org) {\r\n            that.props.syncTree.setSyncTreeData(leftTree, [that.root]);\r\n            //设置默认选中根节点\r\n            that.props.syncTree.setNodeSelected(leftTree, 'root');\r\n            that.onRootSelected();\r\n            //设置按钮状态\r\n            that.toggleShow();\r\n            callback && callback.call(that)\r\n            return;\r\n        }\r\n        ajax({\r\n            url: ajaxUrl.loadTreeDataUrl,\r\n            method: \"post\",\r\n            data: { pk_org: this.state.curOrg.pk_org, nodeType: this.props.config.nodeType },\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    if (res.data) {\r\n                        //转换树的父子关系\r\n                        let data = [Object.assign({ children: res.data },that.root )];\r\n                        let treeData = that.dealTreeData(data);\r\n                        that.props.syncTree.setSyncTreeData(leftTree, treeData);\r\n                        //控制树节点按钮显隐性\r\n                        that.modifierTreeBtn(data);\r\n                        //设置默认选择根节点下第一个节点\r\n                        that.props.syncTree.setNodeSelected(leftTree, res.data[0].refpk);\r\n                        that.onSelect(res.data[0].refpk);\r\n                    }else{\r\n                        that.props.syncTree.setSyncTreeData(leftTree, [that.root]);\r\n                        //设置默认选中根节点\r\n                        that.props.syncTree.setNodeSelected(leftTree, 'root');\r\n                        that.onRootSelected();\r\n                    }\r\n\r\n                }\r\n                //设置按钮状态\r\n                that.toggleShow();\r\n                callback && callback.call(that)\r\n            }\r\n        });\r\n\r\n    }\r\n    /**\r\n    * 处理树数据\r\n    * @param data\r\n    * @returns {*}\r\n    */\r\n    dealTreeData(data) {\r\n        let deleteDataChildrenProp = function (node) {\r\n            if (!node.children || node.children.length == 0) {\r\n                delete node.children;\r\n            }\r\n            else {\r\n                node.isLeaf = false;\r\n                node.children.forEach((e) => {\r\n                    deleteDataChildrenProp(e);\r\n                });\r\n            }\r\n        };\r\n        data && data.forEach((e) => {\r\n            deleteDataChildrenProp(e);\r\n        });\r\n        if (data[0].children && data[0].children.length > 0) {\r\n            data[0].children.forEach((item) => {\r\n                //工作日历规则节点所有数据挂在根节点下。\r\n                item.pid = 'root'\r\n            })\r\n        }\r\n        return data;\r\n    }\r\n    //控制树节点按钮显隐性\r\n    modifierTreeBtn(data) {\r\n        let glbData = [];\r\n        //业务单元节点下全局级数据不应示修改和删除按钮\r\n        if (this.props.config.nodeType == 'org' && data[0].children && data[0].children.length > 0) {\r\n            data[0].children.forEach((item) => {\r\n                if (item.nodeData.dataType == 'glb') {\r\n                    let node = {\r\n                        key: item.id,\r\n                        value: { editIcon: false, delIcon: false }\r\n                    }\r\n                    glbData.push(node);\r\n                }\r\n            })\r\n            this.props.syncTree.setIconVisible(leftTree, glbData)\r\n        }\r\n        //设置根节点只有新增按钮可选\r\n        this.props.syncTree.setIconVisible(leftTree, [{ key: 'root', value: { editIcon: false, delIcon: false } }])\r\n\r\n    }\r\n    //设置按钮状态\r\n    toggleShow() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        if (this.state.status == 'browse') {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: true,\r\n                Refresh: true,\r\n                Save: false,\r\n                SaveAdd: false,\r\n                Cancel: false,\r\n            });\r\n        } else {\r\n            this.props.button.setButtonsVisible({\r\n                CreateCalendar: false,\r\n                Refresh: false,\r\n                Save: true,\r\n                SaveAdd: true,\r\n                Cancel: true,\r\n            });\r\n        }\r\n        if (selectNode.refpk === 'root') {\r\n            //根节点只有刷新和新增按钮可用\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], true);\r\n        } else {\r\n            this.props.button.setButtonDisabled(['CreateCalendar'], false);\r\n        }\r\n\r\n    }\r\n    //点击编辑按钮\r\n    onEdit(selectedTreeNode) {\r\n        let that = this;\r\n        /****未选中提示***/\r\n        if (!selectedTreeNode) {\r\n            Message.create({ content: this.state.json['10140WCR-000001'], color: 'warning' });//默认top/* 国际化处理： 请选中需要编辑的节点*/\r\n            return;\r\n        }\r\n\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 1, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.userjson && result.data.headform) {\r\n                        let permissionInfo = JSON.parse(result.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                            //设置编辑时树，表及按钮状态\r\n                            that.setAllState('edit');\r\n                            this.props.button.setButtonsVisible({ SaveAdd: false });\r\n                        }\r\n                        else {\r\n                            toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    //点击删除按钮\r\n    onDelete(selectedTreeNode) {\r\n        var doDelete = () => {\r\n            let message = this.state.json['10140WCR-000003']/* 国际化处理： 确认要删除所选数据吗？*/\r\n            promptBox({\r\n                color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                title: this.state.json['10140WCR-000004'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认删除*/\r\n                content: message,             // 提示内容,非必输\r\n                noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n                beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n                cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n                beSureBtnClick: () => {\r\n                    ajax({\r\n                        url: ajaxUrl.deleteWCRUrl,\r\n                        data: { pk_wcr: selectedTreeNode.refpk },\r\n                        success: (result) => {\r\n                            if (result.success) {\r\n\r\n                                this.props.form.EmptyAllFormValue(headFormId);\r\n                                //调用异步树的接口，删除该树节点\r\n                                this.props.asyncTree.delTreeData(leftTree, selectedTreeNode.refpk);\r\n                                toast({ content: this.state.json['10140WCR-000007'], color: 'success' });/* 国际化处理： 删除成功！*/\r\n\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                }   // 确定按钮点击调用函数,非必输\r\n            })\r\n        }\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectedTreeNode.refpk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType },//status 为2时为新增，1为修改，0为未变化\r\n            success: function (res) {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            doDelete();\r\n                        } else {\r\n                            toast({ color: 'warning', content: this.state.json['10100JTB-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //新增工作日历规则\r\n    onAdd(selectedTreeNode) {\r\n        //保存新增情况无节点选择\r\n        if (selectedTreeNode)\r\n            this.props.syncTree.setNodeSelected(leftTree, selectedTreeNode.refpk);\r\n        if (this.props.config.nodeType == 'org' && !this.state.curOrg.pk_org) {\r\n            toast({ content: this.state.json['10140WCR-000009'], color: 'warning' });/* 国际化处理： 请选择业务单元*/\r\n            return;\r\n        }\r\n        let that = this;\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            data: { pk_wcr: selectedTreeNode ? selectedTreeNode.refpk : '', pk_org: this.state.curOrg.pk_org, status: 2, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n            success: (result) => {\r\n                if (result.success) {\r\n                    if (result.data && result.data.headform) {\r\n                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                        //设置编辑时树，表及按钮状态\r\n                        that.setAllState('edit');\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //点击取消\r\n    onCancel() {\r\n        promptBox({\r\n            color: 'warning',               // 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n            title: this.state.json['10140WCR-000010'],                // 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认取消*/\r\n            content: this.state.json['10140WCR-000011'],             // 提示内容,非必输/* 国际化处理： 是否确认要取消？*/\r\n            noFooter: false,                // 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n            noCancelBtn: false,             // 是否显示取消按钮,，默认显示(false),非必输\r\n            beSureBtnName: this.state.json['10140WCR-000005'],          // 确定按钮名称, 默认为\"确定\",非必输/* 国际化处理： 确定*/\r\n            cancelBtnName: this.state.json['10140WCR-000006'],           // 取消按钮名称, 默认为\"取消\",非必输/* 国际化处理： 取消*/\r\n            beSureBtnClick: () => {\r\n                var selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n                // //取消时刷新页面\r\n                // this.loadLeftTreeData();\r\n                // //设置选中节点,并刷新右表数据\r\n                // this.props.syncTree.setNodeSelected(leftTree, selectNode.refpk);\r\n                this.onSelect(selectNode.refpk, {}, true);\r\n                this.setAllState('browse');\r\n            }   // 确定按钮点击调用函数,非必输\r\n        })\r\n\r\n    }\r\n    //保存工作日历规则\r\n    onSave() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        formData.areacode = headFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        //判断是新增树节点还是更新树节点\r\n        var pk = null;\r\n        if (formData.rows[0].values.hasOwnProperty('pk_workcalendrule')) {\r\n\r\n            pk = formData.rows[0].values['pk_workcalendrule'].value;//当前表单有pk:update 更新节点；没有pk:save 新增树节点\r\n\r\n        }\r\n        let nonPk = false;//更新树节点\r\n        if (pk == null || pk == '') {\r\n            nonPk = true;// 新增树节点\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        //设置浏览时树，表及按钮状态\r\n                        this.setAllState('browse');\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        if (nonPk) {\r\n                            //新增回调后添加\r\n                            this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n\r\n                        } else {\r\n                            //修改回调后修改\r\n                            this.props.syncTree.editNodeSuccess(leftTree, result.data[0]);\r\n                        }\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        this.onSelect(result.data[0].refpk, {}, true);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //保存新增工作日历规则\r\n    onSaveAdd() {\r\n        let formData = this.props.form.getAllFormValue(headFormId);\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        let validateData = {\r\n            pageid: this.props.config.pageCode,\r\n            headform: formData\r\n        }\r\n        this.props.form.isCheckNow(headFormId) && this.props.validateToSave(validateData, () => {\r\n            ajax({\r\n                url: ajaxUrl.saveWCRUrl,\r\n                data: requestParam,\r\n                success: (result) => {\r\n                    if (result.success) {\r\n                        result.data[0].pid = 'root';//插入到根节点下\r\n                        if (!result.data[0].children || result.data[0].children.length == 0) {\r\n                            delete result.data[0].children;\r\n                        }\r\n                        //新增回调后添加\r\n                        this.props.syncTree.addNodeSuccess(leftTree, result.data);\r\n                        this.props.syncTree.setNodeSelected(leftTree, result.data[0].refpk);\r\n                        toast({ title: this.state.json['10140WCR-000012'], color: 'success' });\r\n                        /* 国际化处理： 保存成功！*/\r\n                        //保存后清空表单\r\n                        this.props.form.EmptyAllFormValue(headFormId);\r\n                        let that = this;\r\n                        ajax({\r\n                            url: ajaxUrl.loadFormDataUrl,\r\n                            data: { pk_wcr: '', pk_org: this.state.curOrg.pk_org, status: 2 },//status 为2时为新增，1为修改，0为未变化\r\n                            success: (result) => {\r\n                                if (result.success) {\r\n                                    if (result.data && result.data.headform) {\r\n                                        that.props.form.setAllFormValue({ [headFormId]: result.data.headform })\r\n                                        //设置编辑时树，表及按钮状态\r\n                                        that.setAllState('edit');\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                }\r\n            })\r\n        }, { [headform]: 'form' }, 'form')\r\n\r\n    }\r\n    //树节点选中事件\r\n    onSelect(pk, item, isChange) {\r\n        //选中根节点\r\n        if (pk === 'root') {\r\n            this.onRootSelected();\r\n            this.toggleShow();\r\n        } else {\r\n            //加载工作日历规则右表数据\r\n            let that = this;\r\n            ajax({\r\n                url: ajaxUrl.loadFormDataUrl,\r\n                method: \"post\",\r\n                data: { pk_wcr: pk, pk_org: this.state.curOrg.pk_org, status: 0, nodeType: this.props.config.nodeType, pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化\r\n                success: function (res) {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.headform) {\r\n                            that.props.form.setAllFormValue({ [headFormId]: res.data.headform })\r\n                            that.toggleShow();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n    //点击刷新按钮\r\n    onRefresh() {\r\n        this.loadLeftTreeData(() => {\r\n            toast({\r\n                title: this.state.json['10140WCR-000013'], /* 国际化处理： 刷新成功！*/\r\n                color: 'success'\r\n            })\r\n        })\r\n    }\r\n    //选中根节点\r\n    onRootSelected() {\r\n        //清空表单\r\n        this.props.form.EmptyAllFormValue(headFormId);\r\n        //设置上班时间，下班时间默认值\r\n        this.props.form.setFormItemsValue(headFormId, { 'ondutytime': { value: '00:00', display: '' }, 'offdutytime': { value: '00:00', display: '' } });\r\n    }\r\n    //生成工作日历\r\n    onGenerate() {\r\n        //获取模态框数据\r\n        let formData = this.props.form.getAllFormValue(modalFormId);\r\n        formData.areacode = modalFormId;\r\n        let requestParam = {\r\n            model: formData,\r\n            pageid: this.props.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\r\n            //pcode: selectedTreeNode.nodeData.pcode\r\n        };\r\n        this.props.form.isCheckNow(modalFormId) && this.props.validateToSave(requestParam, () => {\r\n            ajax({\r\n                url: ajaxUrl.generateWCUrl,\r\n                method: \"post\",\r\n                data: requestParam,\r\n                success: (res) => {\r\n                    if (res.success) {\r\n                        if (res.data && res.data.result === 'Y') {\r\n                            this.props.modal.close(modalId);\r\n                            toast({ content: this.state.json['10140WCR-000012'], color: 'success' });/* 国际化处理： 保存成功！*/\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n        }, { [modalFormId]: 'form' }, 'form')\r\n\r\n\r\n    }\r\n    initModal() {\r\n        let selectNode = this.props.syncTree.getSelectNode(leftTree);\r\n        //先校验指定组织类型的数据在该节点下是否能维护\r\n        ajax({\r\n            url: ajaxUrl.loadFormDataUrl,\r\n            method: \"post\",\r\n            data: { pk_wcr: selectNode.refpk, pk_org: this.state.curOrg.pk_org, status: 3, nodeType: this.props.config.nodeType, checkBDManage: 'Y', pageCode: this.props.config.pageCode },//status 为2时为新增，1为修改，0为未变化,checkBDManage根据管控模式控制字段可编辑性\r\n            success: (res) => {\r\n                if (res.success) {\r\n                    if (res.data && res.data.userjson) {\r\n                        let permissionInfo = JSON.parse(res.data.userjson)\r\n                        if (permissionInfo.managePerm === 'N') {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': true })\r\n                        } else {\r\n                            this.props.form.setFormItemsDisabled(modalFormId, { 'pk_org': false })\r\n                        }\r\n                        if (permissionInfo.maintainPerm === 'Y') {\r\n                            //设置模态框默认值\r\n                            this.props.form.setAllFormValue({ [modalFormId]: res.data.createmodel })\r\n                            this.props.form.setFormStatus(modalFormId, \"edit\");\r\n                            this.props.modal.show(modalId, {});\r\n                        } else {\r\n                            if (this.props.config.nodeType == 'org') {\r\n                                toast({ color: 'warning', content: this.state.json['10140WCR-000002'] })/* 国际化处理： 组织节点只能维护当前节点有权限组织的数据！*/\r\n                            } else {\r\n                                toast({ color: 'warning', content: this.state.json['10140WCR-000018'] })/* 国际化处理： 全局节点只能维护全局的数据！*/\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    //表头按钮点击事件\r\n    buttonClick(props, id) {\r\n        switch (id) {\r\n            case 'Save':\r\n                this.onSave();\r\n                break;\r\n            case 'SaveAdd':\r\n                this.onSaveAdd();\r\n                break;\r\n\r\n            case 'CreateCalendar':\r\n                this.initModal();\r\n                break;\r\n            case 'Cancel':\r\n                this.onCancel();\r\n                break;\r\n            case 'Refresh':\r\n                this.onRefresh();\r\n                break;\r\n        }\r\n\r\n    }\r\n    //设置编辑时树，表及按钮状态\r\n    setAllState(status) {\r\n        let flag = status === 'edit' ? true : false;\r\n        this.props.syncTree.setNodeDisable(leftTree, flag);//编辑时设置整棵树不可用\r\n        //设置表单状态以及页面状态\r\n        this.props.form.setFormStatus(headFormId, status);\r\n        this.setState({ status: status }, () => {\r\n            //设置按钮状态\r\n            this.toggleShow();\r\n        });\r\n\r\n\r\n\r\n    }\r\n    //业务单元参照变更事件\r\n    onOrgChange(e) {\r\n\r\n        this.setState({\r\n            curOrg: {\r\n                pk_org: e.refpk,\r\n                name: e.refname\r\n            }\r\n        }, () => {\r\n            this.loadLeftTreeData();\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        /**\r\n             *  经过createPage方法后，初始对象都放到了props中\r\n             *  例如 asyncTree,syncTree,form,table……\r\n             *  我们用的话直接从props里取就可以了\r\n             * */\r\n        const { button, syncTree, modal, DragWidthCom, form, config } = this.props;\r\n        let { createButtonApp } = button;\r\n        let { createForm } = form;\r\n        let { createSyncTree } = syncTree;\r\n        let { createModal } = modal;\r\n        let nodeType = this.props.config.nodeType;\r\n        let orgPermCondition = function () {\r\n            return {\r\n                AppCode: config.appcode,\r\n                TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder'\r\n            }\r\n        }\r\n        return (\r\n            <div className='nc-bill-tree-card'>\r\n                <div className=\"header\">\r\n                    {createModal(modalId, {\r\n                        title: this.state.json['10140WCR-000014'],/* 国际化处理： 生成工作日历*/\r\n                        content: createForm(modalFormId, {}),\r\n                        userControl: true,//自己控制什么时候关闭窗口\r\n                        beSureBtnClick: this.onGenerate.bind(this),\r\n                        cancelBtnClick: () => {\r\n                            promptBox({\r\n                                color: 'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\r\n                                title: this.state.json['10140WCR-000017'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\r\n                                noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\r\n                                hasCloseBtn: false,\r\n                                content: this.state.json['10140WCR-000011'],/* 国际化处理： 您确定要取消吗？*/\r\n                                beSureBtnClick: () => {\r\n                                    this.props.modal.close(modalId);\r\n\r\n                                }   // 确定按钮点击调用函数,非必输\r\n                            })\r\n                        },\r\n                    })}\r\n                    {createPageIcon()}\r\n                    {/* 标题 title */}\r\n                    <h2 className=\"title\">{this.props.config.nodeType == 'glb' ? this.state.json['10140WCR-000015'] : this.state.json['10140WCR-000016']}</h2>{/* 国际化处理： 工作日历规则*/}\r\n                    {/*业务单元参照*/}\r\n                    <div className=\"search-box\">\r\n                        {nodeType == 'org' && BusinessUnitTreeRef({\r\n                            isTreelazyLoad: false,\r\n                            queryCondition: orgPermCondition,\r\n                            onChange: this.onOrgChange.bind(this),\r\n                            value: { refpk: this.state.curOrg.pk_org, refname: this.state.curOrg.name },\r\n                            disabled: this.state.status == 'browse' ? false : true,//是否禁用\r\n                        })}\r\n                    </div>\r\n                    {/* 按钮区  btn-group */}\r\n                    <div className=\"btn-group\">\r\n                        {createButtonApp({\r\n                            area: 'header-button-area',//按钮注册中的按钮区域\r\n                            onButtonClick: this.buttonClick.bind(this)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"tree-card\">\r\n                    <DragWidthCom\r\n                        //工作日历规则左树\r\n                        leftDom={\r\n                            <div className=\"tree-area\">\r\n                                {createSyncTree({\r\n                                    treeId: leftTree,\r\n                                    showLine: true,\r\n                                    clickEditIconEve: this.onEdit.bind(this), //编辑点击 回调\r\n                                    clickDelIconEve: this.onDelete.bind(this), // 删除点击 回调\r\n                                    clickAddIconEve: this.onAdd.bind(this), //新增点击 回调\r\n                                    onSelectEve: this.onSelect.bind(this),   //选择节点回调方法\r\n                                    defaultExpandAll: true,   //初始化展开所有节点  ，默认参数为false,不展开\r\n                                    showModal: false\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        //工作日历规则右表\r\n                        rightDom={\r\n                            <div className=\"card-area\">\r\n                                {createForm(headFormId, {\r\n                                    expandArr: [bodyFormId]\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        defLeftWid='280px'      // 默认左侧区域宽度，px/百分百 \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//初始数据处理\r\nfunction modifierMeta(props, meta) {\r\n}\r\n\r\n\r\n// let WCRPage = createPage({\r\n//     //initTemplate: initTemplate,\r\n//     mutiLangCode: '10140WCR'\r\n// })(WCRPanel);\r\nexport default WCRPanel","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WCRPanel from '../../workcalendarrule_base/main/';\r\nimport { createPage, base, ajax ,NCCreateSearch,toast} from 'nc-lightapp-front';\r\n/**\r\n * 工作日历规则-业务单元\r\n */\r\n\r\nlet config = {\r\n    title: '工作日历规则-业务单元',\r\n    pageCode: '10140WCRO_main',\r\n    appcode: '10140WCRO',\r\n    nodeType: 'org',\r\n};\r\n\r\nlet WCRPanel_ORG = createPage({\r\n    billinfo:[{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'headform'\r\n    },{\r\n        billtype: 'form',\r\n        pagecode: config.pageCode,\r\n        headcode: 'createmodel'\r\n    }]\r\n    // initTemplate: []\r\n})(WCRPanel)\r\n\r\n\r\n/**\r\n * 渲染页面\r\n */\r\nReactDOM.render(<WCRPanel_ORG config={config}/>, document.querySelector('#app'));","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;"],"sourceRoot":""}