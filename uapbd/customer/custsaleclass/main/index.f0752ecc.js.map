{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/uap/refer/riart/groupTreeRef/index.js","webpack://[name]/./src/uapbd/refer/org/SaleOrgTreeRef/index.js","webpack://[name]/./src/uapbd/refer/org/BusinessUnitTreeRef/index.js","webpack://[name]/./src/uapbd/public/utils/BDCreateUIDom.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/uapbd/customer/custsaleclass/main/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","props","arguments","length","undefined","React","createElement","Refer","_extends","conf","high","multiLang","domainName","currentLocale","queryTreeUrl","refType","placeholder","refName","rootNode","refname","refpk","refCode","treeConfig","code","isMultiSelectedEnabled","unitProps","unitConf","isShowUnit","_ncLightappFront","_index","pageCfg","langCfg","callback","count","result","hander","templateData","langData","inlt","console","log","newLangCfg","data","success","toast","content","color","MultiInit","getMultiLang","createUIDom","_react","setDefData","cardCache","getDefData","NCMenu","base","NCCheckbox","NCDropdown","PrintOutput","NCPopconfirm","NCMessage","NCCol","NCRow","NCButton","NCTooltip","NCMenuGroup","Item","formId","urls","loadTreeDataUrl","queryTemplet","addCardUrl","queryCardUrl","enablestateUrl","deleteUrl","printUrl","rollbackCodeUrl","saveUrl","pageCode","CustsaleClass","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_initialiseProps","config","assign","treeId","nodeType","state","disabledSearch","showoffDisable","codeedit","pks","json","checked","curOrg","curSelectedNode","isleaf","title","id","innercode","pid","initButtonStatus","changeButtonStatus","onStartEps","onStopEps","dealTreeData","initTemplate","Component","allpks","forEach","e","iconBox","delIcon","editIcon","addIcon","deleteDataChildrenProp","node","push","children","isLeaf","cacheTools","set","formstatus","form","getFormStatus","onbeforeunload","_this2","that","requestParam","pkorg","setFormItemsDisabled","enablestate","ajax","url","syncTree","setSyncTreeData","openNodeByPk","setNodeDisable","button","setButtonDisabled","datasource","setState","setFormStatus","setButtonVisible","_this3","EmptyAllFormValue","pk_custsaleclass","isGlbGrp","formulamsg","Array","dealFormulamsg","_defineProperty","headData","head","rows","values","enablestateValue","pk_father","display","setAllFormValue","index","selectedTreeNode","getSelectNode","nodeData","isGroup","_this4","promptBox","noFooter","hasCloseBtn","beSureBtnClick","error","setFormItemsValue","message","selectNode","_this5","pk_org","isCodeEdit","_this6","_this7","isCheckNow","formData","getAllFormValue","areacode","model","pageid","pk","nonPk","validateToSave","addNodeSuccess","editNodeSuccess","setNodeSelected","_this8","getFormItemsValue","_this9","delNodeSuceess","pk_prg","nodetype","_this10","_this11","asyncTree","getSelectNodeAsync","refreshTreeNode","_this12","res","val","param","map","field","firstvalue","linkTo","_ref","visible","getSyncTreeValue","obj","hideIcon","_this13","_this14","onRefresh","_this15","_this16","onSaveEps","onSaveAddEps","onCancelEps","selectedtreeNode","onSelectTree","print","funcode","appcode","nodekey","oids","pks1","refs","printOutput","open","_this17","_props","modal","DragWidthCom","treeTable","createButtonApp","createTreeTable","createForm","createSyncTree","createModal","createAsyncTree","_react2","default","className","createPageIcon","_BusinessUnitTreeRef2","onChange","onOrgChange","disabled","queryCondition","TreeRefActionExt","AppCode","onCheckShowDisable","area","onButtonClick","buttonClick","leftDom","needEdit","showLine","needSearch","onSelectEve","onMouseEnterEve","clickEditIconEve","onEditEps","clickAddIconEve","onAddEps","clickDelIconEve","onDeleteEps","showModal","rightDom","cancelPSwitch","onAfterEvent","onAfterFormEvent","onBeforeEvent","onBeforeFormEvent","defLeftWid","ref","outputType","_this18","_BDCreateUIDom2","pagecode","template","meta","setMeta","setButtons","createPage","billinfo","billtype","headcode","mutiLangCode"],"mappings":"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","file":"uapbd/customer/custsaleclass/main/index.f0752ecc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uapbd/customer/custsaleclass/main/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse\n\t\troot[\"uapbd/customer/custsaleclass/main/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 313);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { high } from 'nc-lightapp-front';\nconst {Refer} = high;\n\nexport default function (props = {}) {\n\treturn <Refer {...conf} {...props} />\n}\n\nexport \tvar conf = {multiLang: { \t\tdomainName: 'uap', \t\tcurrentLocale: 'zh-CN', \t\tmoduleId: 'uapRefer', \t},\n\tqueryTreeUrl:'/nccloud/riart/ref/groupRefTreeAction.do',\n\trefType:\"tree\",\n\t//isMultiSelectedEnabled:true\n\tplaceholder:'1880000025-000061',/* 国际化处理： 集团*/\n\trefName:'1880000025-000061',/* 国际化处理： 集团*/\n\trootNode: { refname: '1880000025-000061', refpk: 'root' },/* 国际化处理： 集团*/\n};\n","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport default function (props={}) {\n    var conf = {\n        \t\tmultiLang: {\n\t\t\tdomainName: 'uapbd',\n\t\t\tcurrentLocale: 'zh-CN',\n\t\t\tmoduleId: 'refer_uapbd',\n\t\t},\n\n\t\trefType: 'tree',\n        refName: 'refer-000285',/* 国际化处理： 销售组织*/\n        refCode: 'uapbd.refer.org.SaleOrgTreeRef',\n        rootNode:{refname:'refer-000285',refpk:'root'},/* 国际化处理： 销售组织*/\n        placeholder:'refer-000285',/* 国际化处理： 销售组织*/\n        queryTreeUrl: '/nccloud/uapbd/ref/SaleOrgTreeRef.do',\n        treeConfig:{name:['refer-000002', 'refer-000003'],code: ['refcode', 'refname']},/* 国际化处理： 编码,名称*/\n        isMultiSelectedEnabled: false,\n        unitProps: unitConf,\n        isShowUnit:false\n    };\n    return <Refer {...conf} {...props} />\n}\n","import { high } from 'nc-lightapp-front';\nconst { Refer } = high;\nimport { conf as unitConf } from '../../../../uap/refer/riart/groupTreeRef/index';\n\nexport var conf = {\n    multiLang: {\n        domainName: 'uapbd',\n        currentLocale: 'zh-CN',\n        moduleId: 'refer_uapbd',\n    },\n\n    refType: 'tree',\n    refName: 'refer-000201',/* 国际化处理： 业务单元*/\n    refCode: 'uapbd.refer.org.BusinessUnitTreeRef',\n    rootNode: { refname: 'refer-000201', refpk: 'root' },/* 国际化处理： 业务单元*/\n    placeholder: 'refer-000201',/* 国际化处理： 业务单元*/\n    queryTreeUrl: '/nccloud/uapbd/org/BusinessUnitTreeRef.do',\n    treeConfig: { name: ['refer-000002', 'refer-000003'], code: ['refcode', 'refname'] },/* 国际化处理： 编码,名称*/\n    isMultiSelectedEnabled: false,\n    unitProps: unitConf,\n    isShowUnit: false\n};\n\nexport default function (props = {}) {\n\n    return <Refer {...conf} {...props} />\n}\n","//   pagecode:props.config.pageCode?props.config.pageCode:pagecode\r\n//  getMultiLang({moduleId: \"10140ADRB\",domainName: 'uapbd',callback})\r\n\r\n\r\nimport { toast} from 'nc-lightapp-front';\r\nexport default function(props){\r\n     return ( pageCfg = {} , langCfg = {}, callback ) => {\r\n\r\n         var count = 0;\r\n         var result = {};\r\n\r\n         var hander = () => {\r\n             if(count == 2){\r\n                 callback && callback(result.templateData || {} , result.langData || {},result.inlt||{});\r\n             }\r\n         }\r\n         if(langCfg.callback){\r\n             console.log('咱们自己createUIDom会同时获取多语和单据模板,并通过一个回调函数返回, langCfg中的回调函数将被忽略');\r\n         }\r\n\r\n         var newLangCfg = { ...langCfg, callback: (data, success,inlt) => {\r\n                    count = count + 1;\r\n                 if(!success){\r\n                     toast({content:'load muti lang error',color:'warning'});\r\n                 }\r\n                 result.langData = data || {};\r\n                 result.inlt = inlt || {};\r\n                 hander();\r\n         }};\r\n         props.MultiInit.getMultiLang(newLangCfg);\r\n\r\n         props.createUIDom(pageCfg, (data) => {\r\n             count = count + 1;\r\n             result.templateData = data || {};\r\n             hander();\r\n         });\r\n    };\r\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import React, { Component } from 'react';\nimport { createPage, base, ajax ,NCCreateSearch,toast,print,cacheTools,high,promptBox,cardCache,createPageIcon} from 'nc-lightapp-front';\nimport SaleOrgTreeRef from '../../../refer/org/SaleOrgTreeRef'\nimport BusinessUnitTreeRef from '../../../refer/org/BusinessUnitTreeRef'\nimport createUIDom from '../../../public/utils/BDCreateUIDom';\nlet {setDefData, getDefData } = cardCache;\nconst {NCMenu,NCDropdown,NCCheckbox,NCPopconfirm, NCMessage,NCCol,NCRow,NCButton,NCTooltip} = base;\nconst {NCMenuGroup} = NCMenu;\nconst { Item } = NCMenu;\nconst {PrintOutput}=high;\n\n\n\n/****************默认参数  开始***********************/\nlet formId = \"head\";//卡片组件Id\nconst urls={\n    loadTreeDataUrl:\"/nccloud/uapbd/custsaleclass/loadtreedata.do\",\n    queryTemplet : '/nccloud/platform/templet/querypage.do',\n    addCardUrl:\"/nccloud/uapbd/custsaleclass/addcard.do\",\n    queryCardUrl:\"/nccloud/uapbd/custsaleclass/querycard.do\",\n    enablestateUrl:\"/nccloud/uapbd/custsaleclass/enablestate.do\",\n    deleteUrl:'/nccloud/uapbd/custsaleclass/deltreenode.do',\n    printUrl: '/nccloud/uapbd/custsaleclass/print.do',\n    rollbackCodeUrl:'/nccloud/uapbd/custsaleclass/rollbackCode.do',\n    saveUrl:'/nccloud/uapbd/custsaleclass/savenode.do'\n};\nlet pageCode=\"10140CSCLG_custsaleclass\";//默认集团\n/***************默认参数  结束********************/\n\n/**\n * 客户销售分类\n */\nclass CustsaleClass extends Component {\n    constructor(props){\n        super(props)\n        this.config =Object.assign({\n            treeId:\"custsaleclassTree\",\n            formId:formId,\n            pageCode:pageCode,\n            nodeType:'GROUP_NODE',\n            urls:urls\n        },props.config);\n\n\t\t\t\t//显示停用复选框的状态标志\n        this.state = {\n            disabledSearch:false,\n            showoffDisable:true,\n            codeedit:true,\n            pks:[],\n            json: {},\n            checked: false,//判断 显示停用按钮是否选中\n            curOrg: '' ,//客户销售分类-财务组织节点，选中的组织主键\n            curSelectedNode: null //直接点击树节点操作按钮时 用于记录selectedNode\n        }\n        //自定义根节点\n        this.root = {\n            \"isleaf\": false,\n            \"key\":\"~\",\n            \"title\":\"\",\n            \"id\":\"~\",\n            \"innercode\":\"~\",\n            \"pid\": \"\",\n            \"refname\": \"\",\n            \"refpk\": \"~\"\n        };\n        //主动事件，绑定this指针\n        this.initButtonStatus = this.initButtonStatus.bind(this);\n        this.changeButtonStatus = this.changeButtonStatus.bind(this);\n        this.onStartEps = this.onStartEps.bind(this);\n        this.onStopEps = this.onStopEps.bind(this);\n        this.dealTreeData = this.dealTreeData.bind(this);\n\t\tthis.initTemplate(props);\n    }\n\n    \n    //初始化单据模板\n    initTemplate = (props,callback) => {\n        let that = this;\n        createUIDom(props)(\n            {\n                pagecode:props.config.pageCode//页面id\n            // appcode:props.config.appcode//注册按钮的id\n            },\n            {\n                moduleId: '10140CSCLG',domainName: 'uapbd'\n            },\n            (data, langData)=>{ //(data, langData)\n                if(langData){\n                    this.state.json = langData\n                    if(props.config.nodeType == 'GROUP_NODE'){\n                        props.config.title = this.state.json['10140CSCLG-000034']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 客户销售分类*/\n\t\t\t\t\t}else{\n                        props.config.title = this.state.json['10140CSCLG-000035']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 客户销售分类*/\n\n\t\t\t\t\t}\n                }\n                if (data) {\n                    if (data.template) {\n                        let meta = data.template;\n                        props.meta.setMeta(meta);\n                    }\n                    if (data.button) {\n                        let button = data.button;\n                        props.button.setButtons(button);\n                    }\n                    that.onRefresh();\n                    callback && callback();\n                }\n            }\n        )\n\t\t}\n\n\n    /**\n     * 处理树数据\n     * @param data\n     * @returns {*}\n     */\n    dealTreeData(data){\n        //为了打印左边所有树节点\n        let allpks =[];\n        let deleteDataChildrenProp = function(node){\n            if(!('~' == node.refpk || node.refpk == undefined)){\n                allpks.push(node.refpk);\n            }\n            node.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            if(!node.children || node.children.length == 0) {\n                delete node.children;\n            }\n            else{\n                node.isLeaf = false;\n                node.children.forEach( (e) => {\n                    deleteDataChildrenProp(e);\n                } );\n            }\n        };\n        data.forEach( (e) => {\n            e.iconBox = {\n                delIcon:true,\n                editIcon:true,\n                addIcon:true\n            }\n            deleteDataChildrenProp(e);\n        });\n        cacheTools.set('allpks',allpks);\n        return data;\n    }\n\n    componentDidUpdate(){\n        //form如果是编辑态，关闭浏览器需要给你提示\n        let formstatus = this.props.form.getFormStatus(this.config.formId);\n        \n        if(formstatus == 'browse' || formstatus == undefined){\n            window.onbeforeunload = null;\n        }else{\n            window.onbeforeunload = () => {//编辑态关闭页签或浏览器的提示\n                return '';\n                };\n        }\n    }\n\n    /**\n     * react 生命周期函数 组件渲染完后触发事件\n     */\n    componentDidMount(){\n        //修改按钮状态\n        this.initButtonStatus();\n\n    }\n\n    onRefresh(){\n        /**************\n         * 构造请求参数\n         * @type {{checked: boolean}}\n         *************/\n        let that = this;\n        let requestParam = { \n            checked:that.state.checked,\n            pkorg:that.state.curOrg.refpk\n         };\n         //默认设置停启用不可以编辑\n         that.props.form.setFormItemsDisabled(that.config.formId,{'enablestate':true});\n        /*************\n         * ajax请求 加载树数据\n         *************/\n        ajax({\n            url:that.config.urls.loadTreeDataUrl,\n            data:requestParam,\n            success:(result)=>{\n                //根节点名字更新\n                that.root.title = this.state.json['10140CSCLG-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 客户销售分类*/\n                that.root.refname = this.state.json['10140CSCLG-000000']//this.state.json['10140CSCLG-000000'],/* 国际化处理： 客户销售分类*/\n                if(result.success){\n                    if(result.data){\n                        let data = [Object.assign( {...that.root} , {children : result.data} )];\n                        //同步树  加载全部数据\n                        that.props.syncTree.setSyncTreeData(that.config.treeId , that.dealTreeData(data));\n                        if(that.state.curOrg.refpk != undefined){\n                            that.props.syncTree.openNodeByPk(that.config.treeId, that.root.refpk);\n                            //设置默认中第一行\n                            //that.props.syncTree.setNodeSelected(that.config.treeId, result.data[0].refpk);\n                            // if(result.data[0].refpk!=='root'){\n                            //     that.onSelectTree( result.data[0].refpk);\n                            // }\n                        }\n                        if(that.config.nodeType==='ORG_NODE' && that.state.curOrg.refpk == undefined){\n                            that.props.syncTree.setNodeDisable(that.config.treeId,true);//编辑时设置整棵树不可用\n                            that.props.button.setButtonDisabled(['print','export'],true);\n                        }\n                        if(that.config.nodeType==='GROUP_NODE'){\n                            //that.props.syncTree.setNodeDisable(that.config.treeId,false);//编辑时设置整棵树不可用\n                            //展开节点  设置默认展开项\n                            that.props.syncTree.openNodeByPk(that.config.treeId, that.root.refpk);\n                        }\n                        \n                        if(that.config.nodeType==='ORG_NODE' && that.state.curOrg.refpk != undefined){\n                            that.props.button.setButtonDisabled(['print','export','refresh'],false);\n                            that.props.syncTree.setNodeDisable(that.config.treeId,false);//编辑时设置整棵树可用\n                        }\n                    }else{\n                        let data = [{...that.root}];\n                        that.props.syncTree.setSyncTreeData(that.config.treeId, data);\n                    }\n                    if(getDefData('custsaleclass_btnopr',that.props.config.datasource) == 'refresh'){\n                        toast({title:this.state.json['10140CSCLG-000001'],color:\"success\"});/* 国际化处理： 刷新成功！*/\n                        setDefData('custsaleclass_btnopr',that.props.config.datasource,'browse');\n                    }\n                }\n                //浏览态，显示停用都可以勾选\n                that.setState({\n                    showoffDisable:false\n                });\n                that.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});\n                //设置为浏览态\n                that.props.form.setFormStatus(this.config.formId,\"browse\");\n            }\n        });\n    }\n    /**\n     * 页面初始设置button状态\n     * @param props\n     */\n    initButtonStatus(){\n        //设置保存按钮不显示\n        this.props.button.setButtonVisible('save',false);\n        this.props.button.setButtonVisible('saveadd',false);\n        this.props.button.setButtonVisible('cancel',false);\n        this.props.button.setButtonVisible('print',true);\n        this.props.button.setButtonVisible('refresh',true);\n    }\n\n    /**\n     * 点击树节点\n     * @param refpk\n     */\n    onSelectTree(refpk){\n\n        if('~' == refpk){\n            this.props.button.setButtonDisabled(['print','export'],true);\n        }else{\n            this.props.button.setButtonDisabled(['print','export'],false);\n        }\n        //编辑态  树节点操作无效  应该提供一个接口，编辑态任何操作都不能动\n        let status = this.props.form.getFormStatus(this.config.formId);\n        if(status == 'edit'){\n            return;\n        }\n\n\n        if(refpk == this.root.refpk){\n            //清空表单\n            this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});\n            this.props.form.EmptyAllFormValue(this.config.formId);\n            return;\n        }\n        /********************************\n         * ajax 请求选择的树节点数据\n         ********************************/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_custsaleclass:refpk,isGlbGrp: this.config.isGlbGrp},\n            success:(result)=>{\n\n                if(result.success){\n\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\"\n                            }\n                        );\n                    }\n\n                    //表单数据\n                    let headData = result.data.form.head.rows[0].values;\n                    if(headData.enablestate){\n                        let enablestateValue = headData.enablestate.value;\n                        //根据表单项enablestate的值修改开关状态\n                        if(enablestateValue == '2'){\n                            result.data.form.head.rows[0].values.enablestate.value = true;\n                        }else{\n                            result.data.form.head.rows[0].values.enablestate.value = false;\n                        }\n                    }\n                    \n                    if(headData.pk_father.display == this.root.refpk){\n                        result.data.form.head.rows[0].values.pk_father.display = '';\n                        result.data.form.head.rows[0].values.pk_father.value='';\n                    }\n                    //设置表单为所选树节点数据\n                    this.props.form.setAllFormValue({head:result.data.form.head});\n                    //设置表单项enablestate可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':false});\n                    //设置打印按钮可用\n                    this.props.button.setButtonDisabled(['print','export'],false);\n                }\n            }\n        });\n    }\n\n\n    /**\n     * 表单编辑事件\n     * @param props\n     * @param moduleId\n     * @param key\n     * @param value\n     * @param index\n     */\n    onBeforeFormEvent(props, moduleId, key, value, index){\n\n        switch(key){\n            case \"enablestate\":\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n\n                if(this.config.nodeType==='ORG_NODE' && selectedTreeNode && selectedTreeNode.nodeData.isGroup){\n                    toast({content: this.state.json['10140CSCLG-000002'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据！*/\n                    return false;\n                }\n\n                if(this.config.nodeType==='GROUP_NODE' && selectedTreeNode && !selectedTreeNode.nodeData.isGroup){\n                    toast({content: this.state.json['10140CSCLG-000003'], color: 'warning'});//默认top/* 国际化处理： 集团不能操作业务单元级数据！*/\n                    return false;\n                }\n                return true;\n                break;\n            default:\n                return true;\n                break;\n        }\n    }\n\n    /**\n     * 表单编辑事件\n     * @param props\n     * @param moduleId\n     * @param key\n     * @param value\n     * @param index\n     */\n    onAfterFormEvent(props, moduleId, key, value, index){\n        switch(key){\n            case \"enablestate\":\n                //获得选中节点\n                let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);\n                \n                if(!selectedTreeNode){\n                    let content = value.value?this.state.json['10140CSCLG-000004']:this.state.json['10140CSCLG-000005'];/* 国际化处理： 请选中需要启用的树节点,请选中需要停用的树节点！*/\n                    toast({content: content, color: 'warning'});//默认top\n                    return;\n                }\n                let requestParam = {pk_custsaleclass:selectedTreeNode.refpk,enablestate:value.value?'2':'1'};                \n\n                promptBox({\n                    color:'info',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title: value.value?this.state.json['10140CSCLG-000006']:this.state.json['10140CSCLG-000036'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认启用*/\n                    noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                    hasCloseBtn:false,\n                    content: value.value?this.state.json['10140CSCLG-000007']:this.state.json['10140CSCLG-000008'],/* 国际化处理： 您确定要启用所选数据吗？,您确定要停用所选数据及其所有下级数据吗？*/\n                    beSureBtnClick: () =>{\n                        ajax({\n                            url:this.config.urls.enablestateUrl,\n                            data:requestParam,\n                            success:(result)=>{\n                                toast({ color: 'success', title:value.value?this.state.json['10140CSCLG-000009']:this.state.json['10140CSCLG-000010'] });/* 国际化处理： 启用成功！,停用成功！*/\n                            },\n                            error:(result)=>{\n                                if(value.value){\n                                    props.form.setFormItemsValue(this.config.formId,{enablestate:{value:false,display:null}});\n                                }else{\n                                    props.form.setFormItemsValue(this.config.formId,{enablestate:{value:true,display:null}});\n                                }\n                                toast({content:result.message, color: 'warning'});\n                            }\n                        });\n                    }   \n                })\n                break;\n            default:\n                break;\n        }\n        //some code\n    }\n\n    /**\n     * 新增\n     */\n    onAddEps(selectNode){\n        let that = this;\n        if(this.config.nodeType==='ORG_NODE' && !this.state.curOrg.refpk){\n            toast({content: this.state.json['10140CSCLG-000011'], color: 'warning'});//默认top/* 国际化处理： 请选择销售组织！*/\n            return;\n        }\n        let requestParam = {pk_org:this.state.curOrg.refpk,nodeType:this.config.nodeType,pk_father:selectNode?selectNode.refpk:this.root.refpk};\n        ajax({\n            url:this.config.urls.addCardUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success){\n                    //清空表单数据\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\"\n                            }\n                        );\n                    }\n\n                    //设置表单为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                    //设置新增默认值\n                    this.props.form.setAllFormValue({head:result.data.form.head});\n                    //设置表单项不可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});\n                    if(this.config.nodeType==='ORG_NODE'){\n                        that.props.form.setFormItemsValue(that.config.formId,{'pk_org':{value:that.state.curOrg.refpk,display:that.state.curOrg.refname}});\n                    }\n                    \n                    //所属组织不能编辑\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'pk_org':true});//设置表单项不可用\n                    if(!result.data.isCodeEdit){\n                        //设置单据编码不可以编辑\n                        this.props.form.setFormItemsDisabled(this.config.formId,{'code':true});\n                    }\n\n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                    //控制树上搜索框不能编辑\n                    this.setState({\n                        curSelectedNode:selectNode,\n                        disabledSearch:true,\n                        showoffDisable:true\n                    });\n                    this.changeButtonStatus(selectNode,'add');\n                }\n            }\n        })\n    }\n\n    /**\n     * 编辑\n     */\n    onEditEps(selectedTreeNode){\n        /**************************************************\n         *\n         * 编辑：\n         *      1、构造请求参数\n         *      2、ajax请求，后台查询需要编辑的对象\n         *      3、回调，设置表单数据为编辑的对象\n         *\n         * 编辑状态下：\n         *      只有 保存  取消 按钮 显示\n         *\n         *\n         **************************************************/\n        /****未选中提示***/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140CSCLG-000012'], color: 'warning'});//默认top/* 国际化处理： 请选中需要编辑的节点！*/\n            return;\n\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000002'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据！*/\n            return;\n        }\n        if(this.config.nodeType==='GROUP_NODE' && !selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000003'], color: 'warning'});//默认top/* 国际化处理： 集团不能操作业务单元级数据！*/\n            return;\n        }\n        /***ajax请求***/\n        ajax({\n            url:this.config.urls.queryCardUrl,\n            data:{pk_custsaleclass:selectedTreeNode.refpk,isGlbGrp: this.config.isGlbGrp},\n            success:(result)=>{\n\n                if(result.success){\n\n                    //查询时执行显示公式前端适配\n                    if (result.formulamsg && result.formulamsg instanceof Array && result.formulamsg.length > 0) {\n                        props.dealFormulamsg(\n                            result.formulamsg,  //参数一：返回的公式对象\n                            {                //参数二：界面使用的表格类型\n                                [this.config.formId]:\"form\"\n                            }\n                        );\n                    }\n                    \n                    this.props.syncTree.setNodeDisable(this.config.treeId,true);//编辑时设置整棵树不可用\n                   \n                    //设置表单数据\n                    this.props.form.setAllFormValue({head:result.data.form.head});\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});//设置表单项不可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'code':!result.data.isCodeEdit});//设置表单项不可用\n                    this.props.form.setFormItemsDisabled(this.config.formId,{'pk_org':true});//设置表单项不可用\n                    //设置表单状态为编辑态\n                    this.props.form.setFormStatus(this.config.formId, 'edit');\n\n                    this.changeButtonStatus(selectedTreeNode,'edit');\n                    //控制树上搜索框不能编辑\n                    this.setState({\n                        curSelectedNode:selectedTreeNode,\n                        disabledSearch:true,\n                        showoffDisable:true\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 保存\n     */\n    onSaveEps(callback){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.formId);\n        if(!memberFlag){\n            return;\n        }\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        if(!selectedTreeNode){\n            selectedTreeNode = this.state.curSelectedNode;\n        }        \n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        /****\n         * 构造参数\n         * @type {string}\n         */\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        // formData.rows[0].values.eps_code.value = selectedTreeNode.nodeData.pcode + formData.rows[\"0\"].values.eps_code.value;\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: this.config.pageCode//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n            //pcode: selectedTreeNode.nodeData.pcode\n        };\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        var pk = null;\n        if(formData.rows[0].values.pk_custsaleclass){\n\n            pk = formData.rows[0].values.pk_custsaleclass.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n\n        }\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n        }\n\n        //校验公式\n        this.props.validateToSave(requestParam,()=>{\n            //ajax请求\n            ajax({\n                url: this.config.urls.saveUrl,\n                data: requestParam,\n                success: (result) => {\n                    if(result.success){\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        if(!result.data[0].children || result.data[0].children.length == 0 ){\n                            delete result.data[0].children;\n                        }\n                        if(nonPk){\n                            //新增回调后添加\n                            this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        }else{\n                            //修改回调后修改\n                            this.props.syncTree.editNodeSuccess(this.config.treeId,result.data[0]);\n                        }\n                        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n                        //展开树节点\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n                        this.props.syncTree.setNodeSelected(this.config.treeId, result.data[0].refpk);\n                        //设置表单项可用\n                        this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':false});\n                        //清空自定已选中项   控制树上搜索框不能编辑\n                        this.setState({curSelectedNode:null,disabledSearch:false,showoffDisable:false});\n                        toast({title: this.state.json['10140CSCLG-000013'], color: 'success'});//默认top/* 国际化处理： 保存成功！*/\n                        this.changeButtonStatus(selectedTreeNode,'save');\n                        callback && callback();\n                    }\n                }\n            });\n        },{[this.config.formId]:'form'} , 'form' );\n    }\n\n    /**\n     * 保存新增\n     */\n    onSaveAddEps(){\n        //必填项校验\n        let memberFlag = this.props.form.isCheckNow(this.config.formId);\n        let that = this;\n        if(!memberFlag){\n            return;\n        }\n        \n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        let requestParam= {};\n        /**************************************************\n         *\n         * 保存：\n         *     1、获取表单对象\n         *     2、构造请求参数模型\n         *     3、ajax请求，后台根据表单对象主键执行保存或更新操作\n         *     4、回调，刷新当前树节点的父节点\n         *\n         * 保存状态下：\n         *      恢复到浏览态，根据当前选中的树节点决定按钮的可见性和可操作性\n         *\n         **************************************************/\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        formData.areacode = this.config.formId;//添加表单的areacode编码\n        formData.rows['status'] = '2';//设置状态\n\n        /***设置请求参数***/\n        requestParam = {\n            model: formData,\n            pageid: '10140EPSG'//pageid : 我们导出的模板的名字  也就是 json数据的最外层的code值\n        };\n\n        /****判断刷新父节点，还是刷新选中节点****/\n        /************************************\n         * 如果是新增，就刷新当前选中节点\n         * 如果是编辑，就刷新当前节点的父节点\n         *\n         ************************************/\n        var pk = null;\n        \n        if(formData.rows[0].values.pk_custsaleclass){\n\n            pk = formData.rows[0].values.pk_custsaleclass.value;//当前表单有pk:update 刷新父节点；没有pk:save 刷新当前节点\n\n        }\n        let nonPk = false;//没有主键  false时就是有主键  即编辑 即刷新父节点\n        if(pk == null || pk ==''){\n            nonPk = true;// true时 就是无主键 即 新增  即刷新当前节点\n\n        }\n\n        //校验公式\n        this.props.validateToSave(requestParam,()=>{\n            /***ajax请求***/\n            ajax({\n                url: this.config.urls.saveUrl,\n                data: requestParam,\n                success: (result) => {\n                    /**********\n                     *\n                     * 这里的代码可以精简，临时先这样，逻辑思路是一样的\n                     *\n                     *\n                     *********/\n                    if(result.success){\n                        //设置表单为浏览态\n                        this.props.form.setFormStatus(this.config.formId, 'browse');\n                        if(!result.data[0].children || result.data[0].children.length == 0 ){\n                            delete result.data[0].children;\n                        }\n                        //新增回调后添加\n                        this.props.syncTree.addNodeSuccess(this.config.treeId,result.data);\n                        this.props.syncTree.openNodeByPk(this.config.treeId, result.data[0].pid);\n\n                        //判断 选中节点如果消失，重新设置新增节点的父节点为选中节点，然后重新获取选中节点\n                        if(!selectedTreeNode){\n                            this.props.syncTree.setNodeSelected(this.config.treeId,result.data[0].pid);\n                            selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                        }\n\n                        //重新设置整棵树不可用\n                        this.props.syncTree.setNodeDisable(this.config.treeId,true);\n\n                        // //判断是否有选中节点\n                        // if (!selectedTreeNode) {\n                        //     //如果没有默认加载根节点下面\n                        //     requestParam = {\n                        //         pk_father:this.root.refpk\n                        //     };\n                        // } else {\n                        //     requestParam = {\n                        //         pk_father:selectedTreeNode.refpk\n                        //     };\n                        // }\n                        requestParam = {\n                            pk_father:this.props.form.getFormItemsValue('head','pk_father').value\n                        };\n                        //ajax请求\n                        ajax({\n                            url: this.config.urls.addCardUrl,\n                            data: requestParam,\n                            success: (result) => {\n                                if(result.success){\n                                    \n                                    //清空表单数据\n                                    this.props.form.EmptyAllFormValue(this.config.formId);\n                                    //新增成功，设置表单默认值\n                                    this.props.form.setAllFormValue({head:result.data.form.head});\n                                    if(this.config.nodeType==='ORG_NODE'){\n                                        this.props.form.setFormItemsValue(this.config.formId,{'pk_org':{value:this.state.curOrg.refpk,display:this.state.curOrg.refname}});\n                                    }\n                                    //设置表单为编辑态\n                                    this.props.form.setFormStatus(this.config.formId, 'edit');\n                                    this.changeButtonStatus(selectedTreeNode,'saveAdd');\n                                }\n                            }\n                        })\n                    }\n                    //控制树上搜索框不能编辑\n                    this.setState({\n                        disabledSearch:true,\n                        showoffDisable:true\n                    });\n                }\n            });\n        },{[this.config.formId]:'form'} , 'form' );\n\n        \n    }\n\n    /**\n     * 删除\n     */\n    onDeleteEps(selectedTreeNode){\n\n        let requestParam = {};\n        /*******************************************\n         *\n         * 删除：\n         *      1、根据选中的树节点做出相应的提示\n         *      2、弹出删除确认提示\n         *      3、构造请求参数\n         *      4、ajax请求，后台执行删除\n         *      5、回调，执行前台删除动作\n         *\n         * 删除状态下：\n         *      清空表单对象数据，按钮全成Disabled状态\n         *\n         *******************************************/\n        if (!selectedTreeNode) {\n\n            toast({content: this.state.json['10140CSCLG-000014'], color: 'warning'});//默认top/* 国际化处理： 请选中需要删除的节点！*/\n            return;\n\n        }\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000002'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据！*/\n            return;\n        }\n        if(this.config.nodeType==='GROUP_NODE' && !selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000003'], color: 'warning'});//默认top/* 国际化处理： 集团不能操作业务单元级数据！*/\n            return;\n        }\n        if(selectedTreeNode.refpk == this.root.refpk){\n            toast({content: this.state.json['10140CSCLG-000015'], color: 'warning'});//默认top/* 国际化处理： 根节点不能删除！*/\n            return;\n\n        }\n        let message = this.state.json['10140CSCLG-000016']/* 国际化处理： 确认要删除所选数据吗？*/\n        if(selectedTreeNode.children && selectedTreeNode.children.length>0){\n            toast({content: this.state.json['10140CSCLG-000017'], color: 'warning'});//默认top/* 国际化处理： 数据已被引用，不能删除！*/\n            return;\n        }\n        let code = this.props.form.getFormItemsValue(this.config.formId,'code').value;\n\n        promptBox({\n            color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n            title: this.state.json['10140CSCLG-000018'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 确认删除*/\n            noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n            content: message,\n            beSureBtnClick: () =>{\n\n                promptBox({\n                    color:'info',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title: this.state.json['10140CSCLG-000019'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                    noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                    hasCloseBtn:false,\n                    content: this.state.json['10140CSCLG-000020'],/* 国际化处理： 删除时要做业务引用校验，可能等待时间较长，是否确认删除？*/\n                    beSureBtnClick: () =>{\n                        requestParam = {\n                            pk_custsaleclass:selectedTreeNode.refpk\n                        }\n                        let pid = selectedTreeNode.pid;\n                        \n                        ajax({\n                            url:this.config.urls.deleteUrl,\n                            data:requestParam,\n                            success:(result)=>{\n                                if(result.success){\n                                    \n                                    this.props.form.EmptyAllFormValue(this.config.formId);\n                                    //调用异步树的接口，删除该树节点\n                                    this.props.syncTree.delNodeSuceess(this.config.treeId,selectedTreeNode.refpk);\n                                    toast({ color: 'success', title: this.state.json['10140CSCLG-000021'] });/* 国际化处理： 删除成功！*/\n                                    //删除成功提示\n                                    // Message.create({content: '删除成功！', color: 'success'});//默认top\n                                    this.changeButtonStatus(selectedTreeNode,'del');\n                                }\n        \n                            }\n                        })\n                    }   \n                })\n            }   \n        })\n//编码回收\n        ajax({\n            url: this.config.urls.rollbackCodeUrl,\n            data: {\n                code:code,\n                pk_prg:this.state.curOrg,\n                nodetype:this.config.nodeType\n            }, //参数带上选中的行政组织\n            success:(result)=>{\n                if(result.success){\n\n                }\n            }\n        });\n    }\n\n    /**\n     * 取消\n     */\n    onCancelEps(){\n\n        //同步树 取消的逻辑\n        let selectedTreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n        /**********************************************************\n         *\n         * 取消：\n         *      1、重新根据选中的树节点查询表单对象\n         *      2、回调，设置表单对象\n         *      3、设置按钮状态\n         *\n         **********************************************************/\n        this.props.form.EmptyAllFormValue(this.config.formId);\n        this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':true});//设置表单项不可用\n        if(selectedTreeNode && selectedTreeNode.refpk != '~'){\n            //查询节点信息\n            ajax({\n                url:this.config.urls.queryCardUrl,\n                data:{pk_custsaleclass:selectedTreeNode.refpk,isGlbGrp: this.config.isGlbGrp},\n                success:(result)=>{\n\n                    if(result.success){\n                        \n                        this.props.form.setAllFormValue({head:result.data.form.head});\n                        this.props.form.setFormItemsDisabled(this.config.formId,{'enablestate':false});\n\n                    }\n                }\n            });\n        }else{\n            //没有选中项  清空所有数据\n            this.props.form.EmptyAllFormValue(this.config.formId);\n        }\n        this.props.form.setFormStatus(this.config.formId, 'browse');\n        //设置树可用\n        this.props.syncTree.setNodeDisable(this.config.treeId,false);\n        //设置按钮状态\n        this.changeButtonStatus(selectedTreeNode,'cancel');\n        //控制树上搜索框不能编辑\n        this.setState({\n            disabledSearch:false,\n            showoffDisable:false\n        });\n    }\n\n    /**\n     * 启用\n     */\n    onStartEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        /**************************************************\n         *\n         * 启用/停用\n         *      1、判断选中树节点的状态，做出相应的提示\n         *      2、构造请求参数\n         *      3、ajax请求，后台执行更新\n         *\n         * 启用/停用状态下：\n         *      按钮的可见性和可操作性不变\n         *\n         *\n         **************************************************/\n\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000002'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据！*/\n            return;\n        }\n        if(this.config.nodeType==='GROUP_NODE' && !selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000003'], color: 'warning'});//默认top/* 国际化处理： 集团不能操作业务单元级数据！*/\n            return;\n        }\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140CSCLG-000022'], color: 'warning'});//默认top/* 国际化处理： 请选中需要启用的树节点！*/\n        }else if(formData.rows[0].values.enablestate.value == '2'){\n            toast({content: this.state.json['10140CSCLG-000023'], color: 'warning'});//默认top/* 国际化处理： 该数据已启用，无需多次启用！*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'2'\n        }\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                //启用成功，设置表单数据\n                this.props.form.setAllFormValue({head:result.data.head});\n                //关闭 展开，可以做一个refreshTreeNode方法\n                this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n                this.changeButtonStatus('start');\n            }\n        });\n    }\n\n    /**\n     * 停用\n     */\n    onStopEps(){\n        let formData = this.props.form.getAllFormValue(this.config.formId);//获得表单信息\n        let selectedTreeNode = this.props.asyncTree.getSelectNodeAsync(this.config.treeId);//获得选中节点\n        let requestParam = {};\n        if(this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000002'], color: 'warning'});//默认top/* 国际化处理： 业务单元不能操作集团级数据！*/\n            return;\n        }\n        if(this.config.nodeType==='GROUP_NODE' && !selectedTreeNode.nodeData.isGroup){\n            toast({content: this.state.json['10140CSCLG-000003'], color: 'warning'});//默认top/* 国际化处理： 集团不能操作业务单元级数据！*/\n            return;\n        }\n\n        if(!selectedTreeNode){\n\n            toast({content: this.state.json['10140CSCLG-000005'], color: 'warning'});//默认top/* 国际化处理： 请选中需要停用的树节点！*/\n        }else if(formData.rows[0].values.enablestate.value == '1'){\n            toast({content: this.state.json['10140CSCLG-000024'], color: 'warning'});//默认top/* 国际化处理： 该数据已停用，无需多次停用！*/\n            return;\n        }\n        requestParam = {\n            pk_custsaleclass:formData.rows[0].values.pk_custsaleclass.value,\n            enablestate:'1'\n        }\n        \n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(res)=>{\n                if(res.success){\n\n                    this.props.form.EmptyAllFormValue(this.config.formId);\n                    this.refreshTreeNode(this.config.treeId,selectedTreeNode.pid);\n                    this.changeButtonStatus('stop');\n                }\n            }\n        });\n        \n    }\n\n    /*****button group end*****/\n\n    /**\n     * 查询按钮点击事件\n     * @param props\n     * @param val\n     */\n    onClickSearchBtn(props,val){\n        let url = \"/uapbd/eps/main/list/index.html\";\n        //获得查询区域条件\n        // let data = props.search.getAllSearchData(\"epsQryTemp\");\n        let param = {};\n        if(val!=null){\n            val.map((e)=>{\n                \n                param[e.field] = e.value.firstvalue;\n            });\n        }\n\n\n        props.linkTo(\n            url,param\n        );\n    }\n\n    /**\n     * 更多按钮点击更多选项时触发事件\n     * @param key\n     */\n    onMoreSelect({ key }) {\n        if(key == 'start'){\n            this.onStartEps();\n        }else if(key == 'stop'){\n            this.onStopEps();\n        }\n\n    }\n\n    /**\n     * 更多选项，切换选项时触发事件\n     * @param visible\n     */\n    onVisibleChange(visible) {\n    }\n\n    /**\n     * 更多按钮占位事件\n     */\n    onMore(){\n    }\n\n    /**\n     * 按钮点击状态切换监听事件\n     * @param id\n     */\n    changeButtonStatus(selectedTreeNode,id){\n        switch(id){\n            case 'add':\n            case 'saveadd':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',true);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible(['refresh','print','export'],false);\n                break;\n            case 'edit':\n                this.props.button.setButtonVisible('save',true);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',true);\n                this.props.button.setButtonVisible(['print','export'],false);\n                this.props.button.setButtonVisible('refresh',false);\n                break;\n            case 'delete':\n            case 'save':\n            case 'cancel':\n                this.props.button.setButtonVisible('save',false);\n                this.props.button.setButtonVisible('saveadd',false);\n                this.props.button.setButtonVisible('cancel',false);\n                this.props.button.setButtonVisible(['print','refresh','export'],true);\n                this.props.button.setButtonDisabled(['print','refresh','export'],false);\n            default :\n                break;\n        }\n    }\n\n    /**\n     * 鼠标进入树节点事件\n     * @param key\n     */\n    onMouseEnterEve(key){\n        let selectedTreeNode = this.props.syncTree.getSyncTreeValue(this.config.treeId,key);//获得树节点选中项\n        let obj = {};\n        //设置\n        if(key === this.root.refpk || (this.config.nodeType==='ORG_NODE' && selectedTreeNode.nodeData.isGroup)){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n        if(this.config.nodeType==='GROUP_NODE' && !selectedTreeNode.nodeData.isGroup){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n        //设置\n        if(key === this.root.refpk){\n            obj = {\n                delIcon:false, //false:隐藏； true:显示; 默认都为true显示\n                editIcon:false,\n                addIcon:true\n            };\n            this.props.syncTree.hideIcon(this.config.treeId, key, obj );\n        }\n\n    }\n\n    /**\n     * enablestate change 事件\n     * @param checked\n     */\n    onChange(checked){\n        let selectNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得树节点选中项\n        let requestParam = {};\n        if(!selectNode ){\n            toast({content: this.state.json['10140CSCLG-000025'], color: 'warning'});//默认top/* 国际化处理： 请选中树节点！*/\n        }\n        requestParam['pk_custsaleclass'] = selectNode.refpk;\n        requestParam['enablestate'] = checked?'2':'1';\n        ajax({\n            url:this.config.urls.enablestateUrl,\n            data:requestParam,\n            success:(result)=>{\n                if(result.success) {\n                    if (checked) {\n                        //如果是选中 那就把数据再加载到表单\n                        this.props.form.setAllFormValue({head:result.data.head});\n                    } else {\n                        //如果不是选中那就清空表单\n                        this.props.form.EmptyAllFormValue(this.config.formId);\n                        this.props.syncTree.delNodeSuceess(this.config.treeId, selectNode.refpk);\n                    }\n                }\n                this.refreshTreeNode(this.config.treeId,selectNode.pid);\n\n            }\n        });\n    }\n\n    /**\n     * checkbox change 事件\n     */\n    onCheckShowDisable(checked){\n        this.setState(\n            {checked:!this.state.checked},\n            () => {\n                this.onRefresh();\n            }\n        );\n    }\n\n\n    /**\n     * 财务组织参照 选中事件\n     */\n    onOrgChange(value){\n        this.setState({\n            curOrg: value\n        },()=>{\n            this.onRefresh()\n        });\n    }\n\n    buttonClick(props,id){\n        switch (id) {\n            case 'save':\n            //保存\n                this.onSaveEps();\n                break;\n            case 'saveadd':\n            //保存新增\n                this.onSaveAddEps();\n                break;\n            case 'cancel':\n                //取消\n                //需要先回收编码\n                promptBox({\n                    color:'warning',// 提示类别默认\"success\"， \"success\"/\"info\"/\"warning\"/\"danger\",非必输\n                    title: this.state.json['10140CSCLG-000037'],// 提示标题, 默认不同类别下分别为：\"已成功\"/\"帮助信息\"/\"请注意\"/\"出错啦\",非必输/* 国际化处理： 请注意*/\n                    noFooter: false,// 是否显示底部按钮(确定、取消),默认显示(false),非必输\n                    hasCloseBtn:false,\n                    content: this.state.json['10140CSCLG-000026'],/* 国际化处理： 您确定要取消吗？*/\n                    beSureBtnClick: () =>{\n                        let pk_custsaleclass = this.props.form.getFormItemsValue(this.config.formId,'pk_custsaleclass').value;\n                        let code = this.props.form.getFormItemsValue(this.config.formId,'code').value;\n                        if(pk_custsaleclass || !code){\n                            this.onCancelEps();\n                            return ;\n                        }\n                        ajax({\n                            url: this.config.urls.rollbackCodeUrl,\n                            data: {\n                                code:code,\n                                pk_prg:this.state.curOrg,\n                                nodetype:this.config.nodeType\n                            }, //参数带上选中的行政组织\n                            success:(result)=>{\n                                if(result.success){\n\n                                }\n                            }\n                        });\n                        this.onCancelEps();\n                    }   \n                })\n                break;\n            case 'refresh':\n            //刷新  \n                let selectedtreeNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                setDefData('custsaleclass_btnopr',props.config.datasource,'refresh');\n                this.onRefresh();\n                if (selectedtreeNode){\n                    this.onSelectTree(selectedtreeNode.refpk);\n                }\n                break;\n            case 'print':\n                let selectedprintNode = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                if (!selectedprintNode) {\n\n                    toast({content: this.state.json['10140CSCLG-000027'], color: 'warning'});//默认top/* 国际化处理： 请选中对应的树节点！*/\n                    return;\n\n                }\n                let pks = cacheTools.get('allpks');\n                if(pks.length <= 0){\n                    toast({content: this.state.json['10140CSCLG-000028'], color: 'warning'});/* 国际化处理： 没有要打印的数据！*/\n                    return;\n                }\n                print(\n                    'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                    urls.printUrl, \n                    {\n                        //billtype:'',  //单据类型\n                        funcode: props.config.appcode,      //功能节点编码，即模板编码\n                        nodekey:'custsaleclass',     //模板节点标识\n                        oids: pks    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                    },false\n                );\n                break;\n            case 'export':\n                let selectedprintNode1 = this.props.syncTree.getSelectNode(this.config.treeId);//获得选中节点\n                if (!selectedprintNode1) {\n\n                    toast({content: this.state.json['10140CSCLG-000027'], color: 'warning'});//默认top/* 国际化处理： 请选中对应的树节点！*/\n                    return;\n\n                }\n                let pks1 = cacheTools.get('allpks');\n                if(pks1.length <= 0){\n                    toast({content: this.state.json['10140CSCLG-000029'], color: 'warning'});/* 国际化处理： 没有要输出的数据！*/\n                    return;\n                }\n                this.setState({\n                    pks: pks1\n                 },this.refs.printOutput.open());\n                // print(\n                //     'pdf',  //支持两类: 'html'为模板打印, 'pdf'为pdf打印\n                //     urls.printUrl, \n                //     {\n                //         //billtype:'',  //单据类型\n                //         funcode: '10140CSCLG',      //功能节点编码，即模板编码\n                //         //nodekey:'',     //模板节点标识\n                //         // nodekey:'assprinttem',  \n                //         outputType:'output',\n                //         oids: pks1    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                //     }\n                // );\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 渲染\n     * @returns {*}\n     */\n    render(){\n        /**\n         *  经过createPage方法后，初始对象都放到了props中\n         *  例如 asyncTree,syncTree,form,table……\n         *  我们用的话直接从props里取就可以了\n         * */\n         //DragWidthCom 平台出的左右布局的组件  专用于树卡和树表\n        const {asyncTree,button, syncTree, modal,DragWidthCom,treeTable,form } = this.props;\n        const { createTreeTable } = treeTable;\n        let { createButtonApp } = button;\n        let { createForm } = form;\n        let {createSyncTree} = syncTree;\n        let { createModal } = modal;\n        let {createAsyncTree} = asyncTree;//创建异步树，需要引入这个\n        \n        return(\n\n            <div className='nc-bill-tree-card'>\n                {createModal('modal',{noFooter:false})}\n                {/* 头部 header*/}\n                <div className='header'>\n                    {/* 标题 title*/}\n                    {createPageIcon()}\n                    <div className=\"title\">{this.props.config.title}</div>            \n                    {this.config.nodeType==='ORG_NODE'?(\n                        <div className=\"orgref\">\n                            {BusinessUnitTreeRef({\n                                onChange:this.onOrgChange.bind(this),\n                                value:this.state.curOrg,\n                                disabled: this.state.disabledSearch,\n                                queryCondition : () => {\n                                    return {\n                                        TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder',\n                                        AppCode:this.props.config.appcode\n                                    }\n                                },\n\n                                refName:this.state.json['10140CSCLG-000030'],/* 国际化处理： 组织*/\n                                placeholder:this.state.json['10140CSCLG-000030']/* 国际化处理： 组织*/\n                            })}\n                        </div>\n                    ):('')\n                    }\n                    <span className=\"showOff\">\n                        <NCCheckbox \n                            checked={this.state.checked}\n                            onChange = {this.onCheckShowDisable.bind(this)}\n                            disabled = {this.state.showoffDisable}\n                            >{this.state.json['10140CSCLG-000033']/*国际化处理： 显示停用*/ }</NCCheckbox> \n                    </span>\n                    {/* 按钮组 btn-group*/}\n                    <div className=\"btn-group\">\n                        {createButtonApp({\n                            area: 'header-button-area',//按钮注册中的按钮区域\n                            //buttonLimit: 5, \n                            onButtonClick: this.buttonClick.bind(this)\n                            //popContainer: document.querySelector('.header-button-area')\n                        })}\n                    </div>\n                </div>\n                {/* 树卡区域 */}\n                <div className=\"tree-card\">\n                    <DragWidthCom\n                         // 左树区域\n                        leftDom = {\n                            <div className=\"tree-area\">\n                                {createSyncTree({\n                                    treeId :this.config.treeId,\n                                    disabledSearch: this.state.disabledSearch,\n                                    needEdit: true, //不启用编辑\n                                    showLine: false, //显示连线\n                                    needSearch: true, //是否需要搜索框\n                                    onSelectEve: this.onSelectTree.bind(this),//选择\n                                    onMouseEnterEve:this.onMouseEnterEve.bind(this),\n                                    clickEditIconEve: this.onEditEps.bind(this), //编辑点击 回调\n                                    clickAddIconEve: this.onAddEps.bind(this), //新增点击 回调\n                                    clickDelIconEve: this.onDeleteEps.bind(this), // 删除点击 回调\n                                    showModal:false\n\n                                })}\n                            </div>}     //左侧区域dom\n                         // 右卡片区域\n                        rightDom = {\n                            <div className=\"card-area\">\n                                {createForm(this.config.formId, {\n                                    cancelPSwitch: true,\n                                    onAfterEvent: this.onAfterFormEvent.bind(this),\n                                    onBeforeEvent:this.onBeforeFormEvent.bind(this)\n                                })\n                                }\n                            </div> }     //右侧区域dom\n\n                        defLeftWid='280px'      // 默认左侧区域宽度，px/百分百 \n                    />\n                    <PrintOutput\n                        ref='printOutput'\n                        url={urls.printUrl}\n                        data={{\n                            funcode:'10140CSCLG',      //功能节点编码，即模板编码\n                            nodekey:'custsaleclass',     //模板节点标识\n                            oids: this.state.pks,    //或['1001A41000000000A9LR','1001A410000000009JDD']  单据pk  oids含有多个元素时为批量打印,\n                            outputType: \"output\"\n                        }}\n                        //callback={this.onSubmit}\n                    >\n                    </PrintOutput>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\n/**\n * 创建页面\n */\nexport default CustsaleClass = createPage({\n    billinfo:[{\n        billtype: 'form',\n        pagecode: pageCode,\n        headcode: formId\n    }],\n    //initTemplate: initTemplate,\n    mutiLangCode: '10140CSCLG'\n})(CustsaleClass)\n"],"sourceRoot":""}